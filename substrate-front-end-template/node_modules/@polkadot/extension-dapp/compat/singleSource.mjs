// Copyright 2019-2021 @polkadot/extension-dapp authors & contributors
// SPDX-License-Identifier: Apache-2.0
// RxJs interface, only the bare-bones of what we need here
// transfor the SingleSource accounts into a simple address/name array
function transformAccounts(accounts) {
  return accounts.map(({
    address,
    name
  }) => ({
    address,
    name
  }));
} // add a compat interface of SingleSource to window.injectedWeb3


function injectSingleSource(win) {
  let accounts = []; // we don't yet have an accounts subscribe on the interface, simply get the
  // accounts and store them, any get will resolve the last found values

  win.SingleSource.accounts$.subscribe(_accounts => {
    accounts = transformAccounts(_accounts);
  }); // decorate the compat interface

  win.injectedWeb3.SingleSource = {
    // eslint-disable-next-line @typescript-eslint/no-unused-vars,@typescript-eslint/require-await
    enable: async origin => ({
      accounts: {
        // eslint-disable-next-line @typescript-eslint/require-await
        get: async () => accounts,
        subscribe: cb => {
          const sub = win.SingleSource.accounts$.subscribe(accounts => {
            cb(transformAccounts(accounts));
          });
          return () => {
            sub.unsubscribe();
          };
        }
      },
      signer: win.SingleSource.signer
    }),
    version: '0.0.0'
  };
} // returns the SingleSource instance, as per
// https://github.com/cennznet/singlesource-extension/blob/f7cb35b54e820bf46339f6b88ffede1b8e140de0/react-example/src/App.js#L19


export default function initSingleSource() {
  return new Promise(resolve => {
    window.addEventListener('load', () => {
      const win = window;

      if (win.SingleSource) {
        injectSingleSource(win);
        resolve(true);
      } else {
        resolve(false);
      }
    });
  });
}