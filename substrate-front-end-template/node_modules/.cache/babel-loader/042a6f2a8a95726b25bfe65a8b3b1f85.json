{"ast":null,"code":"// Copyright 2017-2021 @polkadot/keyring authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { hexToU8a } from '@polkadot/util';\nimport { createPair } from \"./pair/index.mjs\";\nimport Keyring from \"./index.mjs\"; // NOTE This is not great since we have the secretKey here explicitly, but a testing\n// keyring is for testing - what happens is that in most cases the keyring is initialises\n// before anything else. Since the sr25519 crypto is async, this creates problems with\n// adding the keys when only the keyring is used.\n\nexport const PAIRS = [{\n  publicKey: hexToU8a('0xd43593c715fdd31c61141abd04a99fd6822c8558854ccde39a5684e7a56da27d'),\n  secretKey: hexToU8a('0x98319d4ff8a9508c4bb0cf0b5a78d760a0b2082c02775e6e82370816fedfff48925a225d97aa00682d6a59b95b18780c10d7032336e88f3442b42361f4a66011'),\n  seed: 'Alice'\n}, {\n  publicKey: hexToU8a('0xbe5ddb1579b72e84524fc29e78609e3caf42e85aa118ebfe0b0ad404b5bdd25f'),\n  secretKey: hexToU8a('0xe8da6c9d810e020f5e3c7f5af2dea314cbeaa0d72bc6421e92c0808a0c584a6046ab28e97c3ffc77fe12b5a4d37e8cd4afbfebbf2391ffc7cb07c0f38c023efd'),\n  seed: 'Alice//stash'\n}, {\n  publicKey: hexToU8a('0x8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48'),\n  secretKey: hexToU8a('0x081ff694633e255136bdb456c20a5fc8fed21f8b964c11bb17ff534ce80ebd5941ae88f85d0c1bfc37be41c904e1dfc01de8c8067b0d6d5df25dd1ac0894a325'),\n  seed: 'Bob'\n}, {\n  publicKey: hexToU8a('0xfe65717dad0447d715f660a0a58411de509b42e6efb8375f562f58a554d5860e'),\n  secretKey: hexToU8a('0xc006507cdfc267a21532394c49ca9b754ca71de21e15a1cdf807c7ceab6d0b6c3ed408d9d35311540dcd54931933e67cf1ea10d46f75408f82b789d9bd212fde'),\n  seed: 'Bob//stash'\n}, {\n  publicKey: hexToU8a('0x90b5ab205c6974c9ea841be688864633dc9ca8a357843eeacf2314649965fe22'),\n  secretKey: hexToU8a('0xa8f2d83016052e5d6d77b2f6fd5d59418922a09024cda701b3c34369ec43a7668faf12ff39cd4e5d92bb773972f41a7a5279ebc2ed92264bed8f47d344f8f18c'),\n  seed: 'Charlie'\n}, {\n  publicKey: hexToU8a('0x306721211d5404bd9da88e0204360a1a9ab8b87c66c1bc2fcdd37f3c2222cc20'),\n  secretKey: hexToU8a('0x20e05482ca4677e0edbc58ae9a3a59f6ed3b1a9484ba17e64d6fe8688b2b7b5d108c4487b9323b98b11fe36cb301b084e920f7b7895536809a6d62a451b25568'),\n  seed: 'Dave'\n}, {\n  publicKey: hexToU8a('0xe659a7a1628cdd93febc04a4e0646ea20e9f5f0ce097d9a05290d4a9e054df4e'),\n  secretKey: hexToU8a('0x683576abfd5dc35273e4264c23095a1bf21c14517bece57c7f0cc5c0ed4ce06a3dbf386b7828f348abe15d76973a72009e6ef86a5c91db2990cb36bb657c6587'),\n  seed: 'Eve'\n}, {\n  publicKey: hexToU8a('0x1cbd2d43530a44705ad088af313e18f80b53ef16b36177cd4b77b846f2a5f07c'),\n  secretKey: hexToU8a('0xb835c20f450079cf4f513900ae9faf8df06ad86c681884122c752a4b2bf74d4303e4f21bc6cc62bb4eeed5a9cce642c25e2d2ac1464093b50f6196d78e3a7426'),\n  seed: 'Ferdie'\n}];\n/**\n * @name testKeyring\n * @summary Create an instance of Keyring pre-populated with locked test accounts\n * @description The test accounts (i.e. alice, bob, dave, eve, ferdie)\n * are available on the dev chain and each test account is initialized with DOT funds.\n */\n\nexport function createTestKeyring(options = {}, isDerived = true) {\n  const keyring = new Keyring(options);\n  PAIRS.forEach(({\n    name,\n    publicKey,\n    secretKey,\n    seed,\n    type = 'sr25519'\n  }) => {\n    const meta = {\n      isTesting: true,\n      name: name || seed.replace('//', '_').toLowerCase()\n    };\n    const pair = !isDerived && !name ? keyring.addFromUri(seed, meta, options.type) : keyring.addPair(createPair({\n      toSS58: keyring.encodeAddress,\n      type\n    }, {\n      publicKey,\n      secretKey\n    }, meta));\n\n    pair.lock = () => {// we don't have lock/unlock functionality here\n    };\n  });\n  return keyring;\n}","map":{"version":3,"sources":["/Users/bmacer/substrate-node-template/substrate-front-end-template/node_modules/@polkadot/keyring/testing.mjs"],"names":["hexToU8a","createPair","Keyring","PAIRS","publicKey","secretKey","seed","createTestKeyring","options","isDerived","keyring","forEach","name","type","meta","isTesting","replace","toLowerCase","pair","addFromUri","addPair","toSS58","encodeAddress","lock"],"mappings":"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","sourcesContent":["// Copyright 2017-2021 @polkadot/keyring authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { hexToU8a } from '@polkadot/util';\nimport { createPair } from \"./pair/index.mjs\";\nimport Keyring from \"./index.mjs\";\n// NOTE This is not great since we have the secretKey here explicitly, but a testing\n// keyring is for testing - what happens is that in most cases the keyring is initialises\n// before anything else. Since the sr25519 crypto is async, this creates problems with\n// adding the keys when only the keyring is used.\nexport const PAIRS = [{\n  publicKey: hexToU8a('0xd43593c715fdd31c61141abd04a99fd6822c8558854ccde39a5684e7a56da27d'),\n  secretKey: hexToU8a('0x98319d4ff8a9508c4bb0cf0b5a78d760a0b2082c02775e6e82370816fedfff48925a225d97aa00682d6a59b95b18780c10d7032336e88f3442b42361f4a66011'),\n  seed: 'Alice'\n}, {\n  publicKey: hexToU8a('0xbe5ddb1579b72e84524fc29e78609e3caf42e85aa118ebfe0b0ad404b5bdd25f'),\n  secretKey: hexToU8a('0xe8da6c9d810e020f5e3c7f5af2dea314cbeaa0d72bc6421e92c0808a0c584a6046ab28e97c3ffc77fe12b5a4d37e8cd4afbfebbf2391ffc7cb07c0f38c023efd'),\n  seed: 'Alice//stash'\n}, {\n  publicKey: hexToU8a('0x8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48'),\n  secretKey: hexToU8a('0x081ff694633e255136bdb456c20a5fc8fed21f8b964c11bb17ff534ce80ebd5941ae88f85d0c1bfc37be41c904e1dfc01de8c8067b0d6d5df25dd1ac0894a325'),\n  seed: 'Bob'\n}, {\n  publicKey: hexToU8a('0xfe65717dad0447d715f660a0a58411de509b42e6efb8375f562f58a554d5860e'),\n  secretKey: hexToU8a('0xc006507cdfc267a21532394c49ca9b754ca71de21e15a1cdf807c7ceab6d0b6c3ed408d9d35311540dcd54931933e67cf1ea10d46f75408f82b789d9bd212fde'),\n  seed: 'Bob//stash'\n}, {\n  publicKey: hexToU8a('0x90b5ab205c6974c9ea841be688864633dc9ca8a357843eeacf2314649965fe22'),\n  secretKey: hexToU8a('0xa8f2d83016052e5d6d77b2f6fd5d59418922a09024cda701b3c34369ec43a7668faf12ff39cd4e5d92bb773972f41a7a5279ebc2ed92264bed8f47d344f8f18c'),\n  seed: 'Charlie'\n}, {\n  publicKey: hexToU8a('0x306721211d5404bd9da88e0204360a1a9ab8b87c66c1bc2fcdd37f3c2222cc20'),\n  secretKey: hexToU8a('0x20e05482ca4677e0edbc58ae9a3a59f6ed3b1a9484ba17e64d6fe8688b2b7b5d108c4487b9323b98b11fe36cb301b084e920f7b7895536809a6d62a451b25568'),\n  seed: 'Dave'\n}, {\n  publicKey: hexToU8a('0xe659a7a1628cdd93febc04a4e0646ea20e9f5f0ce097d9a05290d4a9e054df4e'),\n  secretKey: hexToU8a('0x683576abfd5dc35273e4264c23095a1bf21c14517bece57c7f0cc5c0ed4ce06a3dbf386b7828f348abe15d76973a72009e6ef86a5c91db2990cb36bb657c6587'),\n  seed: 'Eve'\n}, {\n  publicKey: hexToU8a('0x1cbd2d43530a44705ad088af313e18f80b53ef16b36177cd4b77b846f2a5f07c'),\n  secretKey: hexToU8a('0xb835c20f450079cf4f513900ae9faf8df06ad86c681884122c752a4b2bf74d4303e4f21bc6cc62bb4eeed5a9cce642c25e2d2ac1464093b50f6196d78e3a7426'),\n  seed: 'Ferdie'\n}];\n/**\n * @name testKeyring\n * @summary Create an instance of Keyring pre-populated with locked test accounts\n * @description The test accounts (i.e. alice, bob, dave, eve, ferdie)\n * are available on the dev chain and each test account is initialized with DOT funds.\n */\n\nexport function createTestKeyring(options = {}, isDerived = true) {\n  const keyring = new Keyring(options);\n  PAIRS.forEach(({\n    name,\n    publicKey,\n    secretKey,\n    seed,\n    type = 'sr25519'\n  }) => {\n    const meta = {\n      isTesting: true,\n      name: name || seed.replace('//', '_').toLowerCase()\n    };\n    const pair = !isDerived && !name ? keyring.addFromUri(seed, meta, options.type) : keyring.addPair(createPair({\n      toSS58: keyring.encodeAddress,\n      type\n    }, {\n      publicKey,\n      secretKey\n    }, meta));\n\n    pair.lock = () => {// we don't have lock/unlock functionality here\n    };\n  });\n  return keyring;\n}"]},"metadata":{},"sourceType":"module"}