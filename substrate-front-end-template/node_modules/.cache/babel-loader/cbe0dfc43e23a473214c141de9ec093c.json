{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n} // Copyright 2017-2021 @polkadot/types-known authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\n/* eslint-disable sort-keys */\n// structs need to be in order\n\n/* eslint-disable sort-keys */\n\n\nconst sharedTypes = {\n  AccountInfo: 'AccountInfoWithProviders',\n  Address: 'MultiAddress',\n  FullIdentification: '()',\n  // No staking, only session (as per config)\n  LookupSource: 'MultiAddress',\n  Keys: 'SessionKeys6'\n};\nconst versioned = [{\n  minmax: [0, 9],\n  types: _objectSpread(_objectSpread({}, sharedTypes), {}, {\n    AccountInfo: 'AccountInfoWithRefCount',\n    Address: 'AccountId',\n    CompactAssignments: 'CompactAssignmentsTo257',\n    LookupSource: 'AccountId',\n    RefCount: 'RefCountTo259',\n    RewardDestination: 'RewardDestinationTo257',\n    Keys: 'SessionKeys5'\n  })\n}, {\n  minmax: [10, 12],\n  types: _objectSpread(_objectSpread({}, sharedTypes), {}, {\n    AccountInfo: 'AccountInfoWithRefCount',\n    Address: 'AccountId',\n    Keys: 'SessionKeys5',\n    LookupSource: 'AccountId'\n  })\n}, {\n  minmax: [13, 201],\n  types: _objectSpread(_objectSpread({}, sharedTypes), {}, {\n    AccountInfo: 'AccountInfoWithRefCount',\n    Address: 'AccountId',\n    LookupSource: 'AccountId'\n  })\n}, {\n  minmax: [202, undefined],\n  types: _objectSpread({}, sharedTypes)\n}];\nexport default versioned;","map":{"version":3,"sources":["/Users/bmacer/substrate-node-template/substrate-front-end-template/node_modules/@polkadot/types-known/spec/rococo.mjs"],"names":["_defineProperty","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","getOwnPropertyDescriptors","defineProperties","defineProperty","sharedTypes","AccountInfo","Address","FullIdentification","LookupSource","Keys","versioned","minmax","types","CompactAssignments","RefCount","RewardDestination","undefined"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,2CAA5B;;AAEA,SAASC,OAAT,CAAiBC,MAAjB,EAAyBC,cAAzB,EAAyC;AAAE,MAAIC,IAAI,GAAGC,MAAM,CAACD,IAAP,CAAYF,MAAZ,CAAX;;AAAgC,MAAIG,MAAM,CAACC,qBAAX,EAAkC;AAAE,QAAIC,OAAO,GAAGF,MAAM,CAACC,qBAAP,CAA6BJ,MAA7B,CAAd;AAAoD,QAAIC,cAAJ,EAAoBI,OAAO,GAAGA,OAAO,CAACC,MAAR,CAAe,UAAUC,GAAV,EAAe;AAAE,aAAOJ,MAAM,CAACK,wBAAP,CAAgCR,MAAhC,EAAwCO,GAAxC,EAA6CE,UAApD;AAAiE,KAAjG,CAAV;AAA8GP,IAAAA,IAAI,CAACQ,IAAL,CAAUC,KAAV,CAAgBT,IAAhB,EAAsBG,OAAtB;AAAiC;;AAAC,SAAOH,IAAP;AAAc;;AAErV,SAASU,aAAT,CAAuBC,MAAvB,EAA+B;AAAE,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGC,SAAS,CAACC,MAA9B,EAAsCF,CAAC,EAAvC,EAA2C;AAAE,QAAIG,MAAM,GAAGF,SAAS,CAACD,CAAD,CAAT,IAAgB,IAAhB,GAAuBC,SAAS,CAACD,CAAD,CAAhC,GAAsC,EAAnD;;AAAuD,QAAIA,CAAC,GAAG,CAAR,EAAW;AAAEf,MAAAA,OAAO,CAACI,MAAM,CAACc,MAAD,CAAP,EAAiB,IAAjB,CAAP,CAA8BC,OAA9B,CAAsC,UAAUC,GAAV,EAAe;AAAErB,QAAAA,eAAe,CAACe,MAAD,EAASM,GAAT,EAAcF,MAAM,CAACE,GAAD,CAApB,CAAf;AAA4C,OAAnG;AAAuG,KAApH,MAA0H,IAAIhB,MAAM,CAACiB,yBAAX,EAAsC;AAAEjB,MAAAA,MAAM,CAACkB,gBAAP,CAAwBR,MAAxB,EAAgCV,MAAM,CAACiB,yBAAP,CAAiCH,MAAjC,CAAhC;AAA4E,KAApH,MAA0H;AAAElB,MAAAA,OAAO,CAACI,MAAM,CAACc,MAAD,CAAP,CAAP,CAAwBC,OAAxB,CAAgC,UAAUC,GAAV,EAAe;AAAEhB,QAAAA,MAAM,CAACmB,cAAP,CAAsBT,MAAtB,EAA8BM,GAA9B,EAAmChB,MAAM,CAACK,wBAAP,CAAgCS,MAAhC,EAAwCE,GAAxC,CAAnC;AAAmF,OAApI;AAAwI;AAAE;;AAAC,SAAON,MAAP;AAAgB,C,CAEthB;AACA;;AAEA;AACA;;AAEA;;;AACA,MAAMU,WAAW,GAAG;AAClBC,EAAAA,WAAW,EAAE,0BADK;AAElBC,EAAAA,OAAO,EAAE,cAFS;AAGlBC,EAAAA,kBAAkB,EAAE,IAHF;AAIlB;AACAC,EAAAA,YAAY,EAAE,cALI;AAMlBC,EAAAA,IAAI,EAAE;AANY,CAApB;AAQA,MAAMC,SAAS,GAAG,CAAC;AACjBC,EAAAA,MAAM,EAAE,CAAC,CAAD,EAAI,CAAJ,CADS;AAEjBC,EAAAA,KAAK,EAAEnB,aAAa,CAACA,aAAa,CAAC,EAAD,EAAKW,WAAL,CAAd,EAAiC,EAAjC,EAAqC;AACvDC,IAAAA,WAAW,EAAE,yBAD0C;AAEvDC,IAAAA,OAAO,EAAE,WAF8C;AAGvDO,IAAAA,kBAAkB,EAAE,yBAHmC;AAIvDL,IAAAA,YAAY,EAAE,WAJyC;AAKvDM,IAAAA,QAAQ,EAAE,eAL6C;AAMvDC,IAAAA,iBAAiB,EAAE,wBANoC;AAOvDN,IAAAA,IAAI,EAAE;AAPiD,GAArC;AAFH,CAAD,EAWf;AACDE,EAAAA,MAAM,EAAE,CAAC,EAAD,EAAK,EAAL,CADP;AAEDC,EAAAA,KAAK,EAAEnB,aAAa,CAACA,aAAa,CAAC,EAAD,EAAKW,WAAL,CAAd,EAAiC,EAAjC,EAAqC;AACvDC,IAAAA,WAAW,EAAE,yBAD0C;AAEvDC,IAAAA,OAAO,EAAE,WAF8C;AAGvDG,IAAAA,IAAI,EAAE,cAHiD;AAIvDD,IAAAA,YAAY,EAAE;AAJyC,GAArC;AAFnB,CAXe,EAmBf;AACDG,EAAAA,MAAM,EAAE,CAAC,EAAD,EAAK,GAAL,CADP;AAEDC,EAAAA,KAAK,EAAEnB,aAAa,CAACA,aAAa,CAAC,EAAD,EAAKW,WAAL,CAAd,EAAiC,EAAjC,EAAqC;AACvDC,IAAAA,WAAW,EAAE,yBAD0C;AAEvDC,IAAAA,OAAO,EAAE,WAF8C;AAGvDE,IAAAA,YAAY,EAAE;AAHyC,GAArC;AAFnB,CAnBe,EA0Bf;AACDG,EAAAA,MAAM,EAAE,CAAC,GAAD,EAAMK,SAAN,CADP;AAEDJ,EAAAA,KAAK,EAAEnB,aAAa,CAAC,EAAD,EAAKW,WAAL;AAFnB,CA1Be,CAAlB;AA8BA,eAAeM,SAAf","sourcesContent":["import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n// Copyright 2017-2021 @polkadot/types-known authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\n/* eslint-disable sort-keys */\n// structs need to be in order\n\n/* eslint-disable sort-keys */\nconst sharedTypes = {\n  AccountInfo: 'AccountInfoWithProviders',\n  Address: 'MultiAddress',\n  FullIdentification: '()',\n  // No staking, only session (as per config)\n  LookupSource: 'MultiAddress',\n  Keys: 'SessionKeys6'\n};\nconst versioned = [{\n  minmax: [0, 9],\n  types: _objectSpread(_objectSpread({}, sharedTypes), {}, {\n    AccountInfo: 'AccountInfoWithRefCount',\n    Address: 'AccountId',\n    CompactAssignments: 'CompactAssignmentsTo257',\n    LookupSource: 'AccountId',\n    RefCount: 'RefCountTo259',\n    RewardDestination: 'RewardDestinationTo257',\n    Keys: 'SessionKeys5'\n  })\n}, {\n  minmax: [10, 12],\n  types: _objectSpread(_objectSpread({}, sharedTypes), {}, {\n    AccountInfo: 'AccountInfoWithRefCount',\n    Address: 'AccountId',\n    Keys: 'SessionKeys5',\n    LookupSource: 'AccountId'\n  })\n}, {\n  minmax: [13, 201],\n  types: _objectSpread(_objectSpread({}, sharedTypes), {}, {\n    AccountInfo: 'AccountInfoWithRefCount',\n    Address: 'AccountId',\n    LookupSource: 'AccountId'\n  })\n}, {\n  minmax: [202, undefined],\n  types: _objectSpread({}, sharedTypes)\n}];\nexport default versioned;"]},"metadata":{},"sourceType":"module"}