{"ast":null,"code":"// Copyright 2017-2021 @polkadot/metadata authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { stringCamelCase } from '@polkadot/util';\n\nfunction isError({\n  error,\n  index\n}, sectionIndex, errorIndex) {\n  return index.eq(sectionIndex) && error.eq(errorIndex);\n}\n/** @internal */\n\n\nexport function decorateErrors(_, {\n  modules\n}, metaVersion) {\n  return modules.reduce((result, {\n    errors,\n    index,\n    name\n  }, _sectionIndex) => {\n    if (!errors.length) {\n      return result;\n    }\n\n    const sectionIndex = metaVersion >= 12 ? index.toNumber() : _sectionIndex;\n    result[stringCamelCase(name)] = errors.reduce((newModule, meta, errorIndex) => {\n      // we don't camelCase the error name\n      newModule[meta.name.toString()] = {\n        is: moduleError => isError(moduleError, sectionIndex, errorIndex),\n        meta\n      };\n      return newModule;\n    }, {});\n    return result;\n  }, {});\n}","map":{"version":3,"sources":["/Users/bmacer/substrate-node-template/substrate-front-end-template/node_modules/@polkadot/metadata/decorate/errors/index.mjs"],"names":["stringCamelCase","isError","error","index","sectionIndex","errorIndex","eq","decorateErrors","_","modules","metaVersion","reduce","result","errors","name","_sectionIndex","length","toNumber","newModule","meta","toString","is","moduleError"],"mappings":"AAAA;AACA;AACA,SAASA,eAAT,QAAgC,gBAAhC;;AAEA,SAASC,OAAT,CAAiB;AACfC,EAAAA,KADe;AAEfC,EAAAA;AAFe,CAAjB,EAGGC,YAHH,EAGiBC,UAHjB,EAG6B;AAC3B,SAAOF,KAAK,CAACG,EAAN,CAASF,YAAT,KAA0BF,KAAK,CAACI,EAAN,CAASD,UAAT,CAAjC;AACD;AACD;;;AAGA,OAAO,SAASE,cAAT,CAAwBC,CAAxB,EAA2B;AAChCC,EAAAA;AADgC,CAA3B,EAEJC,WAFI,EAES;AACd,SAAOD,OAAO,CAACE,MAAR,CAAe,CAACC,MAAD,EAAS;AAC7BC,IAAAA,MAD6B;AAE7BV,IAAAA,KAF6B;AAG7BW,IAAAA;AAH6B,GAAT,EAInBC,aAJmB,KAID;AACnB,QAAI,CAACF,MAAM,CAACG,MAAZ,EAAoB;AAClB,aAAOJ,MAAP;AACD;;AAED,UAAMR,YAAY,GAAGM,WAAW,IAAI,EAAf,GAAoBP,KAAK,CAACc,QAAN,EAApB,GAAuCF,aAA5D;AACAH,IAAAA,MAAM,CAACZ,eAAe,CAACc,IAAD,CAAhB,CAAN,GAAgCD,MAAM,CAACF,MAAP,CAAc,CAACO,SAAD,EAAYC,IAAZ,EAAkBd,UAAlB,KAAiC;AAC7E;AACAa,MAAAA,SAAS,CAACC,IAAI,CAACL,IAAL,CAAUM,QAAV,EAAD,CAAT,GAAkC;AAChCC,QAAAA,EAAE,EAAEC,WAAW,IAAIrB,OAAO,CAACqB,WAAD,EAAclB,YAAd,EAA4BC,UAA5B,CADM;AAEhCc,QAAAA;AAFgC,OAAlC;AAIA,aAAOD,SAAP;AACD,KAP+B,EAO7B,EAP6B,CAAhC;AAQA,WAAON,MAAP;AACD,GAnBM,EAmBJ,EAnBI,CAAP;AAoBD","sourcesContent":["// Copyright 2017-2021 @polkadot/metadata authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { stringCamelCase } from '@polkadot/util';\n\nfunction isError({\n  error,\n  index\n}, sectionIndex, errorIndex) {\n  return index.eq(sectionIndex) && error.eq(errorIndex);\n}\n/** @internal */\n\n\nexport function decorateErrors(_, {\n  modules\n}, metaVersion) {\n  return modules.reduce((result, {\n    errors,\n    index,\n    name\n  }, _sectionIndex) => {\n    if (!errors.length) {\n      return result;\n    }\n\n    const sectionIndex = metaVersion >= 12 ? index.toNumber() : _sectionIndex;\n    result[stringCamelCase(name)] = errors.reduce((newModule, meta, errorIndex) => {\n      // we don't camelCase the error name\n      newModule[meta.name.toString()] = {\n        is: moduleError => isError(moduleError, sectionIndex, errorIndex),\n        meta\n      };\n      return newModule;\n    }, {});\n    return result;\n  }, {});\n}"]},"metadata":{},"sourceType":"module"}