{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getModuleTypes = getModuleTypes;\nexports.getSpecExtensions = getSpecExtensions;\nexports.getSpecTypes = getSpecTypes;\nexports.getSpecRpc = getSpecRpc;\nexports.getSpecAlias = getSpecAlias;\nexports.getUpgradeVersion = getUpgradeVersion;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _util = require(\"@polkadot/util\");\n\nvar _chain = _interopRequireDefault(require(\"./chain\"));\n\nvar _modules = _interopRequireDefault(require(\"./modules\"));\n\nvar _spec = _interopRequireDefault(require(\"./spec\"));\n\nvar _upgrades = _interopRequireDefault(require(\"./upgrades\"));\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        (0, _defineProperty2.default)(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n} // flatten a VersionedType[] into a Record<string, string>\n\n/** @internal */\n\n\nfunction filterVersions(versions = [], specVersion) {\n  return versions.filter(({\n    minmax: [min, max]\n  }) => ((0, _util.isUndefined)(min) || specVersion >= min) && ((0, _util.isUndefined)(max) || specVersion <= max)).reduce((result, {\n    types\n  }) => _objectSpread(_objectSpread({}, result), types), {});\n}\n/**\n * @description Get types for specific modules (metadata override)\n */\n\n\nfunction getModuleTypes({\n  knownTypes\n}, section) {\n  var _knownTypes$typesAlia;\n\n  return _objectSpread(_objectSpread({}, _modules.default[section] || {}), ((_knownTypes$typesAlia = knownTypes.typesAlias) === null || _knownTypes$typesAlia === void 0 ? void 0 : _knownTypes$typesAlia[section]) || {});\n}\n/**\n * @description Based on the chain and runtimeVersion, get the applicable signed extensions (ready for registration)\n */\n\n\nfunction getSpecExtensions({\n  knownTypes\n}, chainName, specName) {\n  var _knownTypes$typesBund, _knownTypes$typesBund2, _knownTypes$typesBund3, _knownTypes$typesBund4, _knownTypes$typesBund5, _knownTypes$typesBund6;\n\n  const _chainName = chainName.toString();\n\n  const _specName = specName.toString();\n\n  return _objectSpread(_objectSpread({}, ((_knownTypes$typesBund = knownTypes.typesBundle) === null || _knownTypes$typesBund === void 0 ? void 0 : (_knownTypes$typesBund2 = _knownTypes$typesBund.spec) === null || _knownTypes$typesBund2 === void 0 ? void 0 : (_knownTypes$typesBund3 = _knownTypes$typesBund2[_specName]) === null || _knownTypes$typesBund3 === void 0 ? void 0 : _knownTypes$typesBund3.signedExtensions) || {}), ((_knownTypes$typesBund4 = knownTypes.typesBundle) === null || _knownTypes$typesBund4 === void 0 ? void 0 : (_knownTypes$typesBund5 = _knownTypes$typesBund4.chain) === null || _knownTypes$typesBund5 === void 0 ? void 0 : (_knownTypes$typesBund6 = _knownTypes$typesBund5[_chainName]) === null || _knownTypes$typesBund6 === void 0 ? void 0 : _knownTypes$typesBund6.signedExtensions) || {});\n}\n/**\n * @description Based on the chain and runtimeVersion, get the applicable types (ready for registration)\n */\n\n\nfunction getSpecTypes({\n  knownTypes\n}, chainName, specName, specVersion) {\n  var _knownTypes$typesBund7, _knownTypes$typesBund8, _knownTypes$typesBund9, _knownTypes$typesBund10, _knownTypes$typesBund11, _knownTypes$typesBund12, _knownTypes$typesSpec, _knownTypes$typesChai;\n\n  const _chainName = chainName.toString();\n\n  const _specName = specName.toString();\n\n  const _specVersion = (0, _util.bnToBn)(specVersion).toNumber(); // The order here is always, based on -\n  //   - spec then chain\n  //   - typesBundle takes higher precedence\n  //   - types is the final catch-all override\n\n\n  return _objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread({}, filterVersions(_spec.default[_specName], _specVersion)), filterVersions(_chain.default[_chainName], _specVersion)), filterVersions((_knownTypes$typesBund7 = knownTypes.typesBundle) === null || _knownTypes$typesBund7 === void 0 ? void 0 : (_knownTypes$typesBund8 = _knownTypes$typesBund7.spec) === null || _knownTypes$typesBund8 === void 0 ? void 0 : (_knownTypes$typesBund9 = _knownTypes$typesBund8[_specName]) === null || _knownTypes$typesBund9 === void 0 ? void 0 : _knownTypes$typesBund9.types, _specVersion)), filterVersions((_knownTypes$typesBund10 = knownTypes.typesBundle) === null || _knownTypes$typesBund10 === void 0 ? void 0 : (_knownTypes$typesBund11 = _knownTypes$typesBund10.chain) === null || _knownTypes$typesBund11 === void 0 ? void 0 : (_knownTypes$typesBund12 = _knownTypes$typesBund11[_chainName]) === null || _knownTypes$typesBund12 === void 0 ? void 0 : _knownTypes$typesBund12.types, _specVersion)), ((_knownTypes$typesSpec = knownTypes.typesSpec) === null || _knownTypes$typesSpec === void 0 ? void 0 : _knownTypes$typesSpec[_specName]) || {}), ((_knownTypes$typesChai = knownTypes.typesChain) === null || _knownTypes$typesChai === void 0 ? void 0 : _knownTypes$typesChai[_chainName]) || {}), knownTypes.types || {});\n}\n/**\n * @description Based on the chain and runtimeVersion, get the applicable rpc definitions (ready for registration)\n */\n\n\nfunction getSpecRpc({\n  knownTypes\n}, chainName, specName) {\n  var _knownTypes$typesBund13, _knownTypes$typesBund14, _knownTypes$typesBund15, _knownTypes$typesBund16, _knownTypes$typesBund17, _knownTypes$typesBund18;\n\n  const _chainName = chainName.toString();\n\n  const _specName = specName.toString();\n\n  return _objectSpread(_objectSpread({}, ((_knownTypes$typesBund13 = knownTypes.typesBundle) === null || _knownTypes$typesBund13 === void 0 ? void 0 : (_knownTypes$typesBund14 = _knownTypes$typesBund13.spec) === null || _knownTypes$typesBund14 === void 0 ? void 0 : (_knownTypes$typesBund15 = _knownTypes$typesBund14[_specName]) === null || _knownTypes$typesBund15 === void 0 ? void 0 : _knownTypes$typesBund15.rpc) || {}), ((_knownTypes$typesBund16 = knownTypes.typesBundle) === null || _knownTypes$typesBund16 === void 0 ? void 0 : (_knownTypes$typesBund17 = _knownTypes$typesBund16.chain) === null || _knownTypes$typesBund17 === void 0 ? void 0 : (_knownTypes$typesBund18 = _knownTypes$typesBund17[_chainName]) === null || _knownTypes$typesBund18 === void 0 ? void 0 : _knownTypes$typesBund18.rpc) || {});\n}\n/**\n * @description Based on the chain and runtimeVersion, get the applicable alias definitions (ready for registration)\n */\n\n\nfunction getSpecAlias({\n  knownTypes\n}, chainName, specName) {\n  var _knownTypes$typesBund19, _knownTypes$typesBund20, _knownTypes$typesBund21, _knownTypes$typesBund22, _knownTypes$typesBund23, _knownTypes$typesBund24;\n\n  const _chainName = chainName.toString();\n\n  const _specName = specName.toString(); // as per versions, first spec, then chain then finally non-versioned\n\n\n  return _objectSpread(_objectSpread(_objectSpread({}, ((_knownTypes$typesBund19 = knownTypes.typesBundle) === null || _knownTypes$typesBund19 === void 0 ? void 0 : (_knownTypes$typesBund20 = _knownTypes$typesBund19.spec) === null || _knownTypes$typesBund20 === void 0 ? void 0 : (_knownTypes$typesBund21 = _knownTypes$typesBund20[_specName]) === null || _knownTypes$typesBund21 === void 0 ? void 0 : _knownTypes$typesBund21.alias) || {}), ((_knownTypes$typesBund22 = knownTypes.typesBundle) === null || _knownTypes$typesBund22 === void 0 ? void 0 : (_knownTypes$typesBund23 = _knownTypes$typesBund22.chain) === null || _knownTypes$typesBund23 === void 0 ? void 0 : (_knownTypes$typesBund24 = _knownTypes$typesBund23[_chainName]) === null || _knownTypes$typesBund24 === void 0 ? void 0 : _knownTypes$typesBund24.alias) || {}), knownTypes.typesAlias || {});\n}\n/**\n * @description Returns a version record for known chains where upgrades are being tracked\n */\n\n\nfunction getUpgradeVersion(genesisHash, blockNumber) {\n  const known = _upgrades.default.find(u => genesisHash.eq(u.genesisHash));\n\n  return known ? [known.versions.reduce((last, version) => {\n    return blockNumber.gt(version.blockNumber) ? version : last;\n  }, undefined), known.versions.find(version => blockNumber.lte(version.blockNumber))] : [undefined, undefined];\n}","map":{"version":3,"sources":["/Users/bmacer/substrate-node-template/substrate-front-end-template/node_modules/@polkadot/types-known/index.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","getModuleTypes","getSpecExtensions","getSpecTypes","getSpecRpc","getSpecAlias","getUpgradeVersion","_defineProperty2","_util","_chain","_modules","_spec","_upgrades","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","default","getOwnPropertyDescriptors","defineProperties","filterVersions","versions","specVersion","minmax","min","max","isUndefined","reduce","result","types","knownTypes","section","_knownTypes$typesAlia","typesAlias","chainName","specName","_knownTypes$typesBund","_knownTypes$typesBund2","_knownTypes$typesBund3","_knownTypes$typesBund4","_knownTypes$typesBund5","_knownTypes$typesBund6","_chainName","toString","_specName","typesBundle","spec","signedExtensions","chain","_knownTypes$typesBund7","_knownTypes$typesBund8","_knownTypes$typesBund9","_knownTypes$typesBund10","_knownTypes$typesBund11","_knownTypes$typesBund12","_knownTypes$typesSpec","_knownTypes$typesChai","_specVersion","bnToBn","toNumber","typesSpec","typesChain","_knownTypes$typesBund13","_knownTypes$typesBund14","_knownTypes$typesBund15","_knownTypes$typesBund16","_knownTypes$typesBund17","_knownTypes$typesBund18","rpc","_knownTypes$typesBund19","_knownTypes$typesBund20","_knownTypes$typesBund21","_knownTypes$typesBund22","_knownTypes$typesBund23","_knownTypes$typesBund24","alias","genesisHash","blockNumber","known","find","u","eq","last","version","gt","undefined","lte"],"mappings":"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","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getModuleTypes = getModuleTypes;\nexports.getSpecExtensions = getSpecExtensions;\nexports.getSpecTypes = getSpecTypes;\nexports.getSpecRpc = getSpecRpc;\nexports.getSpecAlias = getSpecAlias;\nexports.getUpgradeVersion = getUpgradeVersion;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _util = require(\"@polkadot/util\");\n\nvar _chain = _interopRequireDefault(require(\"./chain\"));\n\nvar _modules = _interopRequireDefault(require(\"./modules\"));\n\nvar _spec = _interopRequireDefault(require(\"./spec\"));\n\nvar _upgrades = _interopRequireDefault(require(\"./upgrades\"));\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n// flatten a VersionedType[] into a Record<string, string>\n\n/** @internal */\nfunction filterVersions(versions = [], specVersion) {\n  return versions.filter(({\n    minmax: [min, max]\n  }) => ((0, _util.isUndefined)(min) || specVersion >= min) && ((0, _util.isUndefined)(max) || specVersion <= max)).reduce((result, {\n    types\n  }) => _objectSpread(_objectSpread({}, result), types), {});\n}\n/**\n * @description Get types for specific modules (metadata override)\n */\n\n\nfunction getModuleTypes({\n  knownTypes\n}, section) {\n  var _knownTypes$typesAlia;\n\n  return _objectSpread(_objectSpread({}, _modules.default[section] || {}), ((_knownTypes$typesAlia = knownTypes.typesAlias) === null || _knownTypes$typesAlia === void 0 ? void 0 : _knownTypes$typesAlia[section]) || {});\n}\n/**\n * @description Based on the chain and runtimeVersion, get the applicable signed extensions (ready for registration)\n */\n\n\nfunction getSpecExtensions({\n  knownTypes\n}, chainName, specName) {\n  var _knownTypes$typesBund, _knownTypes$typesBund2, _knownTypes$typesBund3, _knownTypes$typesBund4, _knownTypes$typesBund5, _knownTypes$typesBund6;\n\n  const _chainName = chainName.toString();\n\n  const _specName = specName.toString();\n\n  return _objectSpread(_objectSpread({}, ((_knownTypes$typesBund = knownTypes.typesBundle) === null || _knownTypes$typesBund === void 0 ? void 0 : (_knownTypes$typesBund2 = _knownTypes$typesBund.spec) === null || _knownTypes$typesBund2 === void 0 ? void 0 : (_knownTypes$typesBund3 = _knownTypes$typesBund2[_specName]) === null || _knownTypes$typesBund3 === void 0 ? void 0 : _knownTypes$typesBund3.signedExtensions) || {}), ((_knownTypes$typesBund4 = knownTypes.typesBundle) === null || _knownTypes$typesBund4 === void 0 ? void 0 : (_knownTypes$typesBund5 = _knownTypes$typesBund4.chain) === null || _knownTypes$typesBund5 === void 0 ? void 0 : (_knownTypes$typesBund6 = _knownTypes$typesBund5[_chainName]) === null || _knownTypes$typesBund6 === void 0 ? void 0 : _knownTypes$typesBund6.signedExtensions) || {});\n}\n/**\n * @description Based on the chain and runtimeVersion, get the applicable types (ready for registration)\n */\n\n\nfunction getSpecTypes({\n  knownTypes\n}, chainName, specName, specVersion) {\n  var _knownTypes$typesBund7, _knownTypes$typesBund8, _knownTypes$typesBund9, _knownTypes$typesBund10, _knownTypes$typesBund11, _knownTypes$typesBund12, _knownTypes$typesSpec, _knownTypes$typesChai;\n\n  const _chainName = chainName.toString();\n\n  const _specName = specName.toString();\n\n  const _specVersion = (0, _util.bnToBn)(specVersion).toNumber(); // The order here is always, based on -\n  //   - spec then chain\n  //   - typesBundle takes higher precedence\n  //   - types is the final catch-all override\n\n\n  return _objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread({}, filterVersions(_spec.default[_specName], _specVersion)), filterVersions(_chain.default[_chainName], _specVersion)), filterVersions((_knownTypes$typesBund7 = knownTypes.typesBundle) === null || _knownTypes$typesBund7 === void 0 ? void 0 : (_knownTypes$typesBund8 = _knownTypes$typesBund7.spec) === null || _knownTypes$typesBund8 === void 0 ? void 0 : (_knownTypes$typesBund9 = _knownTypes$typesBund8[_specName]) === null || _knownTypes$typesBund9 === void 0 ? void 0 : _knownTypes$typesBund9.types, _specVersion)), filterVersions((_knownTypes$typesBund10 = knownTypes.typesBundle) === null || _knownTypes$typesBund10 === void 0 ? void 0 : (_knownTypes$typesBund11 = _knownTypes$typesBund10.chain) === null || _knownTypes$typesBund11 === void 0 ? void 0 : (_knownTypes$typesBund12 = _knownTypes$typesBund11[_chainName]) === null || _knownTypes$typesBund12 === void 0 ? void 0 : _knownTypes$typesBund12.types, _specVersion)), ((_knownTypes$typesSpec = knownTypes.typesSpec) === null || _knownTypes$typesSpec === void 0 ? void 0 : _knownTypes$typesSpec[_specName]) || {}), ((_knownTypes$typesChai = knownTypes.typesChain) === null || _knownTypes$typesChai === void 0 ? void 0 : _knownTypes$typesChai[_chainName]) || {}), knownTypes.types || {});\n}\n/**\n * @description Based on the chain and runtimeVersion, get the applicable rpc definitions (ready for registration)\n */\n\n\nfunction getSpecRpc({\n  knownTypes\n}, chainName, specName) {\n  var _knownTypes$typesBund13, _knownTypes$typesBund14, _knownTypes$typesBund15, _knownTypes$typesBund16, _knownTypes$typesBund17, _knownTypes$typesBund18;\n\n  const _chainName = chainName.toString();\n\n  const _specName = specName.toString();\n\n  return _objectSpread(_objectSpread({}, ((_knownTypes$typesBund13 = knownTypes.typesBundle) === null || _knownTypes$typesBund13 === void 0 ? void 0 : (_knownTypes$typesBund14 = _knownTypes$typesBund13.spec) === null || _knownTypes$typesBund14 === void 0 ? void 0 : (_knownTypes$typesBund15 = _knownTypes$typesBund14[_specName]) === null || _knownTypes$typesBund15 === void 0 ? void 0 : _knownTypes$typesBund15.rpc) || {}), ((_knownTypes$typesBund16 = knownTypes.typesBundle) === null || _knownTypes$typesBund16 === void 0 ? void 0 : (_knownTypes$typesBund17 = _knownTypes$typesBund16.chain) === null || _knownTypes$typesBund17 === void 0 ? void 0 : (_knownTypes$typesBund18 = _knownTypes$typesBund17[_chainName]) === null || _knownTypes$typesBund18 === void 0 ? void 0 : _knownTypes$typesBund18.rpc) || {});\n}\n/**\n * @description Based on the chain and runtimeVersion, get the applicable alias definitions (ready for registration)\n */\n\n\nfunction getSpecAlias({\n  knownTypes\n}, chainName, specName) {\n  var _knownTypes$typesBund19, _knownTypes$typesBund20, _knownTypes$typesBund21, _knownTypes$typesBund22, _knownTypes$typesBund23, _knownTypes$typesBund24;\n\n  const _chainName = chainName.toString();\n\n  const _specName = specName.toString(); // as per versions, first spec, then chain then finally non-versioned\n\n\n  return _objectSpread(_objectSpread(_objectSpread({}, ((_knownTypes$typesBund19 = knownTypes.typesBundle) === null || _knownTypes$typesBund19 === void 0 ? void 0 : (_knownTypes$typesBund20 = _knownTypes$typesBund19.spec) === null || _knownTypes$typesBund20 === void 0 ? void 0 : (_knownTypes$typesBund21 = _knownTypes$typesBund20[_specName]) === null || _knownTypes$typesBund21 === void 0 ? void 0 : _knownTypes$typesBund21.alias) || {}), ((_knownTypes$typesBund22 = knownTypes.typesBundle) === null || _knownTypes$typesBund22 === void 0 ? void 0 : (_knownTypes$typesBund23 = _knownTypes$typesBund22.chain) === null || _knownTypes$typesBund23 === void 0 ? void 0 : (_knownTypes$typesBund24 = _knownTypes$typesBund23[_chainName]) === null || _knownTypes$typesBund24 === void 0 ? void 0 : _knownTypes$typesBund24.alias) || {}), knownTypes.typesAlias || {});\n}\n/**\n * @description Returns a version record for known chains where upgrades are being tracked\n */\n\n\nfunction getUpgradeVersion(genesisHash, blockNumber) {\n  const known = _upgrades.default.find(u => genesisHash.eq(u.genesisHash));\n\n  return known ? [known.versions.reduce((last, version) => {\n    return blockNumber.gt(version.blockNumber) ? version : last;\n  }, undefined), known.versions.find(version => blockNumber.lte(version.blockNumber))] : [undefined, undefined];\n}"]},"metadata":{},"sourceType":"script"}