{"ast":null,"code":"import _classPrivateFieldLooseBase from \"@babel/runtime/helpers/esm/classPrivateFieldLooseBase\";\nimport _classPrivateFieldLooseKey from \"@babel/runtime/helpers/esm/classPrivateFieldLooseKey\"; // Copyright 2017-2021 @polkadot/api-derive authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\nimport { Struct } from '@polkadot/types';\nimport runtimeTypes from '@polkadot/types/interfaces/runtime/definitions';\nimport { extractAuthor } from \"./util.mjs\"; // We can ignore the properties, added via Struct.with\n\nconst _Header = Struct.with(runtimeTypes.types.Header);\n/**\n * @name HeaderExtended\n * @description\n * A [[Block]] header with an additional `author` field that indicates the block author\n */\n\n\nvar _author = _classPrivateFieldLooseKey(\"author\");\n\nvar _validators = _classPrivateFieldLooseKey(\"validators\");\n\nexport class HeaderExtended extends _Header {\n  constructor(registry, header, validators) {\n    super(registry, header);\n    Object.defineProperty(this, _author, {\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, _validators, {\n      writable: true,\n      value: void 0\n    });\n    _classPrivateFieldLooseBase(this, _author)[_author] = extractAuthor(this.digest, validators);\n    _classPrivateFieldLooseBase(this, _validators)[_validators] = validators;\n  }\n  /**\n   * @description Convenience method, returns the author for the block\n   */\n\n\n  get author() {\n    return _classPrivateFieldLooseBase(this, _author)[_author];\n  }\n  /**\n   * @description Convenience method, returns the validators for the block\n   */\n\n\n  get validators() {\n    return _classPrivateFieldLooseBase(this, _validators)[_validators];\n  }\n\n}","map":{"version":3,"sources":["/Users/bmacer/substrate-node-template/substrate-front-end-template/node_modules/@polkadot/api-derive/type/HeaderExtended.mjs"],"names":["_classPrivateFieldLooseBase","_classPrivateFieldLooseKey","Struct","runtimeTypes","extractAuthor","_Header","with","types","Header","_author","_validators","HeaderExtended","constructor","registry","header","validators","Object","defineProperty","writable","value","digest","author"],"mappings":"AAAA,OAAOA,2BAAP,MAAwC,uDAAxC;AACA,OAAOC,0BAAP,MAAuC,sDAAvC,C,CACA;AACA;;AACA,SAASC,MAAT,QAAuB,iBAAvB;AACA,OAAOC,YAAP,MAAyB,gDAAzB;AACA,SAASC,aAAT,QAA8B,YAA9B,C,CAA4C;;AAE5C,MAAMC,OAAO,GAAGH,MAAM,CAACI,IAAP,CAAYH,YAAY,CAACI,KAAb,CAAmBC,MAA/B,CAAhB;AACA;AACA;AACA;AACA;AACA;;;AAGA,IAAIC,OAAO,GAAGR,0BAA0B,CAAC,QAAD,CAAxC;;AAEA,IAAIS,WAAW,GAAGT,0BAA0B,CAAC,YAAD,CAA5C;;AAEA,OAAO,MAAMU,cAAN,SAA6BN,OAA7B,CAAqC;AAC1CO,EAAAA,WAAW,CAACC,QAAD,EAAWC,MAAX,EAAmBC,UAAnB,EAA+B;AACxC,UAAMF,QAAN,EAAgBC,MAAhB;AACAE,IAAAA,MAAM,CAACC,cAAP,CAAsB,IAAtB,EAA4BR,OAA5B,EAAqC;AACnCS,MAAAA,QAAQ,EAAE,IADyB;AAEnCC,MAAAA,KAAK,EAAE,KAAK;AAFuB,KAArC;AAIAH,IAAAA,MAAM,CAACC,cAAP,CAAsB,IAAtB,EAA4BP,WAA5B,EAAyC;AACvCQ,MAAAA,QAAQ,EAAE,IAD6B;AAEvCC,MAAAA,KAAK,EAAE,KAAK;AAF2B,KAAzC;AAIAnB,IAAAA,2BAA2B,CAAC,IAAD,EAAOS,OAAP,CAA3B,CAA2CA,OAA3C,IAAsDL,aAAa,CAAC,KAAKgB,MAAN,EAAcL,UAAd,CAAnE;AACAf,IAAAA,2BAA2B,CAAC,IAAD,EAAOU,WAAP,CAA3B,CAA+CA,WAA/C,IAA8DK,UAA9D;AACD;AACD;AACF;AACA;;;AAGY,MAANM,MAAM,GAAG;AACX,WAAOrB,2BAA2B,CAAC,IAAD,EAAOS,OAAP,CAA3B,CAA2CA,OAA3C,CAAP;AACD;AACD;AACF;AACA;;;AAGgB,MAAVM,UAAU,GAAG;AACf,WAAOf,2BAA2B,CAAC,IAAD,EAAOU,WAAP,CAA3B,CAA+CA,WAA/C,CAAP;AACD;;AA7ByC","sourcesContent":["import _classPrivateFieldLooseBase from \"@babel/runtime/helpers/esm/classPrivateFieldLooseBase\";\nimport _classPrivateFieldLooseKey from \"@babel/runtime/helpers/esm/classPrivateFieldLooseKey\";\n// Copyright 2017-2021 @polkadot/api-derive authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { Struct } from '@polkadot/types';\nimport runtimeTypes from '@polkadot/types/interfaces/runtime/definitions';\nimport { extractAuthor } from \"./util.mjs\"; // We can ignore the properties, added via Struct.with\n\nconst _Header = Struct.with(runtimeTypes.types.Header);\n/**\n * @name HeaderExtended\n * @description\n * A [[Block]] header with an additional `author` field that indicates the block author\n */\n\n\nvar _author = _classPrivateFieldLooseKey(\"author\");\n\nvar _validators = _classPrivateFieldLooseKey(\"validators\");\n\nexport class HeaderExtended extends _Header {\n  constructor(registry, header, validators) {\n    super(registry, header);\n    Object.defineProperty(this, _author, {\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, _validators, {\n      writable: true,\n      value: void 0\n    });\n    _classPrivateFieldLooseBase(this, _author)[_author] = extractAuthor(this.digest, validators);\n    _classPrivateFieldLooseBase(this, _validators)[_validators] = validators;\n  }\n  /**\n   * @description Convenience method, returns the author for the block\n   */\n\n\n  get author() {\n    return _classPrivateFieldLooseBase(this, _author)[_author];\n  }\n  /**\n   * @description Convenience method, returns the validators for the block\n   */\n\n\n  get validators() {\n    return _classPrivateFieldLooseBase(this, _validators)[_validators];\n  }\n\n}"]},"metadata":{},"sourceType":"module"}