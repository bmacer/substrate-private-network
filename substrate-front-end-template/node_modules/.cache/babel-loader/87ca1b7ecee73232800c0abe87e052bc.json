{"ast":null,"code":"// Copyright 2017-2021 @polkadot/api-derive authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { combineLatest, of } from '@polkadot/x-rxjs';\nimport { map, switchMap } from '@polkadot/x-rxjs/operators';\nimport { deriveCache, memo } from \"../util/index.mjs\";\nconst CACHE_KEY = 'ownExposure';\nexport function _ownExposure(instanceId, api) {\n  return memo(instanceId, (accountId, era, withActive) => {\n    const cacheKey = `${CACHE_KEY}-${era.toString()}-${accountId.toString()}`;\n    const cached = withActive ? undefined : deriveCache.get(cacheKey);\n    return cached ? of(cached) : api.queryMulti([[api.query.staking.erasStakersClipped, [era, accountId]], [api.query.staking.erasStakers, [era, accountId]]]).pipe(map(([clipped, exposure]) => {\n      const value = {\n        clipped,\n        era,\n        exposure\n      };\n      !withActive && deriveCache.set(cacheKey, value);\n      return value;\n    }));\n  });\n}\nexport function ownExposure(instanceId, api) {\n  return memo(instanceId, (accountId, era) => api.derive.staking._ownExposure(accountId, era, true));\n}\nexport function _ownExposures(instanceId, api) {\n  return memo(instanceId, (accountId, eras, withActive) => eras.length ? combineLatest(eras.map(era => api.derive.staking._ownExposure(accountId, era, withActive))) : of([]));\n}\nexport function ownExposures(instanceId, api) {\n  return memo(instanceId, (accountId, withActive = false) => {\n    return api.derive.staking.erasHistoric(withActive).pipe(switchMap(eras => api.derive.staking._ownExposures(accountId, eras, withActive)));\n  });\n}","map":{"version":3,"sources":["/Users/bmacer/substrate-node-template/substrate-front-end-template/node_modules/@polkadot/api-derive/staking/ownExposure.mjs"],"names":["combineLatest","of","map","switchMap","deriveCache","memo","CACHE_KEY","_ownExposure","instanceId","api","accountId","era","withActive","cacheKey","toString","cached","undefined","get","queryMulti","query","staking","erasStakersClipped","erasStakers","pipe","clipped","exposure","value","set","ownExposure","derive","_ownExposures","eras","length","ownExposures","erasHistoric"],"mappings":"AAAA;AACA;AACA,SAASA,aAAT,EAAwBC,EAAxB,QAAkC,kBAAlC;AACA,SAASC,GAAT,EAAcC,SAAd,QAA+B,4BAA/B;AACA,SAASC,WAAT,EAAsBC,IAAtB,QAAkC,mBAAlC;AACA,MAAMC,SAAS,GAAG,aAAlB;AACA,OAAO,SAASC,YAAT,CAAsBC,UAAtB,EAAkCC,GAAlC,EAAuC;AAC5C,SAAOJ,IAAI,CAACG,UAAD,EAAa,CAACE,SAAD,EAAYC,GAAZ,EAAiBC,UAAjB,KAAgC;AACtD,UAAMC,QAAQ,GAAI,GAAEP,SAAU,IAAGK,GAAG,CAACG,QAAJ,EAAe,IAAGJ,SAAS,CAACI,QAAV,EAAqB,EAAxE;AACA,UAAMC,MAAM,GAAGH,UAAU,GAAGI,SAAH,GAAeZ,WAAW,CAACa,GAAZ,CAAgBJ,QAAhB,CAAxC;AACA,WAAOE,MAAM,GAAGd,EAAE,CAACc,MAAD,CAAL,GAAgBN,GAAG,CAACS,UAAJ,CAAe,CAAC,CAACT,GAAG,CAACU,KAAJ,CAAUC,OAAV,CAAkBC,kBAAnB,EAAuC,CAACV,GAAD,EAAMD,SAAN,CAAvC,CAAD,EAA2D,CAACD,GAAG,CAACU,KAAJ,CAAUC,OAAV,CAAkBE,WAAnB,EAAgC,CAACX,GAAD,EAAMD,SAAN,CAAhC,CAA3D,CAAf,EAA8Ha,IAA9H,CAAmIrB,GAAG,CAAC,CAAC,CAACsB,OAAD,EAAUC,QAAV,CAAD,KAAyB;AAC3L,YAAMC,KAAK,GAAG;AACZF,QAAAA,OADY;AAEZb,QAAAA,GAFY;AAGZc,QAAAA;AAHY,OAAd;AAKA,OAACb,UAAD,IAAeR,WAAW,CAACuB,GAAZ,CAAgBd,QAAhB,EAA0Ba,KAA1B,CAAf;AACA,aAAOA,KAAP;AACD,KARkK,CAAtI,CAA7B;AASD,GAZU,CAAX;AAaD;AACD,OAAO,SAASE,WAAT,CAAqBpB,UAArB,EAAiCC,GAAjC,EAAsC;AAC3C,SAAOJ,IAAI,CAACG,UAAD,EAAa,CAACE,SAAD,EAAYC,GAAZ,KAAoBF,GAAG,CAACoB,MAAJ,CAAWT,OAAX,CAAmBb,YAAnB,CAAgCG,SAAhC,EAA2CC,GAA3C,EAAgD,IAAhD,CAAjC,CAAX;AACD;AACD,OAAO,SAASmB,aAAT,CAAuBtB,UAAvB,EAAmCC,GAAnC,EAAwC;AAC7C,SAAOJ,IAAI,CAACG,UAAD,EAAa,CAACE,SAAD,EAAYqB,IAAZ,EAAkBnB,UAAlB,KAAiCmB,IAAI,CAACC,MAAL,GAAchC,aAAa,CAAC+B,IAAI,CAAC7B,GAAL,CAASS,GAAG,IAAIF,GAAG,CAACoB,MAAJ,CAAWT,OAAX,CAAmBb,YAAnB,CAAgCG,SAAhC,EAA2CC,GAA3C,EAAgDC,UAAhD,CAAhB,CAAD,CAA3B,GAA4GX,EAAE,CAAC,EAAD,CAA5J,CAAX;AACD;AACD,OAAO,SAASgC,YAAT,CAAsBzB,UAAtB,EAAkCC,GAAlC,EAAuC;AAC5C,SAAOJ,IAAI,CAACG,UAAD,EAAa,CAACE,SAAD,EAAYE,UAAU,GAAG,KAAzB,KAAmC;AACzD,WAAOH,GAAG,CAACoB,MAAJ,CAAWT,OAAX,CAAmBc,YAAnB,CAAgCtB,UAAhC,EAA4CW,IAA5C,CAAiDpB,SAAS,CAAC4B,IAAI,IAAItB,GAAG,CAACoB,MAAJ,CAAWT,OAAX,CAAmBU,aAAnB,CAAiCpB,SAAjC,EAA4CqB,IAA5C,EAAkDnB,UAAlD,CAAT,CAA1D,CAAP;AACD,GAFU,CAAX;AAGD","sourcesContent":["// Copyright 2017-2021 @polkadot/api-derive authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { combineLatest, of } from '@polkadot/x-rxjs';\nimport { map, switchMap } from '@polkadot/x-rxjs/operators';\nimport { deriveCache, memo } from \"../util/index.mjs\";\nconst CACHE_KEY = 'ownExposure';\nexport function _ownExposure(instanceId, api) {\n  return memo(instanceId, (accountId, era, withActive) => {\n    const cacheKey = `${CACHE_KEY}-${era.toString()}-${accountId.toString()}`;\n    const cached = withActive ? undefined : deriveCache.get(cacheKey);\n    return cached ? of(cached) : api.queryMulti([[api.query.staking.erasStakersClipped, [era, accountId]], [api.query.staking.erasStakers, [era, accountId]]]).pipe(map(([clipped, exposure]) => {\n      const value = {\n        clipped,\n        era,\n        exposure\n      };\n      !withActive && deriveCache.set(cacheKey, value);\n      return value;\n    }));\n  });\n}\nexport function ownExposure(instanceId, api) {\n  return memo(instanceId, (accountId, era) => api.derive.staking._ownExposure(accountId, era, true));\n}\nexport function _ownExposures(instanceId, api) {\n  return memo(instanceId, (accountId, eras, withActive) => eras.length ? combineLatest(eras.map(era => api.derive.staking._ownExposure(accountId, era, withActive))) : of([]));\n}\nexport function ownExposures(instanceId, api) {\n  return memo(instanceId, (accountId, withActive = false) => {\n    return api.derive.staking.erasHistoric(withActive).pipe(switchMap(eras => api.derive.staking._ownExposures(accountId, eras, withActive)));\n  });\n}"]},"metadata":{},"sourceType":"module"}