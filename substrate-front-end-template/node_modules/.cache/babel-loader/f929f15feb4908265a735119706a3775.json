{"ast":null,"code":"import _classPrivateFieldLooseBase from \"@babel/runtime/helpers/esm/classPrivateFieldLooseBase\";\nimport _classPrivateFieldLooseKey from \"@babel/runtime/helpers/esm/classPrivateFieldLooseKey\"; // Copyright 2017-2021 @polkadot/api-derive authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\nimport { Struct } from '@polkadot/types';\nimport runtimeTypes from '@polkadot/types/interfaces/runtime/definitions';\nimport { extractAuthor } from \"./util.mjs\"; // We can ignore the properties, added via Struct.with\n\nconst _SignedBlock = Struct.with(runtimeTypes.types.SignedBlock);\n\nfunction mapExtrinsics(extrinsics, records) {\n  return extrinsics.map((extrinsic, index) => {\n    let dispatchError;\n    let dispatchInfo;\n    const events = records.filter(({\n      phase\n    }) => phase.isApplyExtrinsic && phase.asApplyExtrinsic.eq(index)).map(({\n      event\n    }) => {\n      if (event.section === 'system') {\n        if (event.method === 'ExtrinsicSuccess') {\n          dispatchInfo = event.data[0];\n        } else if (event.method === 'ExtrinsicFailed') {\n          dispatchError = event.data[0];\n          dispatchInfo = event.data[1];\n        }\n      }\n\n      return event;\n    });\n    return {\n      dispatchError,\n      dispatchInfo,\n      events,\n      extrinsic\n    };\n  });\n}\n/**\n * @name SignedBlockExtended\n * @description\n * A [[Block]] header with an additional `author` field that indicates the block author\n */\n\n\nvar _author = _classPrivateFieldLooseKey(\"author\");\n\nvar _events = _classPrivateFieldLooseKey(\"events\");\n\nvar _extrinsics = _classPrivateFieldLooseKey(\"extrinsics\");\n\nexport class SignedBlockExtended extends _SignedBlock {\n  constructor(registry, block, events, sessionValidators) {\n    super(registry, block);\n    Object.defineProperty(this, _author, {\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, _events, {\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, _extrinsics, {\n      writable: true,\n      value: void 0\n    });\n    _classPrivateFieldLooseBase(this, _author)[_author] = extractAuthor(this.block.header.digest, sessionValidators);\n    _classPrivateFieldLooseBase(this, _events)[_events] = events || [];\n    _classPrivateFieldLooseBase(this, _extrinsics)[_extrinsics] = mapExtrinsics(this.block.extrinsics, _classPrivateFieldLooseBase(this, _events)[_events]);\n  }\n  /**\n   * @description Convenience method, returns the author for the block\n   */\n\n\n  get author() {\n    return _classPrivateFieldLooseBase(this, _author)[_author];\n  }\n  /**\n   * @description Convenience method, returns the events associated with the block\n   */\n\n\n  get events() {\n    return _classPrivateFieldLooseBase(this, _events)[_events];\n  }\n  /**\n   * @description Returns the extrinsics and their events, mapped\n   */\n\n\n  get extrinsics() {\n    return _classPrivateFieldLooseBase(this, _extrinsics)[_extrinsics];\n  }\n\n}","map":{"version":3,"sources":["/Users/bmacer/substrate-node-template/substrate-front-end-template/node_modules/@polkadot/api-derive/type/SignedBlockExtended.mjs"],"names":["_classPrivateFieldLooseBase","_classPrivateFieldLooseKey","Struct","runtimeTypes","extractAuthor","_SignedBlock","with","types","SignedBlock","mapExtrinsics","extrinsics","records","map","extrinsic","index","dispatchError","dispatchInfo","events","filter","phase","isApplyExtrinsic","asApplyExtrinsic","eq","event","section","method","data","_author","_events","_extrinsics","SignedBlockExtended","constructor","registry","block","sessionValidators","Object","defineProperty","writable","value","header","digest","author"],"mappings":"AAAA,OAAOA,2BAAP,MAAwC,uDAAxC;AACA,OAAOC,0BAAP,MAAuC,sDAAvC,C,CACA;AACA;;AACA,SAASC,MAAT,QAAuB,iBAAvB;AACA,OAAOC,YAAP,MAAyB,gDAAzB;AACA,SAASC,aAAT,QAA8B,YAA9B,C,CAA4C;;AAE5C,MAAMC,YAAY,GAAGH,MAAM,CAACI,IAAP,CAAYH,YAAY,CAACI,KAAb,CAAmBC,WAA/B,CAArB;;AAEA,SAASC,aAAT,CAAuBC,UAAvB,EAAmCC,OAAnC,EAA4C;AAC1C,SAAOD,UAAU,CAACE,GAAX,CAAe,CAACC,SAAD,EAAYC,KAAZ,KAAsB;AAC1C,QAAIC,aAAJ;AACA,QAAIC,YAAJ;AACA,UAAMC,MAAM,GAAGN,OAAO,CAACO,MAAR,CAAe,CAAC;AAC7BC,MAAAA;AAD6B,KAAD,KAExBA,KAAK,CAACC,gBAAN,IAA0BD,KAAK,CAACE,gBAAN,CAAuBC,EAAvB,CAA0BR,KAA1B,CAFjB,EAEmDF,GAFnD,CAEuD,CAAC;AACrEW,MAAAA;AADqE,KAAD,KAEhE;AACJ,UAAIA,KAAK,CAACC,OAAN,KAAkB,QAAtB,EAAgC;AAC9B,YAAID,KAAK,CAACE,MAAN,KAAiB,kBAArB,EAAyC;AACvCT,UAAAA,YAAY,GAAGO,KAAK,CAACG,IAAN,CAAW,CAAX,CAAf;AACD,SAFD,MAEO,IAAIH,KAAK,CAACE,MAAN,KAAiB,iBAArB,EAAwC;AAC7CV,UAAAA,aAAa,GAAGQ,KAAK,CAACG,IAAN,CAAW,CAAX,CAAhB;AACAV,UAAAA,YAAY,GAAGO,KAAK,CAACG,IAAN,CAAW,CAAX,CAAf;AACD;AACF;;AAED,aAAOH,KAAP;AACD,KAfc,CAAf;AAgBA,WAAO;AACLR,MAAAA,aADK;AAELC,MAAAA,YAFK;AAGLC,MAAAA,MAHK;AAILJ,MAAAA;AAJK,KAAP;AAMD,GAzBM,CAAP;AA0BD;AACD;AACA;AACA;AACA;AACA;;;AAGA,IAAIc,OAAO,GAAG1B,0BAA0B,CAAC,QAAD,CAAxC;;AAEA,IAAI2B,OAAO,GAAG3B,0BAA0B,CAAC,QAAD,CAAxC;;AAEA,IAAI4B,WAAW,GAAG5B,0BAA0B,CAAC,YAAD,CAA5C;;AAEA,OAAO,MAAM6B,mBAAN,SAAkCzB,YAAlC,CAA+C;AACpD0B,EAAAA,WAAW,CAACC,QAAD,EAAWC,KAAX,EAAkBhB,MAAlB,EAA0BiB,iBAA1B,EAA6C;AACtD,UAAMF,QAAN,EAAgBC,KAAhB;AACAE,IAAAA,MAAM,CAACC,cAAP,CAAsB,IAAtB,EAA4BT,OAA5B,EAAqC;AACnCU,MAAAA,QAAQ,EAAE,IADyB;AAEnCC,MAAAA,KAAK,EAAE,KAAK;AAFuB,KAArC;AAIAH,IAAAA,MAAM,CAACC,cAAP,CAAsB,IAAtB,EAA4BR,OAA5B,EAAqC;AACnCS,MAAAA,QAAQ,EAAE,IADyB;AAEnCC,MAAAA,KAAK,EAAE,KAAK;AAFuB,KAArC;AAIAH,IAAAA,MAAM,CAACC,cAAP,CAAsB,IAAtB,EAA4BP,WAA5B,EAAyC;AACvCQ,MAAAA,QAAQ,EAAE,IAD6B;AAEvCC,MAAAA,KAAK,EAAE,KAAK;AAF2B,KAAzC;AAIAtC,IAAAA,2BAA2B,CAAC,IAAD,EAAO2B,OAAP,CAA3B,CAA2CA,OAA3C,IAAsDvB,aAAa,CAAC,KAAK6B,KAAL,CAAWM,MAAX,CAAkBC,MAAnB,EAA2BN,iBAA3B,CAAnE;AACAlC,IAAAA,2BAA2B,CAAC,IAAD,EAAO4B,OAAP,CAA3B,CAA2CA,OAA3C,IAAsDX,MAAM,IAAI,EAAhE;AACAjB,IAAAA,2BAA2B,CAAC,IAAD,EAAO6B,WAAP,CAA3B,CAA+CA,WAA/C,IAA8DpB,aAAa,CAAC,KAAKwB,KAAL,CAAWvB,UAAZ,EAAwBV,2BAA2B,CAAC,IAAD,EAAO4B,OAAP,CAA3B,CAA2CA,OAA3C,CAAxB,CAA3E;AACD;AACD;AACF;AACA;;;AAGY,MAANa,MAAM,GAAG;AACX,WAAOzC,2BAA2B,CAAC,IAAD,EAAO2B,OAAP,CAA3B,CAA2CA,OAA3C,CAAP;AACD;AACD;AACF;AACA;;;AAGY,MAANV,MAAM,GAAG;AACX,WAAOjB,2BAA2B,CAAC,IAAD,EAAO4B,OAAP,CAA3B,CAA2CA,OAA3C,CAAP;AACD;AACD;AACF;AACA;;;AAGgB,MAAVlB,UAAU,GAAG;AACf,WAAOV,2BAA2B,CAAC,IAAD,EAAO6B,WAAP,CAA3B,CAA+CA,WAA/C,CAAP;AACD;;AA1CmD","sourcesContent":["import _classPrivateFieldLooseBase from \"@babel/runtime/helpers/esm/classPrivateFieldLooseBase\";\nimport _classPrivateFieldLooseKey from \"@babel/runtime/helpers/esm/classPrivateFieldLooseKey\";\n// Copyright 2017-2021 @polkadot/api-derive authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { Struct } from '@polkadot/types';\nimport runtimeTypes from '@polkadot/types/interfaces/runtime/definitions';\nimport { extractAuthor } from \"./util.mjs\"; // We can ignore the properties, added via Struct.with\n\nconst _SignedBlock = Struct.with(runtimeTypes.types.SignedBlock);\n\nfunction mapExtrinsics(extrinsics, records) {\n  return extrinsics.map((extrinsic, index) => {\n    let dispatchError;\n    let dispatchInfo;\n    const events = records.filter(({\n      phase\n    }) => phase.isApplyExtrinsic && phase.asApplyExtrinsic.eq(index)).map(({\n      event\n    }) => {\n      if (event.section === 'system') {\n        if (event.method === 'ExtrinsicSuccess') {\n          dispatchInfo = event.data[0];\n        } else if (event.method === 'ExtrinsicFailed') {\n          dispatchError = event.data[0];\n          dispatchInfo = event.data[1];\n        }\n      }\n\n      return event;\n    });\n    return {\n      dispatchError,\n      dispatchInfo,\n      events,\n      extrinsic\n    };\n  });\n}\n/**\n * @name SignedBlockExtended\n * @description\n * A [[Block]] header with an additional `author` field that indicates the block author\n */\n\n\nvar _author = _classPrivateFieldLooseKey(\"author\");\n\nvar _events = _classPrivateFieldLooseKey(\"events\");\n\nvar _extrinsics = _classPrivateFieldLooseKey(\"extrinsics\");\n\nexport class SignedBlockExtended extends _SignedBlock {\n  constructor(registry, block, events, sessionValidators) {\n    super(registry, block);\n    Object.defineProperty(this, _author, {\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, _events, {\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, _extrinsics, {\n      writable: true,\n      value: void 0\n    });\n    _classPrivateFieldLooseBase(this, _author)[_author] = extractAuthor(this.block.header.digest, sessionValidators);\n    _classPrivateFieldLooseBase(this, _events)[_events] = events || [];\n    _classPrivateFieldLooseBase(this, _extrinsics)[_extrinsics] = mapExtrinsics(this.block.extrinsics, _classPrivateFieldLooseBase(this, _events)[_events]);\n  }\n  /**\n   * @description Convenience method, returns the author for the block\n   */\n\n\n  get author() {\n    return _classPrivateFieldLooseBase(this, _author)[_author];\n  }\n  /**\n   * @description Convenience method, returns the events associated with the block\n   */\n\n\n  get events() {\n    return _classPrivateFieldLooseBase(this, _events)[_events];\n  }\n  /**\n   * @description Returns the extrinsics and their events, mapped\n   */\n\n\n  get extrinsics() {\n    return _classPrivateFieldLooseBase(this, _extrinsics)[_extrinsics];\n  }\n\n}"]},"metadata":{},"sourceType":"module"}