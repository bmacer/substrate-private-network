{"ast":null,"code":"// Copyright 2017-2021 @polkadot/metadata authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nfunction trimDocs(documentation) {\n  const strings = documentation.map(doc => doc.toString().trim());\n  const firstEmpty = strings.findIndex(doc => !doc.length);\n  return firstEmpty === -1 ? strings : strings.slice(0, firstEmpty);\n}\n\nfunction mapCalls(registry, _calls) {\n  const calls = _calls.unwrapOr(null);\n\n  return registry.createType('Option<Vec<FunctionMetadataLatest>>', calls ? calls.map(({\n    args,\n    documentation,\n    name\n  }) => registry.createType('FunctionMetadataLatest', {\n    args,\n    documentation: trimDocs(documentation),\n    name\n  })) : null);\n}\n/** @internal */\n\n\nexport function toCallsOnly(registry, {\n  extrinsic,\n  modules\n}) {\n  return registry.createType('MetadataLatest', {\n    extrinsic,\n    modules: modules.map(({\n      calls,\n      index,\n      name\n    }) => ({\n      calls: mapCalls(registry, calls),\n      index,\n      name\n    }))\n  }).toJSON();\n}","map":{"version":3,"sources":["/Users/bmacer/substrate-node-template/substrate-front-end-template/node_modules/@polkadot/metadata/util/toCallsOnly.mjs"],"names":["trimDocs","documentation","strings","map","doc","toString","trim","firstEmpty","findIndex","length","slice","mapCalls","registry","_calls","calls","unwrapOr","createType","args","name","toCallsOnly","extrinsic","modules","index","toJSON"],"mappings":"AAAA;AACA;AACA,SAASA,QAAT,CAAkBC,aAAlB,EAAiC;AAC/B,QAAMC,OAAO,GAAGD,aAAa,CAACE,GAAd,CAAkBC,GAAG,IAAIA,GAAG,CAACC,QAAJ,GAAeC,IAAf,EAAzB,CAAhB;AACA,QAAMC,UAAU,GAAGL,OAAO,CAACM,SAAR,CAAkBJ,GAAG,IAAI,CAACA,GAAG,CAACK,MAA9B,CAAnB;AACA,SAAOF,UAAU,KAAK,CAAC,CAAhB,GAAoBL,OAApB,GAA8BA,OAAO,CAACQ,KAAR,CAAc,CAAd,EAAiBH,UAAjB,CAArC;AACD;;AAED,SAASI,QAAT,CAAkBC,QAAlB,EAA4BC,MAA5B,EAAoC;AAClC,QAAMC,KAAK,GAAGD,MAAM,CAACE,QAAP,CAAgB,IAAhB,CAAd;;AAEA,SAAOH,QAAQ,CAACI,UAAT,CAAoB,qCAApB,EAA2DF,KAAK,GAAGA,KAAK,CAACX,GAAN,CAAU,CAAC;AACnFc,IAAAA,IADmF;AAEnFhB,IAAAA,aAFmF;AAGnFiB,IAAAA;AAHmF,GAAD,KAI9EN,QAAQ,CAACI,UAAT,CAAoB,wBAApB,EAA8C;AAClDC,IAAAA,IADkD;AAElDhB,IAAAA,aAAa,EAAED,QAAQ,CAACC,aAAD,CAF2B;AAGlDiB,IAAAA;AAHkD,GAA9C,CAJoE,CAAH,GAQjE,IARC,CAAP;AASD;AACD;;;AAGA,OAAO,SAASC,WAAT,CAAqBP,QAArB,EAA+B;AACpCQ,EAAAA,SADoC;AAEpCC,EAAAA;AAFoC,CAA/B,EAGJ;AACD,SAAOT,QAAQ,CAACI,UAAT,CAAoB,gBAApB,EAAsC;AAC3CI,IAAAA,SAD2C;AAE3CC,IAAAA,OAAO,EAAEA,OAAO,CAAClB,GAAR,CAAY,CAAC;AACpBW,MAAAA,KADoB;AAEpBQ,MAAAA,KAFoB;AAGpBJ,MAAAA;AAHoB,KAAD,MAId;AACLJ,MAAAA,KAAK,EAAEH,QAAQ,CAACC,QAAD,EAAWE,KAAX,CADV;AAELQ,MAAAA,KAFK;AAGLJ,MAAAA;AAHK,KAJc,CAAZ;AAFkC,GAAtC,EAWJK,MAXI,EAAP;AAYD","sourcesContent":["// Copyright 2017-2021 @polkadot/metadata authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nfunction trimDocs(documentation) {\n  const strings = documentation.map(doc => doc.toString().trim());\n  const firstEmpty = strings.findIndex(doc => !doc.length);\n  return firstEmpty === -1 ? strings : strings.slice(0, firstEmpty);\n}\n\nfunction mapCalls(registry, _calls) {\n  const calls = _calls.unwrapOr(null);\n\n  return registry.createType('Option<Vec<FunctionMetadataLatest>>', calls ? calls.map(({\n    args,\n    documentation,\n    name\n  }) => registry.createType('FunctionMetadataLatest', {\n    args,\n    documentation: trimDocs(documentation),\n    name\n  })) : null);\n}\n/** @internal */\n\n\nexport function toCallsOnly(registry, {\n  extrinsic,\n  modules\n}) {\n  return registry.createType('MetadataLatest', {\n    extrinsic,\n    modules: modules.map(({\n      calls,\n      index,\n      name\n    }) => ({\n      calls: mapCalls(registry, calls),\n      index,\n      name\n    }))\n  }).toJSON();\n}"]},"metadata":{},"sourceType":"module"}