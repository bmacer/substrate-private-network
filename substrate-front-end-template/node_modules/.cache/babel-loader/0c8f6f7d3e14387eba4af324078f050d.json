{"ast":null,"code":"// Copyright 2017-2021 @polkadot/metadata authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { stringCamelCase } from '@polkadot/util';\nimport { createUnchecked } from \"./createUnchecked.mjs\";\n/** @internal */\n\nexport function decorateExtrinsics(registry, {\n  modules\n}, metaVersion) {\n  return modules.filter(({\n    calls\n  }) => calls.isSome).reduce((result, {\n    calls,\n    index,\n    name\n  }, _sectionIndex) => {\n    const sectionIndex = metaVersion >= 12 ? index.toNumber() : _sectionIndex;\n    const section = stringCamelCase(name);\n    result[section] = calls.unwrap().reduce((newModule, callMetadata, methodIndex) => {\n      newModule[stringCamelCase(callMetadata.name)] = createUnchecked(registry, section, new Uint8Array([sectionIndex, methodIndex]), callMetadata);\n      return newModule;\n    }, {});\n    return result;\n  }, {});\n}","map":{"version":3,"sources":["/Users/bmacer/substrate-node-template/substrate-front-end-template/node_modules/@polkadot/metadata/decorate/extrinsics/index.mjs"],"names":["stringCamelCase","createUnchecked","decorateExtrinsics","registry","modules","metaVersion","filter","calls","isSome","reduce","result","index","name","_sectionIndex","sectionIndex","toNumber","section","unwrap","newModule","callMetadata","methodIndex","Uint8Array"],"mappings":"AAAA;AACA;AACA,SAASA,eAAT,QAAgC,gBAAhC;AACA,SAASC,eAAT,QAAgC,uBAAhC;AACA;;AAEA,OAAO,SAASC,kBAAT,CAA4BC,QAA5B,EAAsC;AAC3CC,EAAAA;AAD2C,CAAtC,EAEJC,WAFI,EAES;AACd,SAAOD,OAAO,CAACE,MAAR,CAAe,CAAC;AACrBC,IAAAA;AADqB,GAAD,KAEhBA,KAAK,CAACC,MAFL,EAEaC,MAFb,CAEoB,CAACC,MAAD,EAAS;AAClCH,IAAAA,KADkC;AAElCI,IAAAA,KAFkC;AAGlCC,IAAAA;AAHkC,GAAT,EAIxBC,aAJwB,KAIN;AACnB,UAAMC,YAAY,GAAGT,WAAW,IAAI,EAAf,GAAoBM,KAAK,CAACI,QAAN,EAApB,GAAuCF,aAA5D;AACA,UAAMG,OAAO,GAAGhB,eAAe,CAACY,IAAD,CAA/B;AACAF,IAAAA,MAAM,CAACM,OAAD,CAAN,GAAkBT,KAAK,CAACU,MAAN,GAAeR,MAAf,CAAsB,CAACS,SAAD,EAAYC,YAAZ,EAA0BC,WAA1B,KAA0C;AAChFF,MAAAA,SAAS,CAAClB,eAAe,CAACmB,YAAY,CAACP,IAAd,CAAhB,CAAT,GAAgDX,eAAe,CAACE,QAAD,EAAWa,OAAX,EAAoB,IAAIK,UAAJ,CAAe,CAACP,YAAD,EAAeM,WAAf,CAAf,CAApB,EAAiED,YAAjE,CAA/D;AACA,aAAOD,SAAP;AACD,KAHiB,EAGf,EAHe,CAAlB;AAIA,WAAOR,MAAP;AACD,GAdM,EAcJ,EAdI,CAAP;AAeD","sourcesContent":["// Copyright 2017-2021 @polkadot/metadata authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { stringCamelCase } from '@polkadot/util';\nimport { createUnchecked } from \"./createUnchecked.mjs\";\n/** @internal */\n\nexport function decorateExtrinsics(registry, {\n  modules\n}, metaVersion) {\n  return modules.filter(({\n    calls\n  }) => calls.isSome).reduce((result, {\n    calls,\n    index,\n    name\n  }, _sectionIndex) => {\n    const sectionIndex = metaVersion >= 12 ? index.toNumber() : _sectionIndex;\n    const section = stringCamelCase(name);\n    result[section] = calls.unwrap().reduce((newModule, callMetadata, methodIndex) => {\n      newModule[stringCamelCase(callMetadata.name)] = createUnchecked(registry, section, new Uint8Array([sectionIndex, methodIndex]), callMetadata);\n      return newModule;\n    }, {});\n    return result;\n  }, {});\n}"]},"metadata":{},"sourceType":"module"}