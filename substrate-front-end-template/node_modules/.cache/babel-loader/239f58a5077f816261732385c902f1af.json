{"ast":null,"code":"var _jsxFileName = \"/Users/bmacer/substrate-node-template/substrate-front-end-template/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, createRef } from 'react';\nimport { Container, Dimmer, Loader, Grid, Sticky, Message } from 'semantic-ui-react';\nimport 'semantic-ui-css/semantic.min.css';\nimport { SubstrateContextProvider, useSubstrate } from './substrate-lib';\nimport { DeveloperConsole } from './substrate-lib/components';\nimport AccountSelector from './AccountSelector';\nimport Balances from './Balances';\nimport BlockNumber from './BlockNumber';\nimport Events from './Events';\nimport Interactor from './Interactor';\nimport Metadata from './Metadata';\nimport NodeInfo from './NodeInfo';\nimport TemplateModule from './TemplateModule';\nimport Transfer from './Transfer';\nimport Upgrade from './Upgrade';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Main() {\n  _s();\n\n  const [accountAddress, setAccountAddress] = useState(null);\n  const {\n    apiState,\n    keyring,\n    keyringState,\n    apiError\n  } = useSubstrate();\n  const accountPair = accountAddress && keyringState === 'READY' && keyring.getPair(accountAddress);\n\n  const loader = text => /*#__PURE__*/_jsxDEV(Dimmer, {\n    active: true,\n    children: /*#__PURE__*/_jsxDEV(Loader, {\n      size: \"small\",\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n\n  const message = err => /*#__PURE__*/_jsxDEV(Grid, {\n    centered: true,\n    columns: 2,\n    padded: true,\n    children: /*#__PURE__*/_jsxDEV(Grid.Column, {\n      children: /*#__PURE__*/_jsxDEV(Message, {\n        negative: true,\n        compact: true,\n        floating: true,\n        header: \"Error Connecting to Substrate\",\n        content: `${JSON.stringify(err, null, 4)}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n\n  if (apiState === 'ERROR') return message(apiError);else if (apiState !== 'READY') return loader('Connecting to Substrate');\n\n  if (keyringState !== 'READY') {\n    return loader('Loading accounts (please review any extension\\'s authorization)');\n  }\n\n  const contextRef = /*#__PURE__*/createRef();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: contextRef,\n    children: [/*#__PURE__*/_jsxDEV(Sticky, {\n      context: contextRef,\n      children: /*#__PURE__*/_jsxDEV(AccountSelector, {\n        setAccountAddress: setAccountAddress\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        stackable: true,\n        columns: \"equal\",\n        children: [/*#__PURE__*/_jsxDEV(Grid.Row, {\n          children: /*#__PURE__*/_jsxDEV(TemplateModule, {\n            accountPair: accountPair\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Grid.Row, {\n          stretched: true,\n          children: [/*#__PURE__*/_jsxDEV(NodeInfo, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Metadata, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(BlockNumber, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(BlockNumber, {\n            finalized: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid.Row, {\n          stretched: true,\n          children: /*#__PURE__*/_jsxDEV(Balances, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid.Row, {\n          children: [/*#__PURE__*/_jsxDEV(Transfer, {\n            accountPair: accountPair\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Upgrade, {\n            accountPair: accountPair\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid.Row, {\n          children: [/*#__PURE__*/_jsxDEV(Interactor, {\n            accountPair: accountPair\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Events, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DeveloperConsole, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Main, \"er5j+gHaAw1w7ekbullS9LQVyb4=\", false, function () {\n  return [useSubstrate];\n});\n\n_c = Main;\nexport default function App() {\n  return /*#__PURE__*/_jsxDEV(SubstrateContextProvider, {\n    children: /*#__PURE__*/_jsxDEV(Main, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n}\n_c2 = App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Main\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"sources":["/Users/bmacer/substrate-node-template/substrate-front-end-template/src/App.js"],"names":["React","useState","createRef","Container","Dimmer","Loader","Grid","Sticky","Message","SubstrateContextProvider","useSubstrate","DeveloperConsole","AccountSelector","Balances","BlockNumber","Events","Interactor","Metadata","NodeInfo","TemplateModule","Transfer","Upgrade","Main","accountAddress","setAccountAddress","apiState","keyring","keyringState","apiError","accountPair","getPair","loader","text","message","err","JSON","stringify","contextRef","App"],"mappings":"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","sourcesContent":["import React, { useState, createRef } from 'react';\nimport { Container, Dimmer, Loader, Grid, Sticky, Message } from 'semantic-ui-react';\nimport 'semantic-ui-css/semantic.min.css';\n\nimport { SubstrateContextProvider, useSubstrate } from './substrate-lib';\nimport { DeveloperConsole } from './substrate-lib/components';\n\nimport AccountSelector from './AccountSelector';\nimport Balances from './Balances';\nimport BlockNumber from './BlockNumber';\nimport Events from './Events';\nimport Interactor from './Interactor';\nimport Metadata from './Metadata';\nimport NodeInfo from './NodeInfo';\nimport TemplateModule from './TemplateModule';\nimport Transfer from './Transfer';\nimport Upgrade from './Upgrade';\n\nfunction Main () {\n  const [accountAddress, setAccountAddress] = useState(null);\n  const { apiState, keyring, keyringState, apiError } = useSubstrate();\n  const accountPair =\n    accountAddress &&\n    keyringState === 'READY' &&\n    keyring.getPair(accountAddress);\n\n  const loader = text =>\n    <Dimmer active>\n      <Loader size='small'>{text}</Loader>\n    </Dimmer>;\n\n  const message = err =>\n    <Grid centered columns={2} padded>\n      <Grid.Column>\n        <Message negative compact floating\n          header='Error Connecting to Substrate'\n          content={`${JSON.stringify(err, null, 4)}`}\n        />\n      </Grid.Column>\n    </Grid>;\n\n  if (apiState === 'ERROR') return message(apiError);\n  else if (apiState !== 'READY') return loader('Connecting to Substrate');\n\n  if (keyringState !== 'READY') {\n    return loader('Loading accounts (please review any extension\\'s authorization)');\n  }\n\n  const contextRef = createRef();\n\n  return (\n    <div ref={contextRef}>\n      <Sticky context={contextRef}>\n        <AccountSelector setAccountAddress={setAccountAddress} />\n      </Sticky>\n      <Container>\n        <Grid stackable columns='equal'>\n        <Grid.Row>\n          <TemplateModule accountPair={accountPair} />\n        </Grid.Row>\n          <Grid.Row stretched>\n            <NodeInfo />\n            <Metadata />\n            <BlockNumber />\n            <BlockNumber finalized />\n          </Grid.Row>\n          <Grid.Row stretched>\n            <Balances />\n          </Grid.Row>\n          <Grid.Row>\n            <Transfer accountPair={accountPair} />\n            <Upgrade accountPair={accountPair} />\n          </Grid.Row>\n          <Grid.Row>\n            <Interactor accountPair={accountPair} />\n            <Events />\n          </Grid.Row>\n\n        </Grid>\n      </Container>\n      <DeveloperConsole />\n    </div>\n  );\n}\n\nexport default function App () {\n  return (\n    <SubstrateContextProvider>\n      <Main />\n    </SubstrateContextProvider>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}