{"ast":null,"code":"// Copyright 2017-2021 @polkadot/api-derive authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { combineLatest, of } from '@polkadot/x-rxjs';\nimport { map, switchMap } from '@polkadot/x-rxjs/operators';\nimport { deriveCache, memo } from \"../util/index.mjs\";\nconst CACHE_KEY = 'ownSlash';\nexport function _ownSlash(instanceId, api) {\n  return memo(instanceId, (accountId, era, withActive) => {\n    const cacheKey = `${CACHE_KEY}-${era.toString()}-${accountId.toString()}`;\n    const cached = withActive ? undefined : deriveCache.get(cacheKey);\n    return cached ? of(cached) : api.queryMulti([[api.query.staking.nominatorSlashInEra, [era, accountId]], [api.query.staking.validatorSlashInEra, [era, accountId]]]).pipe(map(([optNom, optVal]) => {\n      const value = {\n        era,\n        total: optVal.isSome ? optVal.unwrap()[1] : optNom.unwrapOrDefault()\n      };\n      !withActive && deriveCache.set(cacheKey, value);\n      return value;\n    }));\n  });\n}\nexport function ownSlash(instanceId, api) {\n  return memo(instanceId, (accountId, era) => api.derive.staking._ownSlash(accountId, era, true));\n}\nexport function _ownSlashes(instanceId, api) {\n  return memo(instanceId, (accountId, eras, withActive) => eras.length ? combineLatest(eras.map(era => api.derive.staking._ownSlash(accountId, era, withActive))) : of([]));\n}\nexport function ownSlashes(instanceId, api) {\n  return memo(instanceId, (accountId, withActive = false) => {\n    return api.derive.staking.erasHistoric(withActive).pipe(switchMap(eras => api.derive.staking._ownSlashes(accountId, eras, withActive)));\n  });\n}","map":{"version":3,"sources":["/Users/bmacer/substrate-node-template/substrate-front-end-template/node_modules/@polkadot/api-derive/staking/ownSlashes.mjs"],"names":["combineLatest","of","map","switchMap","deriveCache","memo","CACHE_KEY","_ownSlash","instanceId","api","accountId","era","withActive","cacheKey","toString","cached","undefined","get","queryMulti","query","staking","nominatorSlashInEra","validatorSlashInEra","pipe","optNom","optVal","value","total","isSome","unwrap","unwrapOrDefault","set","ownSlash","derive","_ownSlashes","eras","length","ownSlashes","erasHistoric"],"mappings":"AAAA;AACA;AACA,SAASA,aAAT,EAAwBC,EAAxB,QAAkC,kBAAlC;AACA,SAASC,GAAT,EAAcC,SAAd,QAA+B,4BAA/B;AACA,SAASC,WAAT,EAAsBC,IAAtB,QAAkC,mBAAlC;AACA,MAAMC,SAAS,GAAG,UAAlB;AACA,OAAO,SAASC,SAAT,CAAmBC,UAAnB,EAA+BC,GAA/B,EAAoC;AACzC,SAAOJ,IAAI,CAACG,UAAD,EAAa,CAACE,SAAD,EAAYC,GAAZ,EAAiBC,UAAjB,KAAgC;AACtD,UAAMC,QAAQ,GAAI,GAAEP,SAAU,IAAGK,GAAG,CAACG,QAAJ,EAAe,IAAGJ,SAAS,CAACI,QAAV,EAAqB,EAAxE;AACA,UAAMC,MAAM,GAAGH,UAAU,GAAGI,SAAH,GAAeZ,WAAW,CAACa,GAAZ,CAAgBJ,QAAhB,CAAxC;AACA,WAAOE,MAAM,GAAGd,EAAE,CAACc,MAAD,CAAL,GAAgBN,GAAG,CAACS,UAAJ,CAAe,CAAC,CAACT,GAAG,CAACU,KAAJ,CAAUC,OAAV,CAAkBC,mBAAnB,EAAwC,CAACV,GAAD,EAAMD,SAAN,CAAxC,CAAD,EAA4D,CAACD,GAAG,CAACU,KAAJ,CAAUC,OAAV,CAAkBE,mBAAnB,EAAwC,CAACX,GAAD,EAAMD,SAAN,CAAxC,CAA5D,CAAf,EAAuIa,IAAvI,CAA4IrB,GAAG,CAAC,CAAC,CAACsB,MAAD,EAASC,MAAT,CAAD,KAAsB;AACjM,YAAMC,KAAK,GAAG;AACZf,QAAAA,GADY;AAEZgB,QAAAA,KAAK,EAAEF,MAAM,CAACG,MAAP,GAAgBH,MAAM,CAACI,MAAP,GAAgB,CAAhB,CAAhB,GAAqCL,MAAM,CAACM,eAAP;AAFhC,OAAd;AAIA,OAAClB,UAAD,IAAeR,WAAW,CAAC2B,GAAZ,CAAgBlB,QAAhB,EAA0Ba,KAA1B,CAAf;AACA,aAAOA,KAAP;AACD,KAP2K,CAA/I,CAA7B;AAQD,GAXU,CAAX;AAYD;AACD,OAAO,SAASM,QAAT,CAAkBxB,UAAlB,EAA8BC,GAA9B,EAAmC;AACxC,SAAOJ,IAAI,CAACG,UAAD,EAAa,CAACE,SAAD,EAAYC,GAAZ,KAAoBF,GAAG,CAACwB,MAAJ,CAAWb,OAAX,CAAmBb,SAAnB,CAA6BG,SAA7B,EAAwCC,GAAxC,EAA6C,IAA7C,CAAjC,CAAX;AACD;AACD,OAAO,SAASuB,WAAT,CAAqB1B,UAArB,EAAiCC,GAAjC,EAAsC;AAC3C,SAAOJ,IAAI,CAACG,UAAD,EAAa,CAACE,SAAD,EAAYyB,IAAZ,EAAkBvB,UAAlB,KAAiCuB,IAAI,CAACC,MAAL,GAAcpC,aAAa,CAACmC,IAAI,CAACjC,GAAL,CAASS,GAAG,IAAIF,GAAG,CAACwB,MAAJ,CAAWb,OAAX,CAAmBb,SAAnB,CAA6BG,SAA7B,EAAwCC,GAAxC,EAA6CC,UAA7C,CAAhB,CAAD,CAA3B,GAAyGX,EAAE,CAAC,EAAD,CAAzJ,CAAX;AACD;AACD,OAAO,SAASoC,UAAT,CAAoB7B,UAApB,EAAgCC,GAAhC,EAAqC;AAC1C,SAAOJ,IAAI,CAACG,UAAD,EAAa,CAACE,SAAD,EAAYE,UAAU,GAAG,KAAzB,KAAmC;AACzD,WAAOH,GAAG,CAACwB,MAAJ,CAAWb,OAAX,CAAmBkB,YAAnB,CAAgC1B,UAAhC,EAA4CW,IAA5C,CAAiDpB,SAAS,CAACgC,IAAI,IAAI1B,GAAG,CAACwB,MAAJ,CAAWb,OAAX,CAAmBc,WAAnB,CAA+BxB,SAA/B,EAA0CyB,IAA1C,EAAgDvB,UAAhD,CAAT,CAA1D,CAAP;AACD,GAFU,CAAX;AAGD","sourcesContent":["// Copyright 2017-2021 @polkadot/api-derive authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { combineLatest, of } from '@polkadot/x-rxjs';\nimport { map, switchMap } from '@polkadot/x-rxjs/operators';\nimport { deriveCache, memo } from \"../util/index.mjs\";\nconst CACHE_KEY = 'ownSlash';\nexport function _ownSlash(instanceId, api) {\n  return memo(instanceId, (accountId, era, withActive) => {\n    const cacheKey = `${CACHE_KEY}-${era.toString()}-${accountId.toString()}`;\n    const cached = withActive ? undefined : deriveCache.get(cacheKey);\n    return cached ? of(cached) : api.queryMulti([[api.query.staking.nominatorSlashInEra, [era, accountId]], [api.query.staking.validatorSlashInEra, [era, accountId]]]).pipe(map(([optNom, optVal]) => {\n      const value = {\n        era,\n        total: optVal.isSome ? optVal.unwrap()[1] : optNom.unwrapOrDefault()\n      };\n      !withActive && deriveCache.set(cacheKey, value);\n      return value;\n    }));\n  });\n}\nexport function ownSlash(instanceId, api) {\n  return memo(instanceId, (accountId, era) => api.derive.staking._ownSlash(accountId, era, true));\n}\nexport function _ownSlashes(instanceId, api) {\n  return memo(instanceId, (accountId, eras, withActive) => eras.length ? combineLatest(eras.map(era => api.derive.staking._ownSlash(accountId, era, withActive))) : of([]));\n}\nexport function ownSlashes(instanceId, api) {\n  return memo(instanceId, (accountId, withActive = false) => {\n    return api.derive.staking.erasHistoric(withActive).pipe(switchMap(eras => api.derive.staking._ownSlashes(accountId, eras, withActive)));\n  });\n}"]},"metadata":{},"sourceType":"module"}