{"ast":null,"code":"// Copyright 2017-2021 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { isU8a, u8aToHex } from '@polkadot/util';\n/** @internal */\n\nfunction decodeBool(value) {\n  if (value instanceof Boolean) {\n    return value.valueOf();\n  } else if (isU8a(value)) {\n    return value[0] === 1;\n  }\n\n  return !!value;\n}\n/**\n * @name bool\n * @description\n * Representation for a boolean value in the system. It extends the base JS `Boolean` class\n * @noInheritDoc\n */\n\n\nexport class bool extends Boolean {\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  constructor(registry, value = false) {\n    super(decodeBool(value));\n    this.registry = void 0;\n    this.registry = registry;\n  }\n  /**\n   * @description The length of the value when encoded as a Uint8Array\n   */\n\n\n  get encodedLength() {\n    return 1;\n  }\n  /**\n   * @description returns a hash of the contents\n   */\n\n\n  get hash() {\n    return this.registry.hash(this.toU8a());\n  }\n  /**\n   * @description Checks if the value is an empty value (true when it wraps false/default)\n   */\n\n\n  get isEmpty() {\n    return this.isFalse;\n  }\n  /**\n   * @description Checks if the value is an empty value (always false)\n   */\n\n\n  get isFalse() {\n    return !this.isTrue;\n  }\n  /**\n   * @description Checks if the value is an empty value (always false)\n   */\n\n\n  get isTrue() {\n    return this.valueOf();\n  }\n  /**\n   * @description Compares the value of the input to see if there is a match\n   */\n\n\n  eq(other) {\n    return this.valueOf() === (other instanceof Boolean ? other.valueOf() : other);\n  }\n  /**\n   * @description Returns a hex string representation of the value\n   */\n\n\n  toHex() {\n    return u8aToHex(this.toU8a());\n  }\n  /**\n   * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information\n   */\n\n\n  toHuman() {\n    return this.toJSON();\n  }\n  /**\n   * @description Converts the Object to JSON, typically used for RPC transfers\n   */\n\n\n  toJSON() {\n    return this.valueOf();\n  }\n  /**\n   * @description Returns the base runtime type name for this instance\n   */\n\n\n  toRawType() {\n    return 'bool';\n  }\n  /**\n   * @description Returns the string representation of the value\n   */\n\n\n  toString() {\n    return this.toJSON().toString();\n  }\n  /**\n   * @description Encodes the value as a Uint8Array as per the SCALE specifications\n   * @param isBare true when the value has none of the type-specific prefixes (internal)\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n\n\n  toU8a(isBare) {\n    return new Uint8Array([this.valueOf() ? 1 : 0]);\n  }\n\n}","map":{"version":3,"sources":["/Users/bmacer/substrate-node-template/substrate-front-end-template/node_modules/@polkadot/types/primitive/Bool.mjs"],"names":["isU8a","u8aToHex","decodeBool","value","Boolean","valueOf","bool","constructor","registry","encodedLength","hash","toU8a","isEmpty","isFalse","isTrue","eq","other","toHex","toHuman","toJSON","toRawType","toString","isBare","Uint8Array"],"mappings":"AAAA;AACA;AACA,SAASA,KAAT,EAAgBC,QAAhB,QAAgC,gBAAhC;AACA;;AAEA,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AACzB,MAAIA,KAAK,YAAYC,OAArB,EAA8B;AAC5B,WAAOD,KAAK,CAACE,OAAN,EAAP;AACD,GAFD,MAEO,IAAIL,KAAK,CAACG,KAAD,CAAT,EAAkB;AACvB,WAAOA,KAAK,CAAC,CAAD,CAAL,KAAa,CAApB;AACD;;AAED,SAAO,CAAC,CAACA,KAAT;AACD;AACD;AACA;AACA;AACA;AACA;AACA;;;AAGA,OAAO,MAAMG,IAAN,SAAmBF,OAAnB,CAA2B;AAChC;AACAG,EAAAA,WAAW,CAACC,QAAD,EAAWL,KAAK,GAAG,KAAnB,EAA0B;AACnC,UAAMD,UAAU,CAACC,KAAD,CAAhB;AACA,SAAKK,QAAL,GAAgB,KAAK,CAArB;AACA,SAAKA,QAAL,GAAgBA,QAAhB;AACD;AACD;AACF;AACA;;;AAGmB,MAAbC,aAAa,GAAG;AAClB,WAAO,CAAP;AACD;AACD;AACF;AACA;;;AAGU,MAAJC,IAAI,GAAG;AACT,WAAO,KAAKF,QAAL,CAAcE,IAAd,CAAmB,KAAKC,KAAL,EAAnB,CAAP;AACD;AACD;AACF;AACA;;;AAGa,MAAPC,OAAO,GAAG;AACZ,WAAO,KAAKC,OAAZ;AACD;AACD;AACF;AACA;;;AAGa,MAAPA,OAAO,GAAG;AACZ,WAAO,CAAC,KAAKC,MAAb;AACD;AACD;AACF;AACA;;;AAGY,MAANA,MAAM,GAAG;AACX,WAAO,KAAKT,OAAL,EAAP;AACD;AACD;AACF;AACA;;;AAGEU,EAAAA,EAAE,CAACC,KAAD,EAAQ;AACR,WAAO,KAAKX,OAAL,QAAoBW,KAAK,YAAYZ,OAAjB,GAA2BY,KAAK,CAACX,OAAN,EAA3B,GAA6CW,KAAjE,CAAP;AACD;AACD;AACF;AACA;;;AAGEC,EAAAA,KAAK,GAAG;AACN,WAAOhB,QAAQ,CAAC,KAAKU,KAAL,EAAD,CAAf;AACD;AACD;AACF;AACA;;;AAGEO,EAAAA,OAAO,GAAG;AACR,WAAO,KAAKC,MAAL,EAAP;AACD;AACD;AACF;AACA;;;AAGEA,EAAAA,MAAM,GAAG;AACP,WAAO,KAAKd,OAAL,EAAP;AACD;AACD;AACF;AACA;;;AAGEe,EAAAA,SAAS,GAAG;AACV,WAAO,MAAP;AACD;AACD;AACF;AACA;;;AAGEC,EAAAA,QAAQ,GAAG;AACT,WAAO,KAAKF,MAAL,GAAcE,QAAd,EAAP;AACD;AACD;AACF;AACA;AACA;AACE;;;AAGAV,EAAAA,KAAK,CAACW,MAAD,EAAS;AACZ,WAAO,IAAIC,UAAJ,CAAe,CAAC,KAAKlB,OAAL,KAAiB,CAAjB,GAAqB,CAAtB,CAAf,CAAP;AACD;;AAxG+B","sourcesContent":["// Copyright 2017-2021 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { isU8a, u8aToHex } from '@polkadot/util';\n/** @internal */\n\nfunction decodeBool(value) {\n  if (value instanceof Boolean) {\n    return value.valueOf();\n  } else if (isU8a(value)) {\n    return value[0] === 1;\n  }\n\n  return !!value;\n}\n/**\n * @name bool\n * @description\n * Representation for a boolean value in the system. It extends the base JS `Boolean` class\n * @noInheritDoc\n */\n\n\nexport class bool extends Boolean {\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  constructor(registry, value = false) {\n    super(decodeBool(value));\n    this.registry = void 0;\n    this.registry = registry;\n  }\n  /**\n   * @description The length of the value when encoded as a Uint8Array\n   */\n\n\n  get encodedLength() {\n    return 1;\n  }\n  /**\n   * @description returns a hash of the contents\n   */\n\n\n  get hash() {\n    return this.registry.hash(this.toU8a());\n  }\n  /**\n   * @description Checks if the value is an empty value (true when it wraps false/default)\n   */\n\n\n  get isEmpty() {\n    return this.isFalse;\n  }\n  /**\n   * @description Checks if the value is an empty value (always false)\n   */\n\n\n  get isFalse() {\n    return !this.isTrue;\n  }\n  /**\n   * @description Checks if the value is an empty value (always false)\n   */\n\n\n  get isTrue() {\n    return this.valueOf();\n  }\n  /**\n   * @description Compares the value of the input to see if there is a match\n   */\n\n\n  eq(other) {\n    return this.valueOf() === (other instanceof Boolean ? other.valueOf() : other);\n  }\n  /**\n   * @description Returns a hex string representation of the value\n   */\n\n\n  toHex() {\n    return u8aToHex(this.toU8a());\n  }\n  /**\n   * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information\n   */\n\n\n  toHuman() {\n    return this.toJSON();\n  }\n  /**\n   * @description Converts the Object to JSON, typically used for RPC transfers\n   */\n\n\n  toJSON() {\n    return this.valueOf();\n  }\n  /**\n   * @description Returns the base runtime type name for this instance\n   */\n\n\n  toRawType() {\n    return 'bool';\n  }\n  /**\n   * @description Returns the string representation of the value\n   */\n\n\n  toString() {\n    return this.toJSON().toString();\n  }\n  /**\n   * @description Encodes the value as a Uint8Array as per the SCALE specifications\n   * @param isBare true when the value has none of the type-specific prefixes (internal)\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n\n\n  toU8a(isBare) {\n    return new Uint8Array([this.valueOf() ? 1 : 0]);\n  }\n\n}"]},"metadata":{},"sourceType":"module"}