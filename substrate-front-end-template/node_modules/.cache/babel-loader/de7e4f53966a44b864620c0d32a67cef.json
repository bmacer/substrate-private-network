{"ast":null,"code":"// Copyright 2017-2021 @polkadot/rpc-core authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { logger } from '@polkadot/util';\nimport { catchError, distinctUntilChanged, publishReplay, refCount, tap } from '@polkadot/x-rxjs/operators';\nimport { refCountDelay } from \"./refCountDelay.mjs\";\nconst l = logger('drr');\n\nconst CMP = (a, b) => JSON.stringify({\n  t: a\n}) === JSON.stringify({\n  t: b\n});\n\nconst ERR = error => {\n  l.error(error);\n  throw error;\n};\n\nconst NOOP = () => undefined;\n/**\n * Shorthand for distinctUntilChanged(), publishReplay(1) and refCount().\n *\n * @ignore\n * @internal\n */\n\n\nexport const drr = ({\n  delay,\n  skipChange = false,\n  skipTimeout = false\n} = {}) => source$ => source$.pipe(catchError(ERR), skipChange ? tap(NOOP) : distinctUntilChanged(CMP), publishReplay(1), skipTimeout ? refCount() : refCountDelay(delay));","map":{"version":3,"sources":["/Users/bmacer/substrate-node-template/substrate-front-end-template/node_modules/@polkadot/rpc-core/util/drr.mjs"],"names":["logger","catchError","distinctUntilChanged","publishReplay","refCount","tap","refCountDelay","l","CMP","a","b","JSON","stringify","t","ERR","error","NOOP","undefined","drr","delay","skipChange","skipTimeout","source$","pipe"],"mappings":"AAAA;AACA;AACA,SAASA,MAAT,QAAuB,gBAAvB;AACA,SAASC,UAAT,EAAqBC,oBAArB,EAA2CC,aAA3C,EAA0DC,QAA1D,EAAoEC,GAApE,QAA+E,4BAA/E;AACA,SAASC,aAAT,QAA8B,qBAA9B;AACA,MAAMC,CAAC,GAAGP,MAAM,CAAC,KAAD,CAAhB;;AAEA,MAAMQ,GAAG,GAAG,CAACC,CAAD,EAAIC,CAAJ,KAAUC,IAAI,CAACC,SAAL,CAAe;AACnCC,EAAAA,CAAC,EAAEJ;AADgC,CAAf,MAEfE,IAAI,CAACC,SAAL,CAAe;AACpBC,EAAAA,CAAC,EAAEH;AADiB,CAAf,CAFP;;AAMA,MAAMI,GAAG,GAAGC,KAAK,IAAI;AACnBR,EAAAA,CAAC,CAACQ,KAAF,CAAQA,KAAR;AACA,QAAMA,KAAN;AACD,CAHD;;AAKA,MAAMC,IAAI,GAAG,MAAMC,SAAnB;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,OAAO,MAAMC,GAAG,GAAG,CAAC;AAClBC,EAAAA,KADkB;AAElBC,EAAAA,UAAU,GAAG,KAFK;AAGlBC,EAAAA,WAAW,GAAG;AAHI,IAIhB,EAJe,KAIRC,OAAO,IAAIA,OAAO,CAACC,IAAR,CAAatB,UAAU,CAACa,GAAD,CAAvB,EAA8BM,UAAU,GAAGf,GAAG,CAACW,IAAD,CAAN,GAAed,oBAAoB,CAACM,GAAD,CAA3E,EAAkFL,aAAa,CAAC,CAAD,CAA/F,EAAoGkB,WAAW,GAAGjB,QAAQ,EAAX,GAAgBE,aAAa,CAACa,KAAD,CAA5I,CAJf","sourcesContent":["// Copyright 2017-2021 @polkadot/rpc-core authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { logger } from '@polkadot/util';\nimport { catchError, distinctUntilChanged, publishReplay, refCount, tap } from '@polkadot/x-rxjs/operators';\nimport { refCountDelay } from \"./refCountDelay.mjs\";\nconst l = logger('drr');\n\nconst CMP = (a, b) => JSON.stringify({\n  t: a\n}) === JSON.stringify({\n  t: b\n});\n\nconst ERR = error => {\n  l.error(error);\n  throw error;\n};\n\nconst NOOP = () => undefined;\n/**\n * Shorthand for distinctUntilChanged(), publishReplay(1) and refCount().\n *\n * @ignore\n * @internal\n */\n\n\nexport const drr = ({\n  delay,\n  skipChange = false,\n  skipTimeout = false\n} = {}) => source$ => source$.pipe(catchError(ERR), skipChange ? tap(NOOP) : distinctUntilChanged(CMP), publishReplay(1), skipTimeout ? refCount() : refCountDelay(delay));"]},"metadata":{},"sourceType":"module"}