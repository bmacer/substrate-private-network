{"ast":null,"code":"// Copyright 2017-2021 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { bufferToU8a } from \"../buffer/toU8a.mjs\";\nimport { hexToU8a } from \"../hex/toU8a.mjs\";\nimport { isBuffer } from \"../is/buffer.mjs\";\nimport { isHex } from \"../is/hex.mjs\";\nimport { isString } from \"../is/string.mjs\";\nimport { stringToU8a } from \"../string/toU8a.mjs\";\n\nfunction convertArray(value) {\n  return Array.isArray(value) ? Uint8Array.from(value) : value;\n}\n\nfunction convertString(value) {\n  return isHex(value) ? hexToU8a(value) : stringToU8a(value);\n}\n/**\n * @name u8aToU8a\n * @summary Creates a Uint8Array value from a Uint8Array, Buffer, string or hex input.\n * @description\n * `null` or `undefined` inputs returns a `[]` result, Uint8Array values returns the value, hex strings returns a Uint8Array representation.\n * @example\n * <BR>\n *\n * ```javascript\n * import { { u8aToU8a } from '@polkadot/util';\n *\n * u8aToU8a(new Uint8Array([0x12, 0x34]); // => Uint8Array([0x12, 0x34])\n * u8aToU8a(0x1234); // => Uint8Array([0x12, 0x34])\n * ```\n */\n\n\nexport function u8aToU8a(value) {\n  if (!value) {\n    return new Uint8Array();\n  } else if (isBuffer(value)) {\n    return bufferToU8a(value);\n  } else if (isString(value)) {\n    return convertString(value);\n  }\n\n  return convertArray(value);\n}","map":{"version":3,"sources":["/Users/bmacer/substrate-node-template/substrate-front-end-template/node_modules/@polkadot/util/u8a/toU8a.mjs"],"names":["bufferToU8a","hexToU8a","isBuffer","isHex","isString","stringToU8a","convertArray","value","Array","isArray","Uint8Array","from","convertString","u8aToU8a"],"mappings":"AAAA;AACA;AACA,SAASA,WAAT,QAA4B,qBAA5B;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,SAASC,KAAT,QAAsB,eAAtB;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,SAASC,WAAT,QAA4B,qBAA5B;;AAEA,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAC3B,SAAOC,KAAK,CAACC,OAAN,CAAcF,KAAd,IAAuBG,UAAU,CAACC,IAAX,CAAgBJ,KAAhB,CAAvB,GAAgDA,KAAvD;AACD;;AAED,SAASK,aAAT,CAAuBL,KAAvB,EAA8B;AAC5B,SAAOJ,KAAK,CAACI,KAAD,CAAL,GAAeN,QAAQ,CAACM,KAAD,CAAvB,GAAiCF,WAAW,CAACE,KAAD,CAAnD;AACD;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,OAAO,SAASM,QAAT,CAAkBN,KAAlB,EAAyB;AAC9B,MAAI,CAACA,KAAL,EAAY;AACV,WAAO,IAAIG,UAAJ,EAAP;AACD,GAFD,MAEO,IAAIR,QAAQ,CAACK,KAAD,CAAZ,EAAqB;AAC1B,WAAOP,WAAW,CAACO,KAAD,CAAlB;AACD,GAFM,MAEA,IAAIH,QAAQ,CAACG,KAAD,CAAZ,EAAqB;AAC1B,WAAOK,aAAa,CAACL,KAAD,CAApB;AACD;;AAED,SAAOD,YAAY,CAACC,KAAD,CAAnB;AACD","sourcesContent":["// Copyright 2017-2021 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { bufferToU8a } from \"../buffer/toU8a.mjs\";\nimport { hexToU8a } from \"../hex/toU8a.mjs\";\nimport { isBuffer } from \"../is/buffer.mjs\";\nimport { isHex } from \"../is/hex.mjs\";\nimport { isString } from \"../is/string.mjs\";\nimport { stringToU8a } from \"../string/toU8a.mjs\";\n\nfunction convertArray(value) {\n  return Array.isArray(value) ? Uint8Array.from(value) : value;\n}\n\nfunction convertString(value) {\n  return isHex(value) ? hexToU8a(value) : stringToU8a(value);\n}\n/**\n * @name u8aToU8a\n * @summary Creates a Uint8Array value from a Uint8Array, Buffer, string or hex input.\n * @description\n * `null` or `undefined` inputs returns a `[]` result, Uint8Array values returns the value, hex strings returns a Uint8Array representation.\n * @example\n * <BR>\n *\n * ```javascript\n * import { { u8aToU8a } from '@polkadot/util';\n *\n * u8aToU8a(new Uint8Array([0x12, 0x34]); // => Uint8Array([0x12, 0x34])\n * u8aToU8a(0x1234); // => Uint8Array([0x12, 0x34])\n * ```\n */\n\n\nexport function u8aToU8a(value) {\n  if (!value) {\n    return new Uint8Array();\n  } else if (isBuffer(value)) {\n    return bufferToU8a(value);\n  } else if (isString(value)) {\n    return convertString(value);\n  }\n\n  return convertArray(value);\n}"]},"metadata":{},"sourceType":"module"}