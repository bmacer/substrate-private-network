{"ast":null,"code":"// Copyright 2017-2021 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport BN from 'bn.js';\nimport { u8aToBn, u8aToU8a } from \"../u8a/index.mjs\";\nimport { DEFAULT_BITLENGTH } from \"./defaults.mjs\";\n/**\n * @name compactFromU8a\n * @description Retrievs the offset and encoded length from a compact-prefixed value\n * @example\n * <BR>\n *\n * ```javascript\n * import { compactFromU8a } from '@polkadot/util';\n *\n * const [offset, length] = compactFromU8a(new Uint8Array([254, 255, 3, 0]), 32));\n *\n * console.log('value offset=', offset, 'length=', length); // 4, 0xffff\n * ```\n */\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\n\nexport function compactFromU8a(_input, bitLength = DEFAULT_BITLENGTH) {\n  const input = u8aToU8a(_input);\n  const flag = input[0] & 0b11;\n\n  if (flag === 0b00) {\n    return [1, new BN(input[0]).shrn(2)];\n  } else if (flag === 0b01) {\n    return [2, u8aToBn(input.slice(0, 2), true).shrn(2)];\n  } else if (flag === 0b10) {\n    return [4, u8aToBn(input.slice(0, 4), true).shrn(2)];\n  }\n\n  const length = new BN(input[0]).shrn(2) // clear flag\n  .addn(4) // add 4 for base length\n  .toNumber();\n  const offset = 1 + length;\n  return [offset, u8aToBn(input.subarray(1, offset), true)];\n}","map":{"version":3,"sources":["/Users/bmacer/substrate-node-template/substrate-front-end-template/node_modules/@polkadot/util/compact/fromU8a.mjs"],"names":["BN","u8aToBn","u8aToU8a","DEFAULT_BITLENGTH","compactFromU8a","_input","bitLength","input","flag","shrn","slice","length","addn","toNumber","offset","subarray"],"mappings":"AAAA;AACA;AACA,OAAOA,EAAP,MAAe,OAAf;AACA,SAASC,OAAT,EAAkBC,QAAlB,QAAkC,kBAAlC;AACA,SAASC,iBAAT,QAAkC,gBAAlC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,SAASC,cAAT,CAAwBC,MAAxB,EAAgCC,SAAS,GAAGH,iBAA5C,EAA+D;AACpE,QAAMI,KAAK,GAAGL,QAAQ,CAACG,MAAD,CAAtB;AACA,QAAMG,IAAI,GAAGD,KAAK,CAAC,CAAD,CAAL,GAAW,IAAxB;;AAEA,MAAIC,IAAI,KAAK,IAAb,EAAmB;AACjB,WAAO,CAAC,CAAD,EAAI,IAAIR,EAAJ,CAAOO,KAAK,CAAC,CAAD,CAAZ,EAAiBE,IAAjB,CAAsB,CAAtB,CAAJ,CAAP;AACD,GAFD,MAEO,IAAID,IAAI,KAAK,IAAb,EAAmB;AACxB,WAAO,CAAC,CAAD,EAAIP,OAAO,CAACM,KAAK,CAACG,KAAN,CAAY,CAAZ,EAAe,CAAf,CAAD,EAAoB,IAApB,CAAP,CAAiCD,IAAjC,CAAsC,CAAtC,CAAJ,CAAP;AACD,GAFM,MAEA,IAAID,IAAI,KAAK,IAAb,EAAmB;AACxB,WAAO,CAAC,CAAD,EAAIP,OAAO,CAACM,KAAK,CAACG,KAAN,CAAY,CAAZ,EAAe,CAAf,CAAD,EAAoB,IAApB,CAAP,CAAiCD,IAAjC,CAAsC,CAAtC,CAAJ,CAAP;AACD;;AAED,QAAME,MAAM,GAAG,IAAIX,EAAJ,CAAOO,KAAK,CAAC,CAAD,CAAZ,EAAiBE,IAAjB,CAAsB,CAAtB,EAAyB;AAAzB,GACdG,IADc,CACT,CADS,EACN;AADM,GAEdC,QAFc,EAAf;AAGA,QAAMC,MAAM,GAAG,IAAIH,MAAnB;AACA,SAAO,CAACG,MAAD,EAASb,OAAO,CAACM,KAAK,CAACQ,QAAN,CAAe,CAAf,EAAkBD,MAAlB,CAAD,EAA4B,IAA5B,CAAhB,CAAP;AACD","sourcesContent":["// Copyright 2017-2021 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport BN from 'bn.js';\nimport { u8aToBn, u8aToU8a } from \"../u8a/index.mjs\";\nimport { DEFAULT_BITLENGTH } from \"./defaults.mjs\";\n/**\n * @name compactFromU8a\n * @description Retrievs the offset and encoded length from a compact-prefixed value\n * @example\n * <BR>\n *\n * ```javascript\n * import { compactFromU8a } from '@polkadot/util';\n *\n * const [offset, length] = compactFromU8a(new Uint8Array([254, 255, 3, 0]), 32));\n *\n * console.log('value offset=', offset, 'length=', length); // 4, 0xffff\n * ```\n */\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\n\nexport function compactFromU8a(_input, bitLength = DEFAULT_BITLENGTH) {\n  const input = u8aToU8a(_input);\n  const flag = input[0] & 0b11;\n\n  if (flag === 0b00) {\n    return [1, new BN(input[0]).shrn(2)];\n  } else if (flag === 0b01) {\n    return [2, u8aToBn(input.slice(0, 2), true).shrn(2)];\n  } else if (flag === 0b10) {\n    return [4, u8aToBn(input.slice(0, 4), true).shrn(2)];\n  }\n\n  const length = new BN(input[0]).shrn(2) // clear flag\n  .addn(4) // add 4 for base length\n  .toNumber();\n  const offset = 1 + length;\n  return [offset, u8aToBn(input.subarray(1, offset), true)];\n}"]},"metadata":{},"sourceType":"module"}