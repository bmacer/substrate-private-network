{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n} // Copyright 2017-2021 @polkadot/api-derive authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\n\nimport { assert, isFunction } from '@polkadot/util';\nimport { combineLatest, of } from '@polkadot/x-rxjs';\nimport { map, switchMap } from '@polkadot/x-rxjs/operators';\nimport { memo } from \"../util/index.mjs\";\n\nfunction getBalance(api, [freeBalance, reservedBalance, frozenFee, frozenMisc]) {\n  return {\n    freeBalance,\n    frozenFee,\n    frozenMisc,\n    reservedBalance,\n    votingBalance: api.registry.createType('Balance', freeBalance.toBn())\n  };\n}\n\nfunction calcBalances(api, [accountId, [accountNonce, balances]]) {\n  const primary = balances[0];\n  assert(primary, 'No balances retrieved for account');\n  return _objectSpread({\n    accountId,\n    accountNonce,\n    additional: balances.filter((_, index) => index !== 0).map(b => getBalance(api, b))\n  }, getBalance(api, primary));\n} // old\n\n\nfunction queryBalancesFree(api, accountId) {\n  return api.queryMulti([[api.query.balances.freeBalance, accountId], [api.query.balances.reservedBalance, accountId], [api.query.system.accountNonce, accountId]]).pipe(map(([freeBalance, reservedBalance, accountNonce]) => [accountNonce, [[freeBalance, reservedBalance, api.registry.createType('Balance'), api.registry.createType('Balance')]]]));\n}\n\nfunction queryBalancesAccount(api, accountId, modules = ['balances']) {\n  const balances = modules.map(m => [api.query[m].account, accountId]);\n\n  const extract = data => data.map(({\n    feeFrozen,\n    free,\n    miscFrozen,\n    reserved\n  }) => [free, reserved, feeFrozen, miscFrozen]);\n\n  return isFunction(api.query.system.account) ? api.queryMulti([[api.query.system.account, accountId], ...balances]).pipe(map(([{\n    nonce\n  }, ...balances]) => [nonce, extract(balances)])) : api.queryMulti([[api.query.system.accountNonce, accountId], ...balances]).pipe(map(([nonce, ...balances]) => [nonce, extract(balances)]));\n}\n\nfunction queryCurrent(api, accountId) {\n  // AccountInfo is current, support old, eg. Edgeware\n  return api.query.system.account(accountId).pipe(map(infoOrTuple => {\n    const {\n      feeFrozen,\n      free,\n      miscFrozen,\n      reserved\n    } = infoOrTuple.nonce ? infoOrTuple.data : infoOrTuple[1];\n    const accountNonce = infoOrTuple.nonce || infoOrTuple[0];\n    return [accountNonce, [[free, reserved, feeFrozen, miscFrozen]]];\n  }));\n}\n/**\n * @name account\n * @param {( AccountIndex | AccountId | Address | string )} address - An accounts Id in different formats.\n * @returns An object containing the results of various balance queries\n * @example\n * <BR>\n *\n * ```javascript\n * const ALICE = 'F7Hs';\n *\n * api.derive.balances.all(ALICE, ({ accountId, lockedBalance }) => {\n *   console.log(`The account ${accountId} has a locked balance ${lockedBalance} units.`);\n * });\n * ```\n */\n\n\nexport function account(instanceId, api) {\n  const balanceInstances = api.registry.getModuleInstances(api.runtimeVersion.specName.toString(), 'balances');\n  return memo(instanceId, address => api.derive.accounts.accountId(address).pipe(switchMap(accountId => accountId ? combineLatest([of(accountId), balanceInstances ? queryBalancesAccount(api, accountId, balanceInstances) : isFunction(api.query.system.account) ? queryCurrent(api, accountId) : isFunction(api.query.balances.account) ? queryBalancesAccount(api, accountId) : queryBalancesFree(api, accountId)]) : of([api.registry.createType('AccountId'), [api.registry.createType('Index'), [[api.registry.createType('Balance'), api.registry.createType('Balance'), api.registry.createType('Balance'), api.registry.createType('Balance')]]]])), map(result => calcBalances(api, result))));\n}","map":{"version":3,"sources":["/Users/bmacer/substrate-node-template/substrate-front-end-template/node_modules/@polkadot/api-derive/balances/account.mjs"],"names":["_defineProperty","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","getOwnPropertyDescriptors","defineProperties","defineProperty","assert","isFunction","combineLatest","of","map","switchMap","memo","getBalance","api","freeBalance","reservedBalance","frozenFee","frozenMisc","votingBalance","registry","createType","toBn","calcBalances","accountId","accountNonce","balances","primary","additional","_","index","b","queryBalancesFree","queryMulti","query","system","pipe","queryBalancesAccount","modules","m","account","extract","data","feeFrozen","free","miscFrozen","reserved","nonce","queryCurrent","infoOrTuple","instanceId","balanceInstances","getModuleInstances","runtimeVersion","specName","toString","address","derive","accounts","result"],"mappings":"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","sourcesContent":["import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n// Copyright 2017-2021 @polkadot/api-derive authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { assert, isFunction } from '@polkadot/util';\nimport { combineLatest, of } from '@polkadot/x-rxjs';\nimport { map, switchMap } from '@polkadot/x-rxjs/operators';\nimport { memo } from \"../util/index.mjs\";\n\nfunction getBalance(api, [freeBalance, reservedBalance, frozenFee, frozenMisc]) {\n  return {\n    freeBalance,\n    frozenFee,\n    frozenMisc,\n    reservedBalance,\n    votingBalance: api.registry.createType('Balance', freeBalance.toBn())\n  };\n}\n\nfunction calcBalances(api, [accountId, [accountNonce, balances]]) {\n  const primary = balances[0];\n  assert(primary, 'No balances retrieved for account');\n  return _objectSpread({\n    accountId,\n    accountNonce,\n    additional: balances.filter((_, index) => index !== 0).map(b => getBalance(api, b))\n  }, getBalance(api, primary));\n} // old\n\n\nfunction queryBalancesFree(api, accountId) {\n  return api.queryMulti([[api.query.balances.freeBalance, accountId], [api.query.balances.reservedBalance, accountId], [api.query.system.accountNonce, accountId]]).pipe(map(([freeBalance, reservedBalance, accountNonce]) => [accountNonce, [[freeBalance, reservedBalance, api.registry.createType('Balance'), api.registry.createType('Balance')]]]));\n}\n\nfunction queryBalancesAccount(api, accountId, modules = ['balances']) {\n  const balances = modules.map(m => [api.query[m].account, accountId]);\n\n  const extract = data => data.map(({\n    feeFrozen,\n    free,\n    miscFrozen,\n    reserved\n  }) => [free, reserved, feeFrozen, miscFrozen]);\n\n  return isFunction(api.query.system.account) ? api.queryMulti([[api.query.system.account, accountId], ...balances]).pipe(map(([{\n    nonce\n  }, ...balances]) => [nonce, extract(balances)])) : api.queryMulti([[api.query.system.accountNonce, accountId], ...balances]).pipe(map(([nonce, ...balances]) => [nonce, extract(balances)]));\n}\n\nfunction queryCurrent(api, accountId) {\n  // AccountInfo is current, support old, eg. Edgeware\n  return api.query.system.account(accountId).pipe(map(infoOrTuple => {\n    const {\n      feeFrozen,\n      free,\n      miscFrozen,\n      reserved\n    } = infoOrTuple.nonce ? infoOrTuple.data : infoOrTuple[1];\n    const accountNonce = infoOrTuple.nonce || infoOrTuple[0];\n    return [accountNonce, [[free, reserved, feeFrozen, miscFrozen]]];\n  }));\n}\n/**\n * @name account\n * @param {( AccountIndex | AccountId | Address | string )} address - An accounts Id in different formats.\n * @returns An object containing the results of various balance queries\n * @example\n * <BR>\n *\n * ```javascript\n * const ALICE = 'F7Hs';\n *\n * api.derive.balances.all(ALICE, ({ accountId, lockedBalance }) => {\n *   console.log(`The account ${accountId} has a locked balance ${lockedBalance} units.`);\n * });\n * ```\n */\n\n\nexport function account(instanceId, api) {\n  const balanceInstances = api.registry.getModuleInstances(api.runtimeVersion.specName.toString(), 'balances');\n  return memo(instanceId, address => api.derive.accounts.accountId(address).pipe(switchMap(accountId => accountId ? combineLatest([of(accountId), balanceInstances ? queryBalancesAccount(api, accountId, balanceInstances) : isFunction(api.query.system.account) ? queryCurrent(api, accountId) : isFunction(api.query.balances.account) ? queryBalancesAccount(api, accountId) : queryBalancesFree(api, accountId)]) : of([api.registry.createType('AccountId'), [api.registry.createType('Index'), [[api.registry.createType('Balance'), api.registry.createType('Balance'), api.registry.createType('Balance'), api.registry.createType('Balance')]]]])), map(result => calcBalances(api, result))));\n}"]},"metadata":{},"sourceType":"module"}