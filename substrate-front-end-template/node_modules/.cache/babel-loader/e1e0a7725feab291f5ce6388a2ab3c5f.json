{"ast":null,"code":"// Copyright 2017-2021 @polkadot/metadata authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { stringCamelCase } from '@polkadot/util';\n\nfunction isEvent(event, sectionIndex, eventIndex) {\n  return event.index[0] === sectionIndex && event.index[1] === eventIndex;\n}\n/** @internal */\n\n\nexport function decorateEvents(_, {\n  modules\n}, metaVersion) {\n  return modules.filter(({\n    events\n  }) => events.isSome).reduce((result, {\n    events,\n    index,\n    name\n  }, _sectionIndex) => {\n    const sectionIndex = metaVersion >= 12 ? index.toNumber() : _sectionIndex;\n    result[stringCamelCase(name)] = events.unwrap().reduce((newModule, meta, eventIndex) => {\n      // we don't camelCase the event name\n      newModule[meta.name.toString()] = {\n        is: eventRecord => isEvent(eventRecord, sectionIndex, eventIndex),\n        meta\n      };\n      return newModule;\n    }, {});\n    return result;\n  }, {});\n}","map":{"version":3,"sources":["/Users/bmacer/substrate-node-template/substrate-front-end-template/node_modules/@polkadot/metadata/decorate/events/index.mjs"],"names":["stringCamelCase","isEvent","event","sectionIndex","eventIndex","index","decorateEvents","_","modules","metaVersion","filter","events","isSome","reduce","result","name","_sectionIndex","toNumber","unwrap","newModule","meta","toString","is","eventRecord"],"mappings":"AAAA;AACA;AACA,SAASA,eAAT,QAAgC,gBAAhC;;AAEA,SAASC,OAAT,CAAiBC,KAAjB,EAAwBC,YAAxB,EAAsCC,UAAtC,EAAkD;AAChD,SAAOF,KAAK,CAACG,KAAN,CAAY,CAAZ,MAAmBF,YAAnB,IAAmCD,KAAK,CAACG,KAAN,CAAY,CAAZ,MAAmBD,UAA7D;AACD;AACD;;;AAGA,OAAO,SAASE,cAAT,CAAwBC,CAAxB,EAA2B;AAChCC,EAAAA;AADgC,CAA3B,EAEJC,WAFI,EAES;AACd,SAAOD,OAAO,CAACE,MAAR,CAAe,CAAC;AACrBC,IAAAA;AADqB,GAAD,KAEhBA,MAAM,CAACC,MAFN,EAEcC,MAFd,CAEqB,CAACC,MAAD,EAAS;AACnCH,IAAAA,MADmC;AAEnCN,IAAAA,KAFmC;AAGnCU,IAAAA;AAHmC,GAAT,EAIzBC,aAJyB,KAIP;AACnB,UAAMb,YAAY,GAAGM,WAAW,IAAI,EAAf,GAAoBJ,KAAK,CAACY,QAAN,EAApB,GAAuCD,aAA5D;AACAF,IAAAA,MAAM,CAACd,eAAe,CAACe,IAAD,CAAhB,CAAN,GAAgCJ,MAAM,CAACO,MAAP,GAAgBL,MAAhB,CAAuB,CAACM,SAAD,EAAYC,IAAZ,EAAkBhB,UAAlB,KAAiC;AACtF;AACAe,MAAAA,SAAS,CAACC,IAAI,CAACL,IAAL,CAAUM,QAAV,EAAD,CAAT,GAAkC;AAChCC,QAAAA,EAAE,EAAEC,WAAW,IAAItB,OAAO,CAACsB,WAAD,EAAcpB,YAAd,EAA4BC,UAA5B,CADM;AAEhCgB,QAAAA;AAFgC,OAAlC;AAIA,aAAOD,SAAP;AACD,KAP+B,EAO7B,EAP6B,CAAhC;AAQA,WAAOL,MAAP;AACD,GAjBM,EAiBJ,EAjBI,CAAP;AAkBD","sourcesContent":["// Copyright 2017-2021 @polkadot/metadata authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { stringCamelCase } from '@polkadot/util';\n\nfunction isEvent(event, sectionIndex, eventIndex) {\n  return event.index[0] === sectionIndex && event.index[1] === eventIndex;\n}\n/** @internal */\n\n\nexport function decorateEvents(_, {\n  modules\n}, metaVersion) {\n  return modules.filter(({\n    events\n  }) => events.isSome).reduce((result, {\n    events,\n    index,\n    name\n  }, _sectionIndex) => {\n    const sectionIndex = metaVersion >= 12 ? index.toNumber() : _sectionIndex;\n    result[stringCamelCase(name)] = events.unwrap().reduce((newModule, meta, eventIndex) => {\n      // we don't camelCase the event name\n      newModule[meta.name.toString()] = {\n        is: eventRecord => isEvent(eventRecord, sectionIndex, eventIndex),\n        meta\n      };\n      return newModule;\n    }, {});\n    return result;\n  }, {});\n}"]},"metadata":{},"sourceType":"module"}