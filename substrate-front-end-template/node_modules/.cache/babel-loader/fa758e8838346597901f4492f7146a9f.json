{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n} // Copyright 2017-2021 @polkadot/ui-keyring authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\n\nimport { BehaviorSubject } from '@polkadot/x-rxjs';\nimport { createOptionItem } from \"../options/item.mjs\";\nimport { env } from \"./env.mjs\";\n\nfunction callNext(current, subject, withTest) {\n  const isDevMode = env.isDevelopment();\n  const filtered = {};\n  Object.keys(current).forEach(key => {\n    const {\n      json: {\n        meta: {\n          isTesting = false\n        } = {}\n      } = {}\n    } = current[key];\n\n    if (!withTest || isDevMode || isTesting !== true) {\n      filtered[key] = current[key];\n    }\n  });\n  subject.next(filtered);\n}\n\nexport function genericSubject(keyCreator, withTest = false) {\n  let current = {};\n  const subject = new BehaviorSubject({});\n\n  const next = () => callNext(current, subject, withTest);\n\n  env.subject.subscribe(next);\n  return {\n    add: (store, address, json, type) => {\n      current = _objectSpread({}, current);\n      current[address] = {\n        json: _objectSpread(_objectSpread({}, json), {}, {\n          address\n        }),\n        option: createOptionItem(address, json.meta.name),\n        type\n      }; // we do not store dev or injected accounts (external/transient)\n\n      if (!json.meta.isInjected && (!json.meta.isTesting || env.isDevelopment())) {\n        store.set(keyCreator(address), json);\n      }\n\n      next();\n      return current[address];\n    },\n    remove: (store, address) => {\n      current = _objectSpread({}, current);\n      delete current[address];\n      store.remove(keyCreator(address));\n      next();\n    },\n    subject\n  };\n}","map":{"version":3,"sources":["/Users/bmacer/substrate-node-template/substrate-front-end-template/node_modules/@polkadot/ui-keyring/observable/genericSubject.mjs"],"names":["_defineProperty","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","getOwnPropertyDescriptors","defineProperties","defineProperty","BehaviorSubject","createOptionItem","env","callNext","current","subject","withTest","isDevMode","isDevelopment","filtered","json","meta","isTesting","next","genericSubject","keyCreator","subscribe","add","store","address","type","option","name","isInjected","set","remove"],"mappings":"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","sourcesContent":["import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n// Copyright 2017-2021 @polkadot/ui-keyring authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { BehaviorSubject } from '@polkadot/x-rxjs';\nimport { createOptionItem } from \"../options/item.mjs\";\nimport { env } from \"./env.mjs\";\n\nfunction callNext(current, subject, withTest) {\n  const isDevMode = env.isDevelopment();\n  const filtered = {};\n  Object.keys(current).forEach(key => {\n    const {\n      json: {\n        meta: {\n          isTesting = false\n        } = {}\n      } = {}\n    } = current[key];\n\n    if (!withTest || isDevMode || isTesting !== true) {\n      filtered[key] = current[key];\n    }\n  });\n  subject.next(filtered);\n}\n\nexport function genericSubject(keyCreator, withTest = false) {\n  let current = {};\n  const subject = new BehaviorSubject({});\n\n  const next = () => callNext(current, subject, withTest);\n\n  env.subject.subscribe(next);\n  return {\n    add: (store, address, json, type) => {\n      current = _objectSpread({}, current);\n      current[address] = {\n        json: _objectSpread(_objectSpread({}, json), {}, {\n          address\n        }),\n        option: createOptionItem(address, json.meta.name),\n        type\n      }; // we do not store dev or injected accounts (external/transient)\n\n      if (!json.meta.isInjected && (!json.meta.isTesting || env.isDevelopment())) {\n        store.set(keyCreator(address), json);\n      }\n\n      next();\n      return current[address];\n    },\n    remove: (store, address) => {\n      current = _objectSpread({}, current);\n      delete current[address];\n      store.remove(keyCreator(address));\n      next();\n    },\n    subject\n  };\n}"]},"metadata":{},"sourceType":"module"}