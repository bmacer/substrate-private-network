{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n} // Copyright 2017-2021 @polkadot/types-known authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\n/* eslint-disable sort-keys */\n\n\nconst sharedTypes = {\n  // substrate\n  AccountInfo: 'AccountInfoWithRefCount',\n  Address: 'LookupSource',\n  LookupSource: 'IndicesLookupSource',\n  Multiplier: 'Fixed64',\n  // Anchor\n  AnchorData: {\n    anchoredBlock: 'u64',\n    docRoot: 'H256',\n    id: 'H256'\n  },\n  PreCommitData: {\n    expirationBlock: 'u64',\n    identity: 'H256',\n    signingRoot: 'H256'\n  },\n  // Fees\n  Fee: {\n    key: 'Hash',\n    price: 'Balance'\n  },\n  // MultiAccount\n  MultiAccountData: {\n    deposit: 'Balance',\n    depositor: 'AccountId',\n    signatories: 'Vec<AccountId>',\n    threshold: 'u16'\n  },\n  // Bridge\n  ChainId: 'u8',\n  DepositNonce: 'u64',\n  ResourceId: '[u8; 32]',\n  'chainbridge::ChainId': 'u8',\n  // NFT\n  RegistryId: 'H160',\n  TokenId: 'U256',\n  AssetId: {\n    registryId: 'RegistryId',\n    tokenId: 'TokenId'\n  },\n  AssetInfo: {\n    metadata: 'Bytes'\n  },\n  MintInfo: {\n    anchorId: 'Hash',\n    proofs: 'Vec<ProofMint>',\n    staticHashes: '[Hash; 3]'\n  },\n  Proof: {\n    leafHash: 'H256',\n    sortedHashes: 'H256'\n  },\n  ProofMint: {\n    hashes: 'Vec<Hash>',\n    property: 'Bytes',\n    salt: '[u8; 32]',\n    value: 'Bytes'\n  },\n  RegistryInfo: {\n    fields: 'Vec<Bytes>',\n    ownerCanBurn: 'bool'\n  }\n};\nconst versioned = [{\n  minmax: [240, undefined],\n  types: _objectSpread(_objectSpread({}, sharedTypes), {}, {\n    RefCount: 'RefCountTo259'\n  })\n}];\nexport default versioned;","map":{"version":3,"sources":["/Users/bmacer/substrate-node-template/substrate-front-end-template/node_modules/@polkadot/types-known/spec/centrifuge-chain.mjs"],"names":["_defineProperty","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","getOwnPropertyDescriptors","defineProperties","defineProperty","sharedTypes","AccountInfo","Address","LookupSource","Multiplier","AnchorData","anchoredBlock","docRoot","id","PreCommitData","expirationBlock","identity","signingRoot","Fee","price","MultiAccountData","deposit","depositor","signatories","threshold","ChainId","DepositNonce","ResourceId","RegistryId","TokenId","AssetId","registryId","tokenId","AssetInfo","metadata","MintInfo","anchorId","proofs","staticHashes","Proof","leafHash","sortedHashes","ProofMint","hashes","property","salt","value","RegistryInfo","fields","ownerCanBurn","versioned","minmax","undefined","types","RefCount"],"mappings":"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","sourcesContent":["import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n// Copyright 2017-2021 @polkadot/types-known authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\n/* eslint-disable sort-keys */\nconst sharedTypes = {\n  // substrate\n  AccountInfo: 'AccountInfoWithRefCount',\n  Address: 'LookupSource',\n  LookupSource: 'IndicesLookupSource',\n  Multiplier: 'Fixed64',\n  // Anchor\n  AnchorData: {\n    anchoredBlock: 'u64',\n    docRoot: 'H256',\n    id: 'H256'\n  },\n  PreCommitData: {\n    expirationBlock: 'u64',\n    identity: 'H256',\n    signingRoot: 'H256'\n  },\n  // Fees\n  Fee: {\n    key: 'Hash',\n    price: 'Balance'\n  },\n  // MultiAccount\n  MultiAccountData: {\n    deposit: 'Balance',\n    depositor: 'AccountId',\n    signatories: 'Vec<AccountId>',\n    threshold: 'u16'\n  },\n  // Bridge\n  ChainId: 'u8',\n  DepositNonce: 'u64',\n  ResourceId: '[u8; 32]',\n  'chainbridge::ChainId': 'u8',\n  // NFT\n  RegistryId: 'H160',\n  TokenId: 'U256',\n  AssetId: {\n    registryId: 'RegistryId',\n    tokenId: 'TokenId'\n  },\n  AssetInfo: {\n    metadata: 'Bytes'\n  },\n  MintInfo: {\n    anchorId: 'Hash',\n    proofs: 'Vec<ProofMint>',\n    staticHashes: '[Hash; 3]'\n  },\n  Proof: {\n    leafHash: 'H256',\n    sortedHashes: 'H256'\n  },\n  ProofMint: {\n    hashes: 'Vec<Hash>',\n    property: 'Bytes',\n    salt: '[u8; 32]',\n    value: 'Bytes'\n  },\n  RegistryInfo: {\n    fields: 'Vec<Bytes>',\n    ownerCanBurn: 'bool'\n  }\n};\nconst versioned = [{\n  minmax: [240, undefined],\n  types: _objectSpread(_objectSpread({}, sharedTypes), {}, {\n    RefCount: 'RefCountTo259'\n  })\n}];\nexport default versioned;"]},"metadata":{},"sourceType":"module"}