{"ast":null,"code":"// Copyright 2017-2021 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// order important in structs... :)\n\n/* eslint-disable sort-keys */\nexport default {\n  rpc: {\n    call: {\n      description: 'Executes a call to a contract',\n      params: [{\n        name: 'callRequest',\n        type: 'ContractCallRequest'\n      }, {\n        name: 'at',\n        type: 'BlockHash',\n        isHistoric: true,\n        isOptional: true\n      }],\n      type: 'ContractExecResult'\n    },\n    getStorage: {\n      description: 'Returns the value under a specified storage key in a contract',\n      params: [{\n        name: 'address',\n        type: 'AccountId'\n      }, {\n        name: 'key',\n        type: 'H256'\n      }, {\n        name: 'at',\n        type: 'BlockHash',\n        isHistoric: true,\n        isOptional: true\n      }],\n      type: 'Option<Bytes>'\n    },\n    rentProjection: {\n      description: 'Returns the projected time a given contract will be able to sustain paying its rent',\n      params: [{\n        name: 'address',\n        type: 'AccountId'\n      }, {\n        name: 'at',\n        type: 'BlockHash',\n        isHistoric: true,\n        isOptional: true\n      }],\n      type: 'Option<BlockNumber>'\n    }\n  },\n  types: {\n    AliveContractInfo: {\n      trieId: 'TrieId',\n      storageSize: 'u32',\n      emptyPairCount: 'u32',\n      totalPairCount: 'u32',\n      codeHash: 'CodeHash',\n      rentAllowance: 'Balance',\n      deductBlock: 'BlockNumber',\n      lastWrite: 'Option<BlockNumber>'\n    },\n    CodeHash: 'Hash',\n    ContractCallRequest: {\n      origin: 'AccountId',\n      dest: 'AccountId',\n      value: 'Balance',\n      gasLimit: 'u64',\n      inputData: 'Bytes'\n    },\n    ContractExecResultSuccessTo255: {\n      status: 'u8',\n      data: 'Raw'\n    },\n    ContractExecResultTo255: {\n      _enum: {\n        Success: 'ContractExecResultSuccessTo255',\n        Error: 'Null'\n      }\n    },\n    ContractExecResultSuccessTo260: {\n      flags: 'u32',\n      data: 'Bytes',\n      gasConsumed: 'u64'\n    },\n    ContractExecResultTo260: {\n      _enum: {\n        Success: 'ContractExecResultSuccessTo260',\n        Error: 'Null'\n      }\n    },\n    ContractExecResultErrModule: {\n      index: 'u8',\n      error: 'u8',\n      message: 'Option<Text>'\n    },\n    ContractExecResultErr: {\n      _enum: {\n        Other: 'Text',\n        CannotLookup: 'Null',\n        BadOrigin: 'Null',\n        Module: 'ContractExecResultErrModule'\n      }\n    },\n    ContractExecResultOk: {\n      flags: 'u32',\n      data: 'Bytes'\n    },\n    ContractExecResultResult: {\n      _enum: {\n        Ok: 'ContractExecResultOk',\n        Err: 'ContractExecResultErr'\n      }\n    },\n    ContractExecResult: {\n      gasConsumed: 'u64',\n      debugMessage: 'Text',\n      result: 'ContractExecResultResult'\n    },\n    ContractInfo: {\n      _enum: {\n        Alive: 'AliveContractInfo',\n        Tombstone: 'TombstoneContractInfo'\n      }\n    },\n    ContractStorageKey: '[u8; 32]',\n    DeletedContract: {\n      pairCount: 'u32',\n      trieId: 'TrieId'\n    },\n    Gas: 'u64',\n    HostFnWeights: {\n      caller: 'Weight',\n      address: 'Weight',\n      gasLeft: 'Weight',\n      balance: 'Weight',\n      valueTransferred: 'Weight',\n      minimumBalance: 'Weight',\n      tombstoneDeposit: 'Weight',\n      rentAllowance: 'Weight',\n      blockNumber: 'Weight',\n      now: 'Weight',\n      weightToFee: 'Weight',\n      gas: 'Weight',\n      input: 'Weight',\n      inputPerByte: 'Weight',\n      return: 'Weight',\n      returnPerByte: 'Weight',\n      terminate: 'Weight',\n      restoreTo: 'Weight',\n      restoreToPerDelta: 'Weight',\n      random: 'Weight',\n      depositEvent: 'Weight',\n      depositEventPerTopic: 'Weight',\n      depositEventPerByte: 'Weight',\n      setRentAllowance: 'Weight',\n      setStorage: 'Weight',\n      setStoragePerByte: 'Weight',\n      clearStorage: 'Weight',\n      getStorage: 'Weight',\n      getStoragePerByte: 'Weight',\n      transfer: 'Weight',\n      call: 'Weight',\n      callTransferSurcharge: 'Weight',\n      callPerInputByte: 'Weight',\n      callPerOutputByte: 'Weight',\n      instantiate: 'Weight',\n      instantiatePerInputByte: 'Weight',\n      instantiatePerOutputByte: 'Weight',\n      hashSha2256: 'Weight',\n      hashSha2256PerByte: 'Weight',\n      hashKeccak256: 'Weight',\n      hashKeccak256PerByte: 'Weight',\n      hashBlake2256: 'Weight',\n      hashBlake2256PerByte: 'Weight',\n      hashBlake2128: 'Weight',\n      hashBlake2128PerByte: 'Weight'\n    },\n    InstructionWeights: {\n      i64const: 'u32',\n      i64load: 'u32',\n      i64store: 'u32',\n      select: 'u32',\n      rIf: 'u32',\n      br: 'u32',\n      brIf: 'u32',\n      brIable: 'u32',\n      brIablePerEntry: 'u32',\n      call: 'u32',\n      callIndirect: 'u32',\n      callIndirectPerParam: 'u32',\n      localGet: 'u32',\n      localSet: 'u32',\n      local_tee: 'u32',\n      globalGet: 'u32',\n      globalSet: 'u32',\n      memoryCurrent: 'u32',\n      memoryGrow: 'u32',\n      i64clz: 'u32',\n      i64ctz: 'u32',\n      i64popcnt: 'u32',\n      i64eqz: 'u32',\n      i64extendsi32: 'u32',\n      i64extendui32: 'u32',\n      i32wrapi64: 'u32',\n      i64eq: 'u32',\n      i64ne: 'u32',\n      i64lts: 'u32',\n      i64ltu: 'u32',\n      i64gts: 'u32',\n      i64gtu: 'u32',\n      i64les: 'u32',\n      i64leu: 'u32',\n      i64ges: 'u32',\n      i64geu: 'u32',\n      i64add: 'u32',\n      i64sub: 'u32',\n      i64mul: 'u32',\n      i64divs: 'u32',\n      i64divu: 'u32',\n      i64rems: 'u32',\n      i64remu: 'u32',\n      i64and: 'u32',\n      i64or: 'u32',\n      i64xor: 'u32',\n      i64shl: 'u32',\n      i64shrs: 'u32',\n      i64shru: 'u32',\n      i64rotl: 'u32',\n      i64rotr: 'u32'\n    },\n    Limits: {\n      eventTopics: 'u32',\n      stackHeight: 'u32',\n      globals: 'u32',\n      parameters: 'u32',\n      memoryPages: 'u32',\n      tableSize: 'u32',\n      brTableSize: 'u32',\n      subjectLen: 'u32',\n      codeSize: 'u32'\n    },\n    PrefabWasmModule: {\n      scheduleVersion: 'Compact<u32>',\n      initial: 'Compact<u32>',\n      maximum: 'Compact<u32>',\n      _reserved: 'PrefabWasmModuleReserved',\n      code: 'Bytes'\n    },\n    PrefabWasmModuleReserved: 'Option<Null>',\n    ScheduleTo212: {\n      version: 'u32',\n      putCodePerByteCost: 'Gas',\n      growMemCost: 'Gas',\n      regularOpCost: 'Gas',\n      returnDataPerByteCost: 'Gas',\n      eventDataPerByteCost: 'Gas',\n      eventPerTopicCost: 'Gas',\n      eventBaseCost: 'Gas',\n      sandboxDataReadCost: 'Gas',\n      sandboxDataWriteCost: 'Gas',\n      maxEventTopics: 'u32',\n      maxStackHeight: 'u32',\n      maxMemoryPages: 'u32',\n      enablePrintln: 'bool',\n      maxSubjectLen: 'u32'\n    },\n    ScheduleTo258: {\n      version: 'u32',\n      putCodePerByteCost: 'Gas',\n      growMemCost: 'Gas',\n      regularOpCost: 'Gas',\n      returnDataPerByteCost: 'Gas',\n      eventDataPerByteCost: 'Gas',\n      eventPerTopicCost: 'Gas',\n      eventBaseCost: 'Gas',\n      sandboxDataReadCost: 'Gas',\n      sandboxDataWriteCost: 'Gas',\n      transferCost: 'Gas',\n      maxEventTopics: 'u32',\n      maxStackHeight: 'u32',\n      maxMemoryPages: 'u32',\n      enablePrintln: 'bool',\n      maxSubjectLen: 'u32'\n    },\n    Schedule: {\n      version: 'u32',\n      enablePrintln: 'bool',\n      limits: 'Limits',\n      instructionWeights: 'InstructionWeights',\n      hostFnWeights: 'HostFnWeights'\n    },\n    SeedOf: 'Hash',\n    TombstoneContractInfo: 'Hash',\n    TrieId: 'Bytes'\n  }\n};","map":{"version":3,"sources":["/Users/bmacer/substrate-node-template/substrate-front-end-template/node_modules/@polkadot/types/interfaces/contracts/definitions.mjs"],"names":["rpc","call","description","params","name","type","isHistoric","isOptional","getStorage","rentProjection","types","AliveContractInfo","trieId","storageSize","emptyPairCount","totalPairCount","codeHash","rentAllowance","deductBlock","lastWrite","CodeHash","ContractCallRequest","origin","dest","value","gasLimit","inputData","ContractExecResultSuccessTo255","status","data","ContractExecResultTo255","_enum","Success","Error","ContractExecResultSuccessTo260","flags","gasConsumed","ContractExecResultTo260","ContractExecResultErrModule","index","error","message","ContractExecResultErr","Other","CannotLookup","BadOrigin","Module","ContractExecResultOk","ContractExecResultResult","Ok","Err","ContractExecResult","debugMessage","result","ContractInfo","Alive","Tombstone","ContractStorageKey","DeletedContract","pairCount","Gas","HostFnWeights","caller","address","gasLeft","balance","valueTransferred","minimumBalance","tombstoneDeposit","blockNumber","now","weightToFee","gas","input","inputPerByte","return","returnPerByte","terminate","restoreTo","restoreToPerDelta","random","depositEvent","depositEventPerTopic","depositEventPerByte","setRentAllowance","setStorage","setStoragePerByte","clearStorage","getStoragePerByte","transfer","callTransferSurcharge","callPerInputByte","callPerOutputByte","instantiate","instantiatePerInputByte","instantiatePerOutputByte","hashSha2256","hashSha2256PerByte","hashKeccak256","hashKeccak256PerByte","hashBlake2256","hashBlake2256PerByte","hashBlake2128","hashBlake2128PerByte","InstructionWeights","i64const","i64load","i64store","select","rIf","br","brIf","brIable","brIablePerEntry","callIndirect","callIndirectPerParam","localGet","localSet","local_tee","globalGet","globalSet","memoryCurrent","memoryGrow","i64clz","i64ctz","i64popcnt","i64eqz","i64extendsi32","i64extendui32","i32wrapi64","i64eq","i64ne","i64lts","i64ltu","i64gts","i64gtu","i64les","i64leu","i64ges","i64geu","i64add","i64sub","i64mul","i64divs","i64divu","i64rems","i64remu","i64and","i64or","i64xor","i64shl","i64shrs","i64shru","i64rotl","i64rotr","Limits","eventTopics","stackHeight","globals","parameters","memoryPages","tableSize","brTableSize","subjectLen","codeSize","PrefabWasmModule","scheduleVersion","initial","maximum","_reserved","code","PrefabWasmModuleReserved","ScheduleTo212","version","putCodePerByteCost","growMemCost","regularOpCost","returnDataPerByteCost","eventDataPerByteCost","eventPerTopicCost","eventBaseCost","sandboxDataReadCost","sandboxDataWriteCost","maxEventTopics","maxStackHeight","maxMemoryPages","enablePrintln","maxSubjectLen","ScheduleTo258","transferCost","Schedule","limits","instructionWeights","hostFnWeights","SeedOf","TombstoneContractInfo","TrieId"],"mappings":"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","sourcesContent":["// Copyright 2017-2021 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// order important in structs... :)\n\n/* eslint-disable sort-keys */\nexport default {\n  rpc: {\n    call: {\n      description: 'Executes a call to a contract',\n      params: [{\n        name: 'callRequest',\n        type: 'ContractCallRequest'\n      }, {\n        name: 'at',\n        type: 'BlockHash',\n        isHistoric: true,\n        isOptional: true\n      }],\n      type: 'ContractExecResult'\n    },\n    getStorage: {\n      description: 'Returns the value under a specified storage key in a contract',\n      params: [{\n        name: 'address',\n        type: 'AccountId'\n      }, {\n        name: 'key',\n        type: 'H256'\n      }, {\n        name: 'at',\n        type: 'BlockHash',\n        isHistoric: true,\n        isOptional: true\n      }],\n      type: 'Option<Bytes>'\n    },\n    rentProjection: {\n      description: 'Returns the projected time a given contract will be able to sustain paying its rent',\n      params: [{\n        name: 'address',\n        type: 'AccountId'\n      }, {\n        name: 'at',\n        type: 'BlockHash',\n        isHistoric: true,\n        isOptional: true\n      }],\n      type: 'Option<BlockNumber>'\n    }\n  },\n  types: {\n    AliveContractInfo: {\n      trieId: 'TrieId',\n      storageSize: 'u32',\n      emptyPairCount: 'u32',\n      totalPairCount: 'u32',\n      codeHash: 'CodeHash',\n      rentAllowance: 'Balance',\n      deductBlock: 'BlockNumber',\n      lastWrite: 'Option<BlockNumber>'\n    },\n    CodeHash: 'Hash',\n    ContractCallRequest: {\n      origin: 'AccountId',\n      dest: 'AccountId',\n      value: 'Balance',\n      gasLimit: 'u64',\n      inputData: 'Bytes'\n    },\n    ContractExecResultSuccessTo255: {\n      status: 'u8',\n      data: 'Raw'\n    },\n    ContractExecResultTo255: {\n      _enum: {\n        Success: 'ContractExecResultSuccessTo255',\n        Error: 'Null'\n      }\n    },\n    ContractExecResultSuccessTo260: {\n      flags: 'u32',\n      data: 'Bytes',\n      gasConsumed: 'u64'\n    },\n    ContractExecResultTo260: {\n      _enum: {\n        Success: 'ContractExecResultSuccessTo260',\n        Error: 'Null'\n      }\n    },\n    ContractExecResultErrModule: {\n      index: 'u8',\n      error: 'u8',\n      message: 'Option<Text>'\n    },\n    ContractExecResultErr: {\n      _enum: {\n        Other: 'Text',\n        CannotLookup: 'Null',\n        BadOrigin: 'Null',\n        Module: 'ContractExecResultErrModule'\n      }\n    },\n    ContractExecResultOk: {\n      flags: 'u32',\n      data: 'Bytes'\n    },\n    ContractExecResultResult: {\n      _enum: {\n        Ok: 'ContractExecResultOk',\n        Err: 'ContractExecResultErr'\n      }\n    },\n    ContractExecResult: {\n      gasConsumed: 'u64',\n      debugMessage: 'Text',\n      result: 'ContractExecResultResult'\n    },\n    ContractInfo: {\n      _enum: {\n        Alive: 'AliveContractInfo',\n        Tombstone: 'TombstoneContractInfo'\n      }\n    },\n    ContractStorageKey: '[u8; 32]',\n    DeletedContract: {\n      pairCount: 'u32',\n      trieId: 'TrieId'\n    },\n    Gas: 'u64',\n    HostFnWeights: {\n      caller: 'Weight',\n      address: 'Weight',\n      gasLeft: 'Weight',\n      balance: 'Weight',\n      valueTransferred: 'Weight',\n      minimumBalance: 'Weight',\n      tombstoneDeposit: 'Weight',\n      rentAllowance: 'Weight',\n      blockNumber: 'Weight',\n      now: 'Weight',\n      weightToFee: 'Weight',\n      gas: 'Weight',\n      input: 'Weight',\n      inputPerByte: 'Weight',\n      return: 'Weight',\n      returnPerByte: 'Weight',\n      terminate: 'Weight',\n      restoreTo: 'Weight',\n      restoreToPerDelta: 'Weight',\n      random: 'Weight',\n      depositEvent: 'Weight',\n      depositEventPerTopic: 'Weight',\n      depositEventPerByte: 'Weight',\n      setRentAllowance: 'Weight',\n      setStorage: 'Weight',\n      setStoragePerByte: 'Weight',\n      clearStorage: 'Weight',\n      getStorage: 'Weight',\n      getStoragePerByte: 'Weight',\n      transfer: 'Weight',\n      call: 'Weight',\n      callTransferSurcharge: 'Weight',\n      callPerInputByte: 'Weight',\n      callPerOutputByte: 'Weight',\n      instantiate: 'Weight',\n      instantiatePerInputByte: 'Weight',\n      instantiatePerOutputByte: 'Weight',\n      hashSha2256: 'Weight',\n      hashSha2256PerByte: 'Weight',\n      hashKeccak256: 'Weight',\n      hashKeccak256PerByte: 'Weight',\n      hashBlake2256: 'Weight',\n      hashBlake2256PerByte: 'Weight',\n      hashBlake2128: 'Weight',\n      hashBlake2128PerByte: 'Weight'\n    },\n    InstructionWeights: {\n      i64const: 'u32',\n      i64load: 'u32',\n      i64store: 'u32',\n      select: 'u32',\n      rIf: 'u32',\n      br: 'u32',\n      brIf: 'u32',\n      brIable: 'u32',\n      brIablePerEntry: 'u32',\n      call: 'u32',\n      callIndirect: 'u32',\n      callIndirectPerParam: 'u32',\n      localGet: 'u32',\n      localSet: 'u32',\n      local_tee: 'u32',\n      globalGet: 'u32',\n      globalSet: 'u32',\n      memoryCurrent: 'u32',\n      memoryGrow: 'u32',\n      i64clz: 'u32',\n      i64ctz: 'u32',\n      i64popcnt: 'u32',\n      i64eqz: 'u32',\n      i64extendsi32: 'u32',\n      i64extendui32: 'u32',\n      i32wrapi64: 'u32',\n      i64eq: 'u32',\n      i64ne: 'u32',\n      i64lts: 'u32',\n      i64ltu: 'u32',\n      i64gts: 'u32',\n      i64gtu: 'u32',\n      i64les: 'u32',\n      i64leu: 'u32',\n      i64ges: 'u32',\n      i64geu: 'u32',\n      i64add: 'u32',\n      i64sub: 'u32',\n      i64mul: 'u32',\n      i64divs: 'u32',\n      i64divu: 'u32',\n      i64rems: 'u32',\n      i64remu: 'u32',\n      i64and: 'u32',\n      i64or: 'u32',\n      i64xor: 'u32',\n      i64shl: 'u32',\n      i64shrs: 'u32',\n      i64shru: 'u32',\n      i64rotl: 'u32',\n      i64rotr: 'u32'\n    },\n    Limits: {\n      eventTopics: 'u32',\n      stackHeight: 'u32',\n      globals: 'u32',\n      parameters: 'u32',\n      memoryPages: 'u32',\n      tableSize: 'u32',\n      brTableSize: 'u32',\n      subjectLen: 'u32',\n      codeSize: 'u32'\n    },\n    PrefabWasmModule: {\n      scheduleVersion: 'Compact<u32>',\n      initial: 'Compact<u32>',\n      maximum: 'Compact<u32>',\n      _reserved: 'PrefabWasmModuleReserved',\n      code: 'Bytes'\n    },\n    PrefabWasmModuleReserved: 'Option<Null>',\n    ScheduleTo212: {\n      version: 'u32',\n      putCodePerByteCost: 'Gas',\n      growMemCost: 'Gas',\n      regularOpCost: 'Gas',\n      returnDataPerByteCost: 'Gas',\n      eventDataPerByteCost: 'Gas',\n      eventPerTopicCost: 'Gas',\n      eventBaseCost: 'Gas',\n      sandboxDataReadCost: 'Gas',\n      sandboxDataWriteCost: 'Gas',\n      maxEventTopics: 'u32',\n      maxStackHeight: 'u32',\n      maxMemoryPages: 'u32',\n      enablePrintln: 'bool',\n      maxSubjectLen: 'u32'\n    },\n    ScheduleTo258: {\n      version: 'u32',\n      putCodePerByteCost: 'Gas',\n      growMemCost: 'Gas',\n      regularOpCost: 'Gas',\n      returnDataPerByteCost: 'Gas',\n      eventDataPerByteCost: 'Gas',\n      eventPerTopicCost: 'Gas',\n      eventBaseCost: 'Gas',\n      sandboxDataReadCost: 'Gas',\n      sandboxDataWriteCost: 'Gas',\n      transferCost: 'Gas',\n      maxEventTopics: 'u32',\n      maxStackHeight: 'u32',\n      maxMemoryPages: 'u32',\n      enablePrintln: 'bool',\n      maxSubjectLen: 'u32'\n    },\n    Schedule: {\n      version: 'u32',\n      enablePrintln: 'bool',\n      limits: 'Limits',\n      instructionWeights: 'InstructionWeights',\n      hostFnWeights: 'HostFnWeights'\n    },\n    SeedOf: 'Hash',\n    TombstoneContractInfo: 'Hash',\n    TrieId: 'Bytes'\n  }\n};"]},"metadata":{},"sourceType":"module"}