{"ast":null,"code":"// Copyright 2017-2021 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// order important in structs... :)\n\n/* eslint-disable sort-keys */\nconst SLOT_RANGE_COUNT = 10;\nexport default {\n  AuctionIndex: 'u32',\n  Bidder: {\n    _enum: {\n      New: 'NewBidder',\n      Existing: 'ParaId'\n    }\n  },\n  IncomingParachain: {\n    _enum: {\n      Unset: 'NewBidder',\n      Fixed: 'IncomingParachainFixed',\n      Deploy: 'IncomingParachainDeploy'\n    }\n  },\n  IncomingParachainDeploy: {\n    code: 'ValidationCode',\n    initialHeadData: 'HeadData'\n  },\n  IncomingParachainFixed: {\n    codeHash: 'Hash',\n    codeSize: 'u32',\n    initialHeadData: 'HeadData'\n  },\n  LeasePeriod: 'BlockNumber',\n  LeasePeriodOf: 'BlockNumber',\n  NewBidder: {\n    who: 'AccountId',\n    sub: 'SubId'\n  },\n  NewBidderOption: 'Option<NewBidder>',\n  SlotRange: {\n    _enum: ['ZeroZero', 'ZeroOne', 'ZeroTwo', 'ZeroThree', 'OneOne', 'OneTwo', 'OneThree', 'TwoTwo', 'TwoThree', 'ThreeThree']\n  },\n  SubId: 'u32',\n  WinningData: `[WinningDataEntry; ${SLOT_RANGE_COUNT}]`,\n  WinningDataEntry: 'Option<Bidder>',\n  WinnersData: 'Vec<WinnersDataTuple>',\n  WinnersDataTuple: '(NewBidderOption, ParaId, BalanceOf, SlotRange)'\n};","map":{"version":3,"sources":["/Users/bmacer/substrate-node-template/substrate-front-end-template/node_modules/@polkadot/types/interfaces/parachains/slots.mjs"],"names":["SLOT_RANGE_COUNT","AuctionIndex","Bidder","_enum","New","Existing","IncomingParachain","Unset","Fixed","Deploy","IncomingParachainDeploy","code","initialHeadData","IncomingParachainFixed","codeHash","codeSize","LeasePeriod","LeasePeriodOf","NewBidder","who","sub","NewBidderOption","SlotRange","SubId","WinningData","WinningDataEntry","WinnersData","WinnersDataTuple"],"mappings":"AAAA;AACA;AACA;;AAEA;AACA,MAAMA,gBAAgB,GAAG,EAAzB;AACA,eAAe;AACbC,EAAAA,YAAY,EAAE,KADD;AAEbC,EAAAA,MAAM,EAAE;AACNC,IAAAA,KAAK,EAAE;AACLC,MAAAA,GAAG,EAAE,WADA;AAELC,MAAAA,QAAQ,EAAE;AAFL;AADD,GAFK;AAQbC,EAAAA,iBAAiB,EAAE;AACjBH,IAAAA,KAAK,EAAE;AACLI,MAAAA,KAAK,EAAE,WADF;AAELC,MAAAA,KAAK,EAAE,wBAFF;AAGLC,MAAAA,MAAM,EAAE;AAHH;AADU,GARN;AAebC,EAAAA,uBAAuB,EAAE;AACvBC,IAAAA,IAAI,EAAE,gBADiB;AAEvBC,IAAAA,eAAe,EAAE;AAFM,GAfZ;AAmBbC,EAAAA,sBAAsB,EAAE;AACtBC,IAAAA,QAAQ,EAAE,MADY;AAEtBC,IAAAA,QAAQ,EAAE,KAFY;AAGtBH,IAAAA,eAAe,EAAE;AAHK,GAnBX;AAwBbI,EAAAA,WAAW,EAAE,aAxBA;AAyBbC,EAAAA,aAAa,EAAE,aAzBF;AA0BbC,EAAAA,SAAS,EAAE;AACTC,IAAAA,GAAG,EAAE,WADI;AAETC,IAAAA,GAAG,EAAE;AAFI,GA1BE;AA8BbC,EAAAA,eAAe,EAAE,mBA9BJ;AA+BbC,EAAAA,SAAS,EAAE;AACTnB,IAAAA,KAAK,EAAE,CAAC,UAAD,EAAa,SAAb,EAAwB,SAAxB,EAAmC,WAAnC,EAAgD,QAAhD,EAA0D,QAA1D,EAAoE,UAApE,EAAgF,QAAhF,EAA0F,UAA1F,EAAsG,YAAtG;AADE,GA/BE;AAkCboB,EAAAA,KAAK,EAAE,KAlCM;AAmCbC,EAAAA,WAAW,EAAG,sBAAqBxB,gBAAiB,GAnCvC;AAoCbyB,EAAAA,gBAAgB,EAAE,gBApCL;AAqCbC,EAAAA,WAAW,EAAE,uBArCA;AAsCbC,EAAAA,gBAAgB,EAAE;AAtCL,CAAf","sourcesContent":["// Copyright 2017-2021 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// order important in structs... :)\n\n/* eslint-disable sort-keys */\nconst SLOT_RANGE_COUNT = 10;\nexport default {\n  AuctionIndex: 'u32',\n  Bidder: {\n    _enum: {\n      New: 'NewBidder',\n      Existing: 'ParaId'\n    }\n  },\n  IncomingParachain: {\n    _enum: {\n      Unset: 'NewBidder',\n      Fixed: 'IncomingParachainFixed',\n      Deploy: 'IncomingParachainDeploy'\n    }\n  },\n  IncomingParachainDeploy: {\n    code: 'ValidationCode',\n    initialHeadData: 'HeadData'\n  },\n  IncomingParachainFixed: {\n    codeHash: 'Hash',\n    codeSize: 'u32',\n    initialHeadData: 'HeadData'\n  },\n  LeasePeriod: 'BlockNumber',\n  LeasePeriodOf: 'BlockNumber',\n  NewBidder: {\n    who: 'AccountId',\n    sub: 'SubId'\n  },\n  NewBidderOption: 'Option<NewBidder>',\n  SlotRange: {\n    _enum: ['ZeroZero', 'ZeroOne', 'ZeroTwo', 'ZeroThree', 'OneOne', 'OneTwo', 'OneThree', 'TwoTwo', 'TwoThree', 'ThreeThree']\n  },\n  SubId: 'u32',\n  WinningData: `[WinningDataEntry; ${SLOT_RANGE_COUNT}]`,\n  WinningDataEntry: 'Option<Bidder>',\n  WinnersData: 'Vec<WinnersDataTuple>',\n  WinnersDataTuple: '(NewBidderOption, ParaId, BalanceOf, SlotRange)'\n};"]},"metadata":{},"sourceType":"module"}