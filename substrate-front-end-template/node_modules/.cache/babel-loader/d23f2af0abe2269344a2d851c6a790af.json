{"ast":null,"code":"// Copyright 2017-2021 @polkadot/api-derive authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { isNumber, isUndefined } from '@polkadot/util';\nimport { combineLatest, of } from '@polkadot/x-rxjs';\nimport { map, switchMap } from '@polkadot/x-rxjs/operators';\nimport { FALLBACK_MAX_HASH_COUNT, FALLBACK_PERIOD, MAX_FINALITY_LAG, MORTAL_PERIOD } from \"./constants.mjs\";\n\nfunction latestNonce(api, address) {\n  return api.derive.balances.account(address).pipe(map(({\n    accountNonce\n  }) => accountNonce));\n}\n\nfunction nextNonce(api, address) {\n  var _api$rpc$system;\n\n  return (_api$rpc$system = api.rpc.system) !== null && _api$rpc$system !== void 0 && _api$rpc$system.accountNextIndex ? api.rpc.system.accountNextIndex(address) : latestNonce(api, address);\n}\n\nfunction signingHeader(api) {\n  return combineLatest([api.rpc.chain.getHeader(), api.rpc.chain.getFinalizedHead().pipe(switchMap(hash => api.rpc.chain.getHeader(hash)))]).pipe(map(([current, finalized]) => // determine the hash to use, current when lag > max, else finalized\n  current.number.unwrap().sub(finalized.number.unwrap()).gt(MAX_FINALITY_LAG) ? current : finalized));\n}\n\nexport function signingInfo(_instanceId, api) {\n  // no memo, we want to do this fresh on each run\n  return (address, nonce, era) => combineLatest([// retrieve nonce if none was specified\n  isUndefined(nonce) ? latestNonce(api, address) : nonce === -1 ? nextNonce(api, address) : of(api.registry.createType('Index', nonce)), // if no era (create) or era > 0 (mortal), do block retrieval\n  isUndefined(era) || isNumber(era) && era > 0 ? signingHeader(api) : of(null)]).pipe(map(([nonce, header]) => {\n    var _api$consts$system, _api$consts$system$bl, _api$consts$babe, _api$consts$timestamp;\n\n    return {\n      header,\n      mortalLength: Math.min(((_api$consts$system = api.consts.system) === null || _api$consts$system === void 0 ? void 0 : (_api$consts$system$bl = _api$consts$system.blockHashCount) === null || _api$consts$system$bl === void 0 ? void 0 : _api$consts$system$bl.toNumber()) || FALLBACK_MAX_HASH_COUNT, MORTAL_PERIOD.div(((_api$consts$babe = api.consts.babe) === null || _api$consts$babe === void 0 ? void 0 : _api$consts$babe.expectedBlockTime) || ((_api$consts$timestamp = api.consts.timestamp) === null || _api$consts$timestamp === void 0 ? void 0 : _api$consts$timestamp.minimumPeriod.muln(2)) || FALLBACK_PERIOD).iadd(MAX_FINALITY_LAG).toNumber()),\n      nonce\n    };\n  }));\n}","map":{"version":3,"sources":["/Users/bmacer/substrate-node-template/substrate-front-end-template/node_modules/@polkadot/api-derive/tx/signingInfo.mjs"],"names":["isNumber","isUndefined","combineLatest","of","map","switchMap","FALLBACK_MAX_HASH_COUNT","FALLBACK_PERIOD","MAX_FINALITY_LAG","MORTAL_PERIOD","latestNonce","api","address","derive","balances","account","pipe","accountNonce","nextNonce","_api$rpc$system","rpc","system","accountNextIndex","signingHeader","chain","getHeader","getFinalizedHead","hash","current","finalized","number","unwrap","sub","gt","signingInfo","_instanceId","nonce","era","registry","createType","header","_api$consts$system","_api$consts$system$bl","_api$consts$babe","_api$consts$timestamp","mortalLength","Math","min","consts","blockHashCount","toNumber","div","babe","expectedBlockTime","timestamp","minimumPeriod","muln","iadd"],"mappings":"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","sourcesContent":["// Copyright 2017-2021 @polkadot/api-derive authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { isNumber, isUndefined } from '@polkadot/util';\nimport { combineLatest, of } from '@polkadot/x-rxjs';\nimport { map, switchMap } from '@polkadot/x-rxjs/operators';\nimport { FALLBACK_MAX_HASH_COUNT, FALLBACK_PERIOD, MAX_FINALITY_LAG, MORTAL_PERIOD } from \"./constants.mjs\";\n\nfunction latestNonce(api, address) {\n  return api.derive.balances.account(address).pipe(map(({\n    accountNonce\n  }) => accountNonce));\n}\n\nfunction nextNonce(api, address) {\n  var _api$rpc$system;\n\n  return (_api$rpc$system = api.rpc.system) !== null && _api$rpc$system !== void 0 && _api$rpc$system.accountNextIndex ? api.rpc.system.accountNextIndex(address) : latestNonce(api, address);\n}\n\nfunction signingHeader(api) {\n  return combineLatest([api.rpc.chain.getHeader(), api.rpc.chain.getFinalizedHead().pipe(switchMap(hash => api.rpc.chain.getHeader(hash)))]).pipe(map(([current, finalized]) => // determine the hash to use, current when lag > max, else finalized\n  current.number.unwrap().sub(finalized.number.unwrap()).gt(MAX_FINALITY_LAG) ? current : finalized));\n}\n\nexport function signingInfo(_instanceId, api) {\n  // no memo, we want to do this fresh on each run\n  return (address, nonce, era) => combineLatest([// retrieve nonce if none was specified\n  isUndefined(nonce) ? latestNonce(api, address) : nonce === -1 ? nextNonce(api, address) : of(api.registry.createType('Index', nonce)), // if no era (create) or era > 0 (mortal), do block retrieval\n  isUndefined(era) || isNumber(era) && era > 0 ? signingHeader(api) : of(null)]).pipe(map(([nonce, header]) => {\n    var _api$consts$system, _api$consts$system$bl, _api$consts$babe, _api$consts$timestamp;\n\n    return {\n      header,\n      mortalLength: Math.min(((_api$consts$system = api.consts.system) === null || _api$consts$system === void 0 ? void 0 : (_api$consts$system$bl = _api$consts$system.blockHashCount) === null || _api$consts$system$bl === void 0 ? void 0 : _api$consts$system$bl.toNumber()) || FALLBACK_MAX_HASH_COUNT, MORTAL_PERIOD.div(((_api$consts$babe = api.consts.babe) === null || _api$consts$babe === void 0 ? void 0 : _api$consts$babe.expectedBlockTime) || ((_api$consts$timestamp = api.consts.timestamp) === null || _api$consts$timestamp === void 0 ? void 0 : _api$consts$timestamp.minimumPeriod.muln(2)) || FALLBACK_PERIOD).iadd(MAX_FINALITY_LAG).toNumber()),\n      nonce\n    };\n  }));\n}"]},"metadata":{},"sourceType":"module"}