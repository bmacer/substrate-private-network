{"ast":null,"code":"// Copyright 2017-2021 @polkadot/api-derive authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { combineLatest, of } from '@polkadot/x-rxjs';\nimport { map, switchMap } from '@polkadot/x-rxjs/operators';\nimport { SignedBlockExtended } from \"../type/index.mjs\";\nimport { memo } from \"../util/index.mjs\";\n/**\n * @name subscribeNewBlocks\n * @returns The latest block & events for that block\n */\n\nexport function subscribeNewBlocks(instanceId, api) {\n  return memo(instanceId, () => api.derive.chain.subscribeNewHeads().pipe(switchMap(header => {\n    const blockHash = header.hash;\n    return combineLatest(api.rpc.chain.getBlock(blockHash), api.query.system.events.at(blockHash), of(header.validators));\n  }), map(([block, events, validators]) => new SignedBlockExtended(api.registry, block, events, validators))));\n}","map":{"version":3,"sources":["/Users/bmacer/substrate-node-template/substrate-front-end-template/node_modules/@polkadot/api-derive/chain/subscribeNewBlocks.mjs"],"names":["combineLatest","of","map","switchMap","SignedBlockExtended","memo","subscribeNewBlocks","instanceId","api","derive","chain","subscribeNewHeads","pipe","header","blockHash","hash","rpc","getBlock","query","system","events","at","validators","block","registry"],"mappings":"AAAA;AACA;AACA,SAASA,aAAT,EAAwBC,EAAxB,QAAkC,kBAAlC;AACA,SAASC,GAAT,EAAcC,SAAd,QAA+B,4BAA/B;AACA,SAASC,mBAAT,QAAoC,mBAApC;AACA,SAASC,IAAT,QAAqB,mBAArB;AACA;AACA;AACA;AACA;;AAEA,OAAO,SAASC,kBAAT,CAA4BC,UAA5B,EAAwCC,GAAxC,EAA6C;AAClD,SAAOH,IAAI,CAACE,UAAD,EAAa,MAAMC,GAAG,CAACC,MAAJ,CAAWC,KAAX,CAAiBC,iBAAjB,GAAqCC,IAArC,CAA0CT,SAAS,CAACU,MAAM,IAAI;AAC1F,UAAMC,SAAS,GAAGD,MAAM,CAACE,IAAzB;AACA,WAAOf,aAAa,CAACQ,GAAG,CAACQ,GAAJ,CAAQN,KAAR,CAAcO,QAAd,CAAuBH,SAAvB,CAAD,EAAoCN,GAAG,CAACU,KAAJ,CAAUC,MAAV,CAAiBC,MAAjB,CAAwBC,EAAxB,CAA2BP,SAA3B,CAApC,EAA2Eb,EAAE,CAACY,MAAM,CAACS,UAAR,CAA7E,CAApB;AACD,GAHgF,CAAnD,EAG1BpB,GAAG,CAAC,CAAC,CAACqB,KAAD,EAAQH,MAAR,EAAgBE,UAAhB,CAAD,KAAiC,IAAIlB,mBAAJ,CAAwBI,GAAG,CAACgB,QAA5B,EAAsCD,KAAtC,EAA6CH,MAA7C,EAAqDE,UAArD,CAAlC,CAHuB,CAAnB,CAAX;AAID","sourcesContent":["// Copyright 2017-2021 @polkadot/api-derive authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { combineLatest, of } from '@polkadot/x-rxjs';\nimport { map, switchMap } from '@polkadot/x-rxjs/operators';\nimport { SignedBlockExtended } from \"../type/index.mjs\";\nimport { memo } from \"../util/index.mjs\";\n/**\n * @name subscribeNewBlocks\n * @returns The latest block & events for that block\n */\n\nexport function subscribeNewBlocks(instanceId, api) {\n  return memo(instanceId, () => api.derive.chain.subscribeNewHeads().pipe(switchMap(header => {\n    const blockHash = header.hash;\n    return combineLatest(api.rpc.chain.getBlock(blockHash), api.query.system.events.at(blockHash), of(header.validators));\n  }), map(([block, events, validators]) => new SignedBlockExtended(api.registry, block, events, validators))));\n}"]},"metadata":{},"sourceType":"module"}