{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n} // Copyright 2017-2021 @polkadot/api-derive authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\n\nimport { combineLatest, of } from '@polkadot/x-rxjs';\nimport { map, switchMap } from '@polkadot/x-rxjs/operators';\nimport { memo } from \"../util/index.mjs\";\n\nfunction createDerive(api, info, [currentSlot, epochIndex, epochOrGenesisStartSlot, activeEraStartSessionIndex]) {\n  const epochStartSlot = epochIndex.mul(info.sessionLength).iadd(epochOrGenesisStartSlot);\n  const sessionProgress = currentSlot.sub(epochStartSlot);\n  const eraProgress = info.currentIndex.sub(activeEraStartSessionIndex).imul(info.sessionLength).iadd(sessionProgress);\n  return _objectSpread(_objectSpread({}, info), {}, {\n    eraProgress: api.registry.createType('BlockNumber', eraProgress),\n    sessionProgress: api.registry.createType('BlockNumber', sessionProgress)\n  });\n}\n\nfunction queryAura(api) {\n  return api.derive.session.info().pipe(map(info => _objectSpread(_objectSpread({}, info), {}, {\n    eraProgress: api.registry.createType('BlockNumber'),\n    sessionProgress: api.registry.createType('BlockNumber')\n  })));\n}\n\nfunction queryBabe(api) {\n  return api.derive.session.info().pipe(switchMap(info => combineLatest([of(info), // we may have no staking, but have babe (permissioned)\n  api.query.staking ? api.queryMulti([api.query.babe.currentSlot, api.query.babe.epochIndex, api.query.babe.genesisSlot, [api.query.staking.erasStartSessionIndex, info.activeEra]]) : api.queryMulti([api.query.babe.currentSlot, api.query.babe.epochIndex, api.query.babe.genesisSlot])])), map(([info, [currentSlot, epochIndex, genesisSlot, optStartIndex]]) => [info, [currentSlot, epochIndex, genesisSlot, optStartIndex && optStartIndex.isSome ? optStartIndex.unwrap() : api.registry.createType('SessionIndex', 1)]]));\n}\n/**\n * @description Retrieves all the session and era query and calculates specific values on it as the length of the session and eras\n */\n\n\nexport function progress(instanceId, api) {\n  return memo(instanceId, () => api.consts.babe ? queryBabe(api).pipe(map(([info, slots]) => createDerive(api, info, slots))) : queryAura(api));\n}","map":{"version":3,"sources":["/Users/bmacer/substrate-node-template/substrate-front-end-template/node_modules/@polkadot/api-derive/session/progress.mjs"],"names":["_defineProperty","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","getOwnPropertyDescriptors","defineProperties","defineProperty","combineLatest","of","map","switchMap","memo","createDerive","api","info","currentSlot","epochIndex","epochOrGenesisStartSlot","activeEraStartSessionIndex","epochStartSlot","mul","sessionLength","iadd","sessionProgress","sub","eraProgress","currentIndex","imul","registry","createType","queryAura","derive","session","pipe","queryBabe","query","staking","queryMulti","babe","genesisSlot","erasStartSessionIndex","activeEra","optStartIndex","isSome","unwrap","progress","instanceId","consts","slots"],"mappings":"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","sourcesContent":["import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n// Copyright 2017-2021 @polkadot/api-derive authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { combineLatest, of } from '@polkadot/x-rxjs';\nimport { map, switchMap } from '@polkadot/x-rxjs/operators';\nimport { memo } from \"../util/index.mjs\";\n\nfunction createDerive(api, info, [currentSlot, epochIndex, epochOrGenesisStartSlot, activeEraStartSessionIndex]) {\n  const epochStartSlot = epochIndex.mul(info.sessionLength).iadd(epochOrGenesisStartSlot);\n  const sessionProgress = currentSlot.sub(epochStartSlot);\n  const eraProgress = info.currentIndex.sub(activeEraStartSessionIndex).imul(info.sessionLength).iadd(sessionProgress);\n  return _objectSpread(_objectSpread({}, info), {}, {\n    eraProgress: api.registry.createType('BlockNumber', eraProgress),\n    sessionProgress: api.registry.createType('BlockNumber', sessionProgress)\n  });\n}\n\nfunction queryAura(api) {\n  return api.derive.session.info().pipe(map(info => _objectSpread(_objectSpread({}, info), {}, {\n    eraProgress: api.registry.createType('BlockNumber'),\n    sessionProgress: api.registry.createType('BlockNumber')\n  })));\n}\n\nfunction queryBabe(api) {\n  return api.derive.session.info().pipe(switchMap(info => combineLatest([of(info), // we may have no staking, but have babe (permissioned)\n  api.query.staking ? api.queryMulti([api.query.babe.currentSlot, api.query.babe.epochIndex, api.query.babe.genesisSlot, [api.query.staking.erasStartSessionIndex, info.activeEra]]) : api.queryMulti([api.query.babe.currentSlot, api.query.babe.epochIndex, api.query.babe.genesisSlot])])), map(([info, [currentSlot, epochIndex, genesisSlot, optStartIndex]]) => [info, [currentSlot, epochIndex, genesisSlot, optStartIndex && optStartIndex.isSome ? optStartIndex.unwrap() : api.registry.createType('SessionIndex', 1)]]));\n}\n/**\n * @description Retrieves all the session and era query and calculates specific values on it as the length of the session and eras\n */\n\n\nexport function progress(instanceId, api) {\n  return memo(instanceId, () => api.consts.babe ? queryBabe(api).pipe(map(([info, slots]) => createDerive(api, info, slots))) : queryAura(api));\n}"]},"metadata":{},"sourceType":"module"}