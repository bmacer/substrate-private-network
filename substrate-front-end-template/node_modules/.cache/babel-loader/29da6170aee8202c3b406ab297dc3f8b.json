{"ast":null,"code":"// Copyright 2017-2021 @polkadot/keyring authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nconst ENCODING = ['scrypt', 'xsalsa20-poly1305'];\nconst NONCE_LENGTH = 24;\nconst PKCS8_DIVIDER = new Uint8Array([161, 35, 3, 33, 0]);\nconst PKCS8_HEADER = new Uint8Array([48, 83, 2, 1, 1, 48, 5, 6, 3, 43, 101, 112, 4, 34, 4, 32]);\nconst PUB_LENGTH = 32;\nconst SALT_LENGTH = 32;\nconst SEC_LENGTH = 64;\nconst SEED_LENGTH = 32;\nconst SCRYPT_LENGTH = SALT_LENGTH + 3 * 4;\nexport { ENCODING, NONCE_LENGTH, PKCS8_DIVIDER, PKCS8_HEADER, PUB_LENGTH, SALT_LENGTH, SEC_LENGTH, SEED_LENGTH, SCRYPT_LENGTH };","map":{"version":3,"sources":["/Users/bmacer/substrate-node-template/substrate-front-end-template/node_modules/@polkadot/keyring/pair/defaults.mjs"],"names":["ENCODING","NONCE_LENGTH","PKCS8_DIVIDER","Uint8Array","PKCS8_HEADER","PUB_LENGTH","SALT_LENGTH","SEC_LENGTH","SEED_LENGTH","SCRYPT_LENGTH"],"mappings":"AAAA;AACA;AACA,MAAMA,QAAQ,GAAG,CAAC,QAAD,EAAW,mBAAX,CAAjB;AACA,MAAMC,YAAY,GAAG,EAArB;AACA,MAAMC,aAAa,GAAG,IAAIC,UAAJ,CAAe,CAAC,GAAD,EAAM,EAAN,EAAU,CAAV,EAAa,EAAb,EAAiB,CAAjB,CAAf,CAAtB;AACA,MAAMC,YAAY,GAAG,IAAID,UAAJ,CAAe,CAAC,EAAD,EAAK,EAAL,EAAS,CAAT,EAAY,CAAZ,EAAe,CAAf,EAAkB,EAAlB,EAAsB,CAAtB,EAAyB,CAAzB,EAA4B,CAA5B,EAA+B,EAA/B,EAAmC,GAAnC,EAAwC,GAAxC,EAA6C,CAA7C,EAAgD,EAAhD,EAAoD,CAApD,EAAuD,EAAvD,CAAf,CAArB;AACA,MAAME,UAAU,GAAG,EAAnB;AACA,MAAMC,WAAW,GAAG,EAApB;AACA,MAAMC,UAAU,GAAG,EAAnB;AACA,MAAMC,WAAW,GAAG,EAApB;AACA,MAAMC,aAAa,GAAGH,WAAW,GAAG,IAAI,CAAxC;AACA,SAASN,QAAT,EAAmBC,YAAnB,EAAiCC,aAAjC,EAAgDE,YAAhD,EAA8DC,UAA9D,EAA0EC,WAA1E,EAAuFC,UAAvF,EAAmGC,WAAnG,EAAgHC,aAAhH","sourcesContent":["// Copyright 2017-2021 @polkadot/keyring authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nconst ENCODING = ['scrypt', 'xsalsa20-poly1305'];\nconst NONCE_LENGTH = 24;\nconst PKCS8_DIVIDER = new Uint8Array([161, 35, 3, 33, 0]);\nconst PKCS8_HEADER = new Uint8Array([48, 83, 2, 1, 1, 48, 5, 6, 3, 43, 101, 112, 4, 34, 4, 32]);\nconst PUB_LENGTH = 32;\nconst SALT_LENGTH = 32;\nconst SEC_LENGTH = 64;\nconst SEED_LENGTH = 32;\nconst SCRYPT_LENGTH = SALT_LENGTH + 3 * 4;\nexport { ENCODING, NONCE_LENGTH, PKCS8_DIVIDER, PKCS8_HEADER, PUB_LENGTH, SALT_LENGTH, SEC_LENGTH, SEED_LENGTH, SCRYPT_LENGTH };"]},"metadata":{},"sourceType":"module"}