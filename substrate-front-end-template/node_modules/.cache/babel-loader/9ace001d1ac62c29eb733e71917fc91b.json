{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n} // Copyright 2017-2021 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// order important in structs... :)\n\n/* eslint-disable sort-keys */\n\n\nimport hrmpTypes from \"./hrmp.mjs\";\nimport slotTypes from \"./slots.mjs\"; // proposeParachain\n\nconst proposeTypes = {\n  ParachainProposal: {\n    proposer: 'AccountId',\n    genesisHead: 'HeadData',\n    validators: 'Vec<ValidatorId>',\n    name: 'Bytes',\n    balance: 'Balance'\n  },\n  RegisteredParachainInfo: {\n    validators: 'Vec<ValidatorId>',\n    proposer: 'AccountId'\n  }\n};\nexport default {\n  rpc: {},\n  types: _objectSpread(_objectSpread(_objectSpread(_objectSpread({}, proposeTypes), hrmpTypes), slotTypes), {}, {\n    AbridgedCandidateReceipt: {\n      parachainIndex: 'ParaId',\n      relayParent: 'Hash',\n      headData: 'HeadData',\n      collator: 'CollatorId',\n      signature: 'CollatorSignature',\n      povBlockHash: 'Hash',\n      commitments: 'CandidateCommitments'\n    },\n    AbridgedHostConfiguration: {\n      maxCodeSize: 'u32',\n      maxHeadDataSize: 'u32',\n      maxUpwardQueueCount: 'u32',\n      maxUpwardQueueSize: 'u32',\n      maxUpwardMessageSize: 'u32',\n      maxUpwardMessageNumPerCandidate: 'u32',\n      hrmpMaxMessageNumPerCandidate: 'u32',\n      validationUpgradeFrequency: 'BlockNumber',\n      validationUpgradeDelay: 'BlockNumber'\n    },\n    AbridgedHrmpChannel: {\n      maxCapacity: 'u32',\n      maxTotalSize: 'u32',\n      maxMessageSize: 'u32',\n      msgCount: 'u32',\n      totalSize: 'u32',\n      mqcHead: 'Option<Hash>'\n    },\n    AssignmentId: 'AccountId',\n    AssignmentKind: {\n      _enum: {\n        Parachain: 'Null',\n        Parathread: '(CollatorId, u32)'\n      }\n    },\n    AttestedCandidate: {\n      candidate: 'AbridgedCandidateReceipt',\n      validityVotes: 'Vec<ValidityAttestation>',\n      validatorIndices: 'BitVec'\n    },\n    AuthorityDiscoveryId: 'AccountId',\n    AvailabilityBitfield: 'BitVec',\n    AvailabilityBitfieldRecord: {\n      bitfield: 'AvailabilityBitfield',\n      submittedTt: 'BlockNumber'\n    },\n    BackedCandidate: {\n      candidate: 'CommittedCandidateReceipt',\n      validityVotes: 'Vec<ValidityAttestation>',\n      validatorIndices: 'BitVec'\n    },\n    BufferedSessionChange: {\n      applyAt: 'BlockNumber',\n      validators: 'Vec<ValidatorId>',\n      queued: 'Vec<ValidatorId>',\n      sessionIndex: 'SessionIndex'\n    },\n    CandidateCommitments: {\n      upwardMessages: 'Vec<UpwardMessage>',\n      horizontalMessages: 'Vec<OutboundHrmpMessage>',\n      newValidationCode: 'Option<ValidationCode>',\n      headData: 'HeadData',\n      processedDownwardMessages: 'u32',\n      hrmpWatermark: 'BlockNumber'\n    },\n    CandidateDescriptor: {\n      paraId: 'ParaId',\n      relayParent: 'Hash',\n      collatorId: 'CollatorId',\n      persistedValidationDataHash: 'Hash',\n      povHash: 'Hash',\n      erasureRoot: 'Hash',\n      signature: 'CollatorSignature',\n      paraHead: 'Hash'\n    },\n    CandidateHash: 'Hash',\n    CandidatePendingAvailability: {\n      core: 'CoreIndex',\n      hash: 'CandidateHash',\n      descriptor: 'CandidateDescriptor',\n      availabilityVotes: 'BitVec',\n      backers: 'BitVec',\n      relayParentNumber: 'BlockNumber',\n      backedInNumber: 'BlockNumber'\n    },\n    CandidateReceipt: {\n      descriptor: 'CandidateDescriptor',\n      commitmentsHash: 'Hash'\n    },\n    CollatorId: 'H256',\n    CollatorSignature: 'Signature',\n    CommittedCandidateReceipt: {\n      descriptor: 'CandidateDescriptor',\n      commitments: 'CandidateCommitments'\n    },\n    CoreAssignment: {\n      core: 'CoreIndex',\n      paraId: 'ParaId',\n      kind: 'AssignmentKind',\n      groupIdx: 'GroupIndex'\n    },\n    CoreIndex: 'u32',\n    CoreOccupied: {\n      _enum: {\n        Parathread: 'ParathreadEntry',\n        Parachain: 'Null'\n      }\n    },\n    DoubleVoteReport: {\n      identity: 'ValidatorId',\n      first: '(Statement, ValidatorSignature)',\n      second: '(Statement, ValidatorSignature)',\n      proof: 'MembershipProof',\n      signingContext: 'SigningContext'\n    },\n    DownwardMessage: 'Bytes',\n    GroupIndex: 'u32',\n    GlobalValidationSchedule: {\n      maxCodeSize: 'u32',\n      maxHeadDataSize: 'u32',\n      blockNumber: 'BlockNumber'\n    },\n    HeadData: 'Bytes',\n    HostConfiguration: {\n      maxCodeSize: 'u32',\n      maxHeadDataSize: 'u32',\n      maxUpwardQueueCount: 'u32',\n      maxUpwardQueueSize: 'u32',\n      maxUpwardMessageSize: 'u32',\n      maxUpwardMessageNumPerCandidate: 'u32',\n      hrmpMaxMessageNumPerCandidate: 'u32',\n      validationUpgradeFrequency: 'BlockNumber',\n      validationUpgradeDelay: 'BlockNumber',\n      maxPovSize: 'u32',\n      maxDownwardMessageSize: 'u32',\n      preferredDispatchableUpwardMessagesStepWeight: 'Weight',\n      hrmpMaxParachainOutboundChannels: 'u32',\n      hrmpMaxParathreadOutboundChannels: 'u32',\n      hrmpOpenRequestTtl: 'u32',\n      hrmpSenderDeposit: 'Balance',\n      hrmpRecipientDeposit: 'Balance',\n      hrmpChannelMaxCapacity: 'u32',\n      hrmpChannelMaxTotalSize: 'u32',\n      hrmpMaxParachainInboundChannels: 'u32',\n      hrmpMaxParathreadInboundChannels: 'u32',\n      hrmpChannelMaxMessageSize: 'u32',\n      acceptancePeriod: 'BlockNumber',\n      parathreadCores: 'u32',\n      parathreadRetries: 'u32',\n      groupRotationFrequency: 'BlockNumber',\n      chainAvailabilityPeriod: 'BlockNumber',\n      threadAvailabilityPeriod: 'BlockNumber',\n      schedulingLookahead: 'u32',\n      maxValidatorsPerCore: 'Option<u32>',\n      disputePeriod: 'SessionIndex',\n      noShowSlots: 'u32',\n      nDelayTranches: 'u32',\n      zerothDelayTrancheWidth: 'u32',\n      neededApprovals: 'u32',\n      relayVrfModuloSamples: 'u32'\n    },\n    InboundDownwardMessage: {\n      pubSentAt: 'BlockNumber',\n      pubMsg: 'DownwardMessage'\n    },\n    InboundHrmpMessage: {\n      sentAt: 'BlockNumber',\n      data: 'Bytes'\n    },\n    InboundHrmpMessages: 'Vec<InboundHrmpMessage>',\n    LocalValidationData: {\n      parentHead: 'HeadData',\n      balance: 'Balance',\n      codeUpgradeAllowed: 'Option<BlockNumber>'\n    },\n    MessageIngestionType: {\n      downwardMessages: 'Vec<InboundDownwardMessage>',\n      horizontalMessages: 'BTreeMap<ParaId, InboundHrmpMessages>'\n    },\n    OutboundHrmpMessage: {\n      recipient: 'u32',\n      data: 'Bytes'\n    },\n    ParachainDispatchOrigin: {\n      _enum: ['Signed', 'Parachain', 'Root']\n    },\n    ParaGenesisArgs: {\n      genesisHead: 'Bytes',\n      validationCode: 'Bytes',\n      parachain: 'bool'\n    },\n    ParaId: 'u32',\n    ParaInfo: {\n      scheduling: 'Scheduling'\n    },\n    ParaPastCodeMeta: {\n      upgradeTimes: 'Vec<BlockNumber>',\n      lastPruned: 'Option<BlockNumber>'\n    },\n    ParaScheduling: {\n      _enum: ['Always', 'Dynamic']\n    },\n    ParathreadClaim: '(ParaId, CollatorId)',\n    ParathreadClaimQueue: {\n      queue: 'Vec<QueuedParathread>',\n      nextCoreOffset: 'u32'\n    },\n    ParathreadEntry: {\n      claim: 'ParathreadClaim',\n      retries: 'u32'\n    },\n    ParaValidatorIndex: 'u32',\n    PersistedValidationData: {\n      parentHead: 'HeadData',\n      blockNumber: 'RelayChainBlockNumber',\n      relayStorageRoot: 'Hash',\n      hrmpMqcHeads: 'Vec<(u32, Hash)>',\n      dmqMqcHead: 'Hash',\n      maxPovSize: 'u32'\n    },\n    RelayChainBlockNumber: 'u32',\n    QueuedParathread: {\n      claim: 'ParathreadEntry',\n      coreOffset: 'u32'\n    },\n    Remark: '[u8; 32]',\n    Retriable: {\n      _enum: {\n        Never: 'Null',\n        WithRetries: 'u32'\n      }\n    },\n    Scheduling: {\n      _enum: ['Always', 'Dynamic']\n    },\n    SessionInfo: {\n      validators: 'Vec<ValidatorId>',\n      discoveryKeys: 'Vec<AuthorityDiscoveryId>',\n      assignmentKeys: 'Vec<AssignmentId>',\n      validatorGroups: 'Vec<SessionInfoValidatorGroup>',\n      nCores: 'u32',\n      zerothDelayTrancheWidth: 'u32',\n      relayVrfModuloSamples: 'u32',\n      nDelayTranches: 'u32',\n      noShowSlots: 'u32',\n      neededApprovals: 'u32'\n    },\n    SessionInfoValidatorGroup: 'Vec<ParaValidatorIndex>',\n    SignedAvailabilityBitfield: {\n      payload: 'BitVec',\n      validatorIndex: 'ParaValidatorIndex',\n      signature: 'ValidatorSignature'\n    },\n    SignedAvailabilityBitfields: 'Vec<SignedAvailabilityBitfield>',\n    SigningContext: {\n      sessionIndex: 'SessionIndex',\n      parentHash: 'Hash'\n    },\n    Statement: {\n      _enum: {\n        Never: 'Null',\n        // starts at 1\n        Candidate: 'Hash',\n        Valid: 'Hash',\n        Invalid: 'Hash'\n      }\n    },\n    TransientValidationData: {\n      maxCodeSize: 'u32',\n      maxHeadDataSize: 'u32',\n      balance: 'Balance',\n      codeUpgradeAllowed: 'Option<BlockNumber>',\n      dmqLength: 'u32'\n    },\n    UpwardMessage: 'Bytes',\n    ValidationFunctionParams: {\n      maxCodeSize: 'u32',\n      relayChainHeight: 'RelayChainBlockNumber',\n      codeUpgradeAllowed: 'Option<RelayChainBlockNumber>'\n    },\n    ValidationCode: 'Bytes',\n    ValidationData: {\n      persisted: 'PersistedValidationData',\n      transient: 'TransientValidationData'\n    },\n    ValidationDataType: {\n      validationData: 'ValidationData',\n      relayChainState: 'Vec<Bytes>'\n    },\n    ValidatorSignature: 'Signature',\n    ValidityAttestation: {\n      _enum: {\n        Never: 'Null',\n        // starts at 1\n        Implicit: 'ValidatorSignature',\n        Explicit: 'ValidatorSignature'\n      }\n    },\n    VersionedXcm: {\n      _enum: {\n        V0: 'Xcm'\n      }\n    },\n    WithdrawAsset: {\n      assets: 'Vec<MultiAsset>',\n      effects: 'Vec<Order>'\n    },\n    ReserveAssetDeposit: {\n      assets: 'Vec<MultiAsset>',\n      effects: 'Vec<Order>'\n    },\n    TeleportAsset: {\n      assets: 'Vec<MultiAsset>',\n      effects: 'Vec<Order>'\n    },\n    Balances: {\n      queryId: 'Compact<u64>',\n      assets: 'Vec<MultiAsset>'\n    },\n    Transact: {\n      originType: 'OriginKind',\n      call: 'Vec<u8>'\n    },\n    RelayTo: {\n      dest: 'MultiLocation',\n      inner: 'VersionedXcm'\n    },\n    RelayedFrom: {\n      superorigin: 'MultiLocation',\n      inner: 'VersionedXcm'\n    },\n    Xcm: {\n      _enum: {\n        WithdrawAsset: 'WithdrawAsset',\n        ReserveAssetDeposit: 'ReserveAssetDeposit',\n        TeleportAsset: 'TeleportAsset',\n        Balances: 'Balances',\n        Transact: 'Transact',\n        RelayTo: 'RelayTo',\n        RelayedFrom: 'RelayedFrom'\n      }\n    },\n    XcmError: {\n      _enum: ['Undefined', 'Unimplemented', 'UnhandledXcmVersion', 'UnhandledXcmMessage', 'UnhandledEffect', 'EscalationOfPrivilege', 'UntrustedReserveLocation', 'UntrustedTeleportLocation', 'DestinationBufferOverflow', 'CannotReachDestination', 'MultiLocationFull', 'FailedToDecode', 'BadOrigin']\n    },\n    XcmResult: {\n      _enum: {\n        Ok: '()',\n        Err: 'XcmError'\n      }\n    },\n    OriginKind: {\n      _enum: ['Native', 'SovereignAccount', 'Superuser']\n    },\n    NetworkId: {\n      _enum: {\n        Any: 'Null',\n        Named: 'Vec<u8>',\n        Polkadot: 'Null',\n        Kusama: 'Null'\n      }\n    },\n    MultiLocation: {\n      _enum: {\n        Null: 'Null',\n        X1: 'Junction',\n        X2: '(Junction, Junction)',\n        X3: '(Junction, Junction, Junction)',\n        X4: '(Junction, Junction, Junction, Junction)'\n      }\n    },\n    AccountId32Junction: {\n      network: 'NetworkId',\n      id: 'AccountId'\n    },\n    AccountIndex64Junction: {\n      network: 'NetworkId',\n      index: 'Compact<u64>'\n    },\n    AccountKey20Junction: {\n      network: 'NetworkId',\n      index: '[u8; 20]'\n    },\n    Junction: {\n      _enum: {\n        Parent: 'Null',\n        Parachain: 'Compact<u32>',\n        AccountId32: 'AccountId32Junction',\n        AccountIndex64: 'AccountIndex64Junction',\n        AccountKey20: 'AccountKey20Junction',\n        PalletInstance: 'u8',\n        GeneralIndex: 'Compact<u128>',\n        GeneralKey: 'Vec<u8>',\n        OnlyChild: 'Null'\n      }\n    },\n    VersionedMultiLocation: {\n      _enum: {\n        V0: 'MultiLocation'\n      }\n    },\n    AssetInstance: {\n      _enum: {\n        Undefined: 'Null',\n        Index8: 'u8',\n        Index16: 'Compact<u16>',\n        Index32: 'Compact<u32>',\n        Index64: 'Compact<u64>',\n        Index128: 'Compact<u128>',\n        Array4: '[u8; 4]',\n        Array8: '[u8; 8]',\n        Array16: '[u8; 16]',\n        Array32: '[u8; 32]',\n        Blob: 'Vec<u8>'\n      }\n    },\n    AbstractFungible: {\n      id: 'Vec<u8>',\n      instance: 'Compact<u128>'\n    },\n    AbstractNonFungible: {\n      class: 'Vec<u8>',\n      instance: 'AssetInstance'\n    },\n    ConcreteFungible: {\n      id: 'MultiLocation',\n      amount: 'Compact<u128>'\n    },\n    ConcreteNonFungible: {\n      class: 'MultiLocation',\n      instance: 'AssetInstance'\n    },\n    MultiAsset: {\n      _enum: {\n        None: 'Null',\n        All: 'Null',\n        AllFungible: 'Null',\n        AllNonFungible: 'Null',\n        AllAbstractFungible: 'Vec<u8>',\n        AllAbstractNonFungible: 'Vec<u8>',\n        AllConcreteFungible: 'MultiLocation',\n        AllConcreteNonFungible: 'MultiLocation',\n        AbstractFungible: 'AbstractFungible',\n        AbstractNonFungible: 'AbstractNonFungible',\n        ConcreteFungible: 'ConcreteFungible',\n        ConcreteNonFungible: 'ConcreteNonFungible'\n      }\n    },\n    VersionedMultiAsset: {\n      _enum: {\n        V0: 'MultiAsset'\n      }\n    },\n    DepositAsset: {\n      assets: 'Vec<MultiAsset>',\n      dest: 'MultiLocation'\n    },\n    DepositReserveAsset: {\n      assets: 'Vec<MultiAsset>',\n      dest: 'MultiLocation',\n      effects: 'Vec<Order>'\n    },\n    ExchangeAsset: {\n      give: 'Vec<MultiAsset>',\n      receive: 'Vec<MultiAsset>'\n    },\n    InitiateReserveWithdraw: {\n      assets: 'Vec<MultiAsset>',\n      reserve: 'MultiLocation',\n      effects: 'Vec<Order>'\n    },\n    InitiateTeleport: {\n      assets: 'Vec<MultiAsset>',\n      dest: 'MultiLocation',\n      effects: 'Vec<Order>'\n    },\n    QueryHolding: {\n      queryId: 'Compact<u64>',\n      dest: 'MultiLocation',\n      assets: 'Vec<MultiAsset>'\n    },\n    Order: {\n      _enum: {\n        Null: 'Null',\n        DepositAsset: 'DepositAsset',\n        DepositReserveAsset: 'DepositReserveAsset',\n        ExchangeAsset: 'ExchangeAsset',\n        InitiateReserveWithdraw: 'InitiateReserveWithdraw',\n        InitiateTeleport: 'InitiateTeleport',\n        QueryHolding: 'QueryHolding'\n      }\n    },\n    MessagingStateSnapshot: {\n      relayDispatchQueueSize: '(u32, u32)',\n      egressChannels: 'Vec<MessagingStateSnapshotEgressEntry>'\n    },\n    MessagingStateSnapshotEgressEntry: '(ParaId, AbridgedHrmpChannel)',\n    SystemInherentData: {\n      validationData: 'PersistedValidationData',\n      relayChainState: 'StorageProof',\n      downwardMessages: 'Vec<InboundDownwardMessage>',\n      horizontalMessages: 'BTreeMap<ParaId, VecInboundHrmpMessage>'\n    },\n    VecInboundHrmpMessage: 'Vec<InboundHrmpMessage>'\n  })\n};","map":{"version":3,"sources":["/Users/bmacer/substrate-node-template/substrate-front-end-template/node_modules/@polkadot/types/interfaces/parachains/definitions.mjs"],"names":["_defineProperty","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","getOwnPropertyDescriptors","defineProperties","defineProperty","hrmpTypes","slotTypes","proposeTypes","ParachainProposal","proposer","genesisHead","validators","name","balance","RegisteredParachainInfo","rpc","types","AbridgedCandidateReceipt","parachainIndex","relayParent","headData","collator","signature","povBlockHash","commitments","AbridgedHostConfiguration","maxCodeSize","maxHeadDataSize","maxUpwardQueueCount","maxUpwardQueueSize","maxUpwardMessageSize","maxUpwardMessageNumPerCandidate","hrmpMaxMessageNumPerCandidate","validationUpgradeFrequency","validationUpgradeDelay","AbridgedHrmpChannel","maxCapacity","maxTotalSize","maxMessageSize","msgCount","totalSize","mqcHead","AssignmentId","AssignmentKind","_enum","Parachain","Parathread","AttestedCandidate","candidate","validityVotes","validatorIndices","AuthorityDiscoveryId","AvailabilityBitfield","AvailabilityBitfieldRecord","bitfield","submittedTt","BackedCandidate","BufferedSessionChange","applyAt","queued","sessionIndex","CandidateCommitments","upwardMessages","horizontalMessages","newValidationCode","processedDownwardMessages","hrmpWatermark","CandidateDescriptor","paraId","collatorId","persistedValidationDataHash","povHash","erasureRoot","paraHead","CandidateHash","CandidatePendingAvailability","core","hash","descriptor","availabilityVotes","backers","relayParentNumber","backedInNumber","CandidateReceipt","commitmentsHash","CollatorId","CollatorSignature","CommittedCandidateReceipt","CoreAssignment","kind","groupIdx","CoreIndex","CoreOccupied","DoubleVoteReport","identity","first","second","proof","signingContext","DownwardMessage","GroupIndex","GlobalValidationSchedule","blockNumber","HeadData","HostConfiguration","maxPovSize","maxDownwardMessageSize","preferredDispatchableUpwardMessagesStepWeight","hrmpMaxParachainOutboundChannels","hrmpMaxParathreadOutboundChannels","hrmpOpenRequestTtl","hrmpSenderDeposit","hrmpRecipientDeposit","hrmpChannelMaxCapacity","hrmpChannelMaxTotalSize","hrmpMaxParachainInboundChannels","hrmpMaxParathreadInboundChannels","hrmpChannelMaxMessageSize","acceptancePeriod","parathreadCores","parathreadRetries","groupRotationFrequency","chainAvailabilityPeriod","threadAvailabilityPeriod","schedulingLookahead","maxValidatorsPerCore","disputePeriod","noShowSlots","nDelayTranches","zerothDelayTrancheWidth","neededApprovals","relayVrfModuloSamples","InboundDownwardMessage","pubSentAt","pubMsg","InboundHrmpMessage","sentAt","data","InboundHrmpMessages","LocalValidationData","parentHead","codeUpgradeAllowed","MessageIngestionType","downwardMessages","OutboundHrmpMessage","recipient","ParachainDispatchOrigin","ParaGenesisArgs","validationCode","parachain","ParaId","ParaInfo","scheduling","ParaPastCodeMeta","upgradeTimes","lastPruned","ParaScheduling","ParathreadClaim","ParathreadClaimQueue","queue","nextCoreOffset","ParathreadEntry","claim","retries","ParaValidatorIndex","PersistedValidationData","relayStorageRoot","hrmpMqcHeads","dmqMqcHead","RelayChainBlockNumber","QueuedParathread","coreOffset","Remark","Retriable","Never","WithRetries","Scheduling","SessionInfo","discoveryKeys","assignmentKeys","validatorGroups","nCores","SessionInfoValidatorGroup","SignedAvailabilityBitfield","payload","validatorIndex","SignedAvailabilityBitfields","SigningContext","parentHash","Statement","Candidate","Valid","Invalid","TransientValidationData","dmqLength","UpwardMessage","ValidationFunctionParams","relayChainHeight","ValidationCode","ValidationData","persisted","transient","ValidationDataType","validationData","relayChainState","ValidatorSignature","ValidityAttestation","Implicit","Explicit","VersionedXcm","V0","WithdrawAsset","assets","effects","ReserveAssetDeposit","TeleportAsset","Balances","queryId","Transact","originType","call","RelayTo","dest","inner","RelayedFrom","superorigin","Xcm","XcmError","XcmResult","Ok","Err","OriginKind","NetworkId","Any","Named","Polkadot","Kusama","MultiLocation","Null","X1","X2","X3","X4","AccountId32Junction","network","id","AccountIndex64Junction","index","AccountKey20Junction","Junction","Parent","AccountId32","AccountIndex64","AccountKey20","PalletInstance","GeneralIndex","GeneralKey","OnlyChild","VersionedMultiLocation","AssetInstance","Undefined","Index8","Index16","Index32","Index64","Index128","Array4","Array8","Array16","Array32","Blob","AbstractFungible","instance","AbstractNonFungible","class","ConcreteFungible","amount","ConcreteNonFungible","MultiAsset","None","All","AllFungible","AllNonFungible","AllAbstractFungible","AllAbstractNonFungible","AllConcreteFungible","AllConcreteNonFungible","VersionedMultiAsset","DepositAsset","DepositReserveAsset","ExchangeAsset","give","receive","InitiateReserveWithdraw","reserve","InitiateTeleport","QueryHolding","Order","MessagingStateSnapshot","relayDispatchQueueSize","egressChannels","MessagingStateSnapshotEgressEntry","SystemInherentData","VecInboundHrmpMessage"],"mappings":"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","sourcesContent":["import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n// Copyright 2017-2021 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// order important in structs... :)\n\n/* eslint-disable sort-keys */\nimport hrmpTypes from \"./hrmp.mjs\";\nimport slotTypes from \"./slots.mjs\"; // proposeParachain\n\nconst proposeTypes = {\n  ParachainProposal: {\n    proposer: 'AccountId',\n    genesisHead: 'HeadData',\n    validators: 'Vec<ValidatorId>',\n    name: 'Bytes',\n    balance: 'Balance'\n  },\n  RegisteredParachainInfo: {\n    validators: 'Vec<ValidatorId>',\n    proposer: 'AccountId'\n  }\n};\nexport default {\n  rpc: {},\n  types: _objectSpread(_objectSpread(_objectSpread(_objectSpread({}, proposeTypes), hrmpTypes), slotTypes), {}, {\n    AbridgedCandidateReceipt: {\n      parachainIndex: 'ParaId',\n      relayParent: 'Hash',\n      headData: 'HeadData',\n      collator: 'CollatorId',\n      signature: 'CollatorSignature',\n      povBlockHash: 'Hash',\n      commitments: 'CandidateCommitments'\n    },\n    AbridgedHostConfiguration: {\n      maxCodeSize: 'u32',\n      maxHeadDataSize: 'u32',\n      maxUpwardQueueCount: 'u32',\n      maxUpwardQueueSize: 'u32',\n      maxUpwardMessageSize: 'u32',\n      maxUpwardMessageNumPerCandidate: 'u32',\n      hrmpMaxMessageNumPerCandidate: 'u32',\n      validationUpgradeFrequency: 'BlockNumber',\n      validationUpgradeDelay: 'BlockNumber'\n    },\n    AbridgedHrmpChannel: {\n      maxCapacity: 'u32',\n      maxTotalSize: 'u32',\n      maxMessageSize: 'u32',\n      msgCount: 'u32',\n      totalSize: 'u32',\n      mqcHead: 'Option<Hash>'\n    },\n    AssignmentId: 'AccountId',\n    AssignmentKind: {\n      _enum: {\n        Parachain: 'Null',\n        Parathread: '(CollatorId, u32)'\n      }\n    },\n    AttestedCandidate: {\n      candidate: 'AbridgedCandidateReceipt',\n      validityVotes: 'Vec<ValidityAttestation>',\n      validatorIndices: 'BitVec'\n    },\n    AuthorityDiscoveryId: 'AccountId',\n    AvailabilityBitfield: 'BitVec',\n    AvailabilityBitfieldRecord: {\n      bitfield: 'AvailabilityBitfield',\n      submittedTt: 'BlockNumber'\n    },\n    BackedCandidate: {\n      candidate: 'CommittedCandidateReceipt',\n      validityVotes: 'Vec<ValidityAttestation>',\n      validatorIndices: 'BitVec'\n    },\n    BufferedSessionChange: {\n      applyAt: 'BlockNumber',\n      validators: 'Vec<ValidatorId>',\n      queued: 'Vec<ValidatorId>',\n      sessionIndex: 'SessionIndex'\n    },\n    CandidateCommitments: {\n      upwardMessages: 'Vec<UpwardMessage>',\n      horizontalMessages: 'Vec<OutboundHrmpMessage>',\n      newValidationCode: 'Option<ValidationCode>',\n      headData: 'HeadData',\n      processedDownwardMessages: 'u32',\n      hrmpWatermark: 'BlockNumber'\n    },\n    CandidateDescriptor: {\n      paraId: 'ParaId',\n      relayParent: 'Hash',\n      collatorId: 'CollatorId',\n      persistedValidationDataHash: 'Hash',\n      povHash: 'Hash',\n      erasureRoot: 'Hash',\n      signature: 'CollatorSignature',\n      paraHead: 'Hash'\n    },\n    CandidateHash: 'Hash',\n    CandidatePendingAvailability: {\n      core: 'CoreIndex',\n      hash: 'CandidateHash',\n      descriptor: 'CandidateDescriptor',\n      availabilityVotes: 'BitVec',\n      backers: 'BitVec',\n      relayParentNumber: 'BlockNumber',\n      backedInNumber: 'BlockNumber'\n    },\n    CandidateReceipt: {\n      descriptor: 'CandidateDescriptor',\n      commitmentsHash: 'Hash'\n    },\n    CollatorId: 'H256',\n    CollatorSignature: 'Signature',\n    CommittedCandidateReceipt: {\n      descriptor: 'CandidateDescriptor',\n      commitments: 'CandidateCommitments'\n    },\n    CoreAssignment: {\n      core: 'CoreIndex',\n      paraId: 'ParaId',\n      kind: 'AssignmentKind',\n      groupIdx: 'GroupIndex'\n    },\n    CoreIndex: 'u32',\n    CoreOccupied: {\n      _enum: {\n        Parathread: 'ParathreadEntry',\n        Parachain: 'Null'\n      }\n    },\n    DoubleVoteReport: {\n      identity: 'ValidatorId',\n      first: '(Statement, ValidatorSignature)',\n      second: '(Statement, ValidatorSignature)',\n      proof: 'MembershipProof',\n      signingContext: 'SigningContext'\n    },\n    DownwardMessage: 'Bytes',\n    GroupIndex: 'u32',\n    GlobalValidationSchedule: {\n      maxCodeSize: 'u32',\n      maxHeadDataSize: 'u32',\n      blockNumber: 'BlockNumber'\n    },\n    HeadData: 'Bytes',\n    HostConfiguration: {\n      maxCodeSize: 'u32',\n      maxHeadDataSize: 'u32',\n      maxUpwardQueueCount: 'u32',\n      maxUpwardQueueSize: 'u32',\n      maxUpwardMessageSize: 'u32',\n      maxUpwardMessageNumPerCandidate: 'u32',\n      hrmpMaxMessageNumPerCandidate: 'u32',\n      validationUpgradeFrequency: 'BlockNumber',\n      validationUpgradeDelay: 'BlockNumber',\n      maxPovSize: 'u32',\n      maxDownwardMessageSize: 'u32',\n      preferredDispatchableUpwardMessagesStepWeight: 'Weight',\n      hrmpMaxParachainOutboundChannels: 'u32',\n      hrmpMaxParathreadOutboundChannels: 'u32',\n      hrmpOpenRequestTtl: 'u32',\n      hrmpSenderDeposit: 'Balance',\n      hrmpRecipientDeposit: 'Balance',\n      hrmpChannelMaxCapacity: 'u32',\n      hrmpChannelMaxTotalSize: 'u32',\n      hrmpMaxParachainInboundChannels: 'u32',\n      hrmpMaxParathreadInboundChannels: 'u32',\n      hrmpChannelMaxMessageSize: 'u32',\n      acceptancePeriod: 'BlockNumber',\n      parathreadCores: 'u32',\n      parathreadRetries: 'u32',\n      groupRotationFrequency: 'BlockNumber',\n      chainAvailabilityPeriod: 'BlockNumber',\n      threadAvailabilityPeriod: 'BlockNumber',\n      schedulingLookahead: 'u32',\n      maxValidatorsPerCore: 'Option<u32>',\n      disputePeriod: 'SessionIndex',\n      noShowSlots: 'u32',\n      nDelayTranches: 'u32',\n      zerothDelayTrancheWidth: 'u32',\n      neededApprovals: 'u32',\n      relayVrfModuloSamples: 'u32'\n    },\n    InboundDownwardMessage: {\n      pubSentAt: 'BlockNumber',\n      pubMsg: 'DownwardMessage'\n    },\n    InboundHrmpMessage: {\n      sentAt: 'BlockNumber',\n      data: 'Bytes'\n    },\n    InboundHrmpMessages: 'Vec<InboundHrmpMessage>',\n    LocalValidationData: {\n      parentHead: 'HeadData',\n      balance: 'Balance',\n      codeUpgradeAllowed: 'Option<BlockNumber>'\n    },\n    MessageIngestionType: {\n      downwardMessages: 'Vec<InboundDownwardMessage>',\n      horizontalMessages: 'BTreeMap<ParaId, InboundHrmpMessages>'\n    },\n    OutboundHrmpMessage: {\n      recipient: 'u32',\n      data: 'Bytes'\n    },\n    ParachainDispatchOrigin: {\n      _enum: ['Signed', 'Parachain', 'Root']\n    },\n    ParaGenesisArgs: {\n      genesisHead: 'Bytes',\n      validationCode: 'Bytes',\n      parachain: 'bool'\n    },\n    ParaId: 'u32',\n    ParaInfo: {\n      scheduling: 'Scheduling'\n    },\n    ParaPastCodeMeta: {\n      upgradeTimes: 'Vec<BlockNumber>',\n      lastPruned: 'Option<BlockNumber>'\n    },\n    ParaScheduling: {\n      _enum: ['Always', 'Dynamic']\n    },\n    ParathreadClaim: '(ParaId, CollatorId)',\n    ParathreadClaimQueue: {\n      queue: 'Vec<QueuedParathread>',\n      nextCoreOffset: 'u32'\n    },\n    ParathreadEntry: {\n      claim: 'ParathreadClaim',\n      retries: 'u32'\n    },\n    ParaValidatorIndex: 'u32',\n    PersistedValidationData: {\n      parentHead: 'HeadData',\n      blockNumber: 'RelayChainBlockNumber',\n      relayStorageRoot: 'Hash',\n      hrmpMqcHeads: 'Vec<(u32, Hash)>',\n      dmqMqcHead: 'Hash',\n      maxPovSize: 'u32'\n    },\n    RelayChainBlockNumber: 'u32',\n    QueuedParathread: {\n      claim: 'ParathreadEntry',\n      coreOffset: 'u32'\n    },\n    Remark: '[u8; 32]',\n    Retriable: {\n      _enum: {\n        Never: 'Null',\n        WithRetries: 'u32'\n      }\n    },\n    Scheduling: {\n      _enum: ['Always', 'Dynamic']\n    },\n    SessionInfo: {\n      validators: 'Vec<ValidatorId>',\n      discoveryKeys: 'Vec<AuthorityDiscoveryId>',\n      assignmentKeys: 'Vec<AssignmentId>',\n      validatorGroups: 'Vec<SessionInfoValidatorGroup>',\n      nCores: 'u32',\n      zerothDelayTrancheWidth: 'u32',\n      relayVrfModuloSamples: 'u32',\n      nDelayTranches: 'u32',\n      noShowSlots: 'u32',\n      neededApprovals: 'u32'\n    },\n    SessionInfoValidatorGroup: 'Vec<ParaValidatorIndex>',\n    SignedAvailabilityBitfield: {\n      payload: 'BitVec',\n      validatorIndex: 'ParaValidatorIndex',\n      signature: 'ValidatorSignature'\n    },\n    SignedAvailabilityBitfields: 'Vec<SignedAvailabilityBitfield>',\n    SigningContext: {\n      sessionIndex: 'SessionIndex',\n      parentHash: 'Hash'\n    },\n    Statement: {\n      _enum: {\n        Never: 'Null',\n        // starts at 1\n        Candidate: 'Hash',\n        Valid: 'Hash',\n        Invalid: 'Hash'\n      }\n    },\n    TransientValidationData: {\n      maxCodeSize: 'u32',\n      maxHeadDataSize: 'u32',\n      balance: 'Balance',\n      codeUpgradeAllowed: 'Option<BlockNumber>',\n      dmqLength: 'u32'\n    },\n    UpwardMessage: 'Bytes',\n    ValidationFunctionParams: {\n      maxCodeSize: 'u32',\n      relayChainHeight: 'RelayChainBlockNumber',\n      codeUpgradeAllowed: 'Option<RelayChainBlockNumber>'\n    },\n    ValidationCode: 'Bytes',\n    ValidationData: {\n      persisted: 'PersistedValidationData',\n      transient: 'TransientValidationData'\n    },\n    ValidationDataType: {\n      validationData: 'ValidationData',\n      relayChainState: 'Vec<Bytes>'\n    },\n    ValidatorSignature: 'Signature',\n    ValidityAttestation: {\n      _enum: {\n        Never: 'Null',\n        // starts at 1\n        Implicit: 'ValidatorSignature',\n        Explicit: 'ValidatorSignature'\n      }\n    },\n    VersionedXcm: {\n      _enum: {\n        V0: 'Xcm'\n      }\n    },\n    WithdrawAsset: {\n      assets: 'Vec<MultiAsset>',\n      effects: 'Vec<Order>'\n    },\n    ReserveAssetDeposit: {\n      assets: 'Vec<MultiAsset>',\n      effects: 'Vec<Order>'\n    },\n    TeleportAsset: {\n      assets: 'Vec<MultiAsset>',\n      effects: 'Vec<Order>'\n    },\n    Balances: {\n      queryId: 'Compact<u64>',\n      assets: 'Vec<MultiAsset>'\n    },\n    Transact: {\n      originType: 'OriginKind',\n      call: 'Vec<u8>'\n    },\n    RelayTo: {\n      dest: 'MultiLocation',\n      inner: 'VersionedXcm'\n    },\n    RelayedFrom: {\n      superorigin: 'MultiLocation',\n      inner: 'VersionedXcm'\n    },\n    Xcm: {\n      _enum: {\n        WithdrawAsset: 'WithdrawAsset',\n        ReserveAssetDeposit: 'ReserveAssetDeposit',\n        TeleportAsset: 'TeleportAsset',\n        Balances: 'Balances',\n        Transact: 'Transact',\n        RelayTo: 'RelayTo',\n        RelayedFrom: 'RelayedFrom'\n      }\n    },\n    XcmError: {\n      _enum: ['Undefined', 'Unimplemented', 'UnhandledXcmVersion', 'UnhandledXcmMessage', 'UnhandledEffect', 'EscalationOfPrivilege', 'UntrustedReserveLocation', 'UntrustedTeleportLocation', 'DestinationBufferOverflow', 'CannotReachDestination', 'MultiLocationFull', 'FailedToDecode', 'BadOrigin']\n    },\n    XcmResult: {\n      _enum: {\n        Ok: '()',\n        Err: 'XcmError'\n      }\n    },\n    OriginKind: {\n      _enum: ['Native', 'SovereignAccount', 'Superuser']\n    },\n    NetworkId: {\n      _enum: {\n        Any: 'Null',\n        Named: 'Vec<u8>',\n        Polkadot: 'Null',\n        Kusama: 'Null'\n      }\n    },\n    MultiLocation: {\n      _enum: {\n        Null: 'Null',\n        X1: 'Junction',\n        X2: '(Junction, Junction)',\n        X3: '(Junction, Junction, Junction)',\n        X4: '(Junction, Junction, Junction, Junction)'\n      }\n    },\n    AccountId32Junction: {\n      network: 'NetworkId',\n      id: 'AccountId'\n    },\n    AccountIndex64Junction: {\n      network: 'NetworkId',\n      index: 'Compact<u64>'\n    },\n    AccountKey20Junction: {\n      network: 'NetworkId',\n      index: '[u8; 20]'\n    },\n    Junction: {\n      _enum: {\n        Parent: 'Null',\n        Parachain: 'Compact<u32>',\n        AccountId32: 'AccountId32Junction',\n        AccountIndex64: 'AccountIndex64Junction',\n        AccountKey20: 'AccountKey20Junction',\n        PalletInstance: 'u8',\n        GeneralIndex: 'Compact<u128>',\n        GeneralKey: 'Vec<u8>',\n        OnlyChild: 'Null'\n      }\n    },\n    VersionedMultiLocation: {\n      _enum: {\n        V0: 'MultiLocation'\n      }\n    },\n    AssetInstance: {\n      _enum: {\n        Undefined: 'Null',\n        Index8: 'u8',\n        Index16: 'Compact<u16>',\n        Index32: 'Compact<u32>',\n        Index64: 'Compact<u64>',\n        Index128: 'Compact<u128>',\n        Array4: '[u8; 4]',\n        Array8: '[u8; 8]',\n        Array16: '[u8; 16]',\n        Array32: '[u8; 32]',\n        Blob: 'Vec<u8>'\n      }\n    },\n    AbstractFungible: {\n      id: 'Vec<u8>',\n      instance: 'Compact<u128>'\n    },\n    AbstractNonFungible: {\n      class: 'Vec<u8>',\n      instance: 'AssetInstance'\n    },\n    ConcreteFungible: {\n      id: 'MultiLocation',\n      amount: 'Compact<u128>'\n    },\n    ConcreteNonFungible: {\n      class: 'MultiLocation',\n      instance: 'AssetInstance'\n    },\n    MultiAsset: {\n      _enum: {\n        None: 'Null',\n        All: 'Null',\n        AllFungible: 'Null',\n        AllNonFungible: 'Null',\n        AllAbstractFungible: 'Vec<u8>',\n        AllAbstractNonFungible: 'Vec<u8>',\n        AllConcreteFungible: 'MultiLocation',\n        AllConcreteNonFungible: 'MultiLocation',\n        AbstractFungible: 'AbstractFungible',\n        AbstractNonFungible: 'AbstractNonFungible',\n        ConcreteFungible: 'ConcreteFungible',\n        ConcreteNonFungible: 'ConcreteNonFungible'\n      }\n    },\n    VersionedMultiAsset: {\n      _enum: {\n        V0: 'MultiAsset'\n      }\n    },\n    DepositAsset: {\n      assets: 'Vec<MultiAsset>',\n      dest: 'MultiLocation'\n    },\n    DepositReserveAsset: {\n      assets: 'Vec<MultiAsset>',\n      dest: 'MultiLocation',\n      effects: 'Vec<Order>'\n    },\n    ExchangeAsset: {\n      give: 'Vec<MultiAsset>',\n      receive: 'Vec<MultiAsset>'\n    },\n    InitiateReserveWithdraw: {\n      assets: 'Vec<MultiAsset>',\n      reserve: 'MultiLocation',\n      effects: 'Vec<Order>'\n    },\n    InitiateTeleport: {\n      assets: 'Vec<MultiAsset>',\n      dest: 'MultiLocation',\n      effects: 'Vec<Order>'\n    },\n    QueryHolding: {\n      queryId: 'Compact<u64>',\n      dest: 'MultiLocation',\n      assets: 'Vec<MultiAsset>'\n    },\n    Order: {\n      _enum: {\n        Null: 'Null',\n        DepositAsset: 'DepositAsset',\n        DepositReserveAsset: 'DepositReserveAsset',\n        ExchangeAsset: 'ExchangeAsset',\n        InitiateReserveWithdraw: 'InitiateReserveWithdraw',\n        InitiateTeleport: 'InitiateTeleport',\n        QueryHolding: 'QueryHolding'\n      }\n    },\n    MessagingStateSnapshot: {\n      relayDispatchQueueSize: '(u32, u32)',\n      egressChannels: 'Vec<MessagingStateSnapshotEgressEntry>'\n    },\n    MessagingStateSnapshotEgressEntry: '(ParaId, AbridgedHrmpChannel)',\n    SystemInherentData: {\n      validationData: 'PersistedValidationData',\n      relayChainState: 'StorageProof',\n      downwardMessages: 'Vec<InboundDownwardMessage>',\n      horizontalMessages: 'BTreeMap<ParaId, VecInboundHrmpMessage>'\n    },\n    VecInboundHrmpMessage: 'Vec<InboundHrmpMessage>'\n  })\n};"]},"metadata":{},"sourceType":"module"}