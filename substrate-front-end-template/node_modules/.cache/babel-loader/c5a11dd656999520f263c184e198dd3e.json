{"ast":null,"code":"// Copyright 2017-2021 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { assert } from '@polkadot/util';\nimport { mnemonicValidate } from \"../../mnemonic/index.mjs\";\nimport { naclKeypairFromSeed } from \"../../nacl/index.mjs\";\nimport { ledgerDerivePrivate } from \"./derivePrivate.mjs\";\nimport { ledgerMaster } from \"./master.mjs\";\nimport { ledgerValidatePath } from \"./validatePath.mjs\";\nconst HARDENED = 0x80000000;\nexport function hdLedger(mnemonic, path) {\n  assert(mnemonicValidate(mnemonic), 'Invalid mnemonic passed to ledger derivation');\n  assert(ledgerValidatePath(path), 'Invalid derivation path');\n  return naclKeypairFromSeed(path.split('/').slice(1).map(n => parseInt(n.replace(\"'\", ''), 10)).map(n => n < HARDENED ? n + HARDENED : n).reduce((x, n) => ledgerDerivePrivate(x, n), ledgerMaster(mnemonic)).slice(0, 32));\n}","map":{"version":3,"sources":["/Users/bmacer/substrate-node-template/substrate-front-end-template/node_modules/@polkadot/util-crypto/hd/ledger/index.mjs"],"names":["assert","mnemonicValidate","naclKeypairFromSeed","ledgerDerivePrivate","ledgerMaster","ledgerValidatePath","HARDENED","hdLedger","mnemonic","path","split","slice","map","n","parseInt","replace","reduce","x"],"mappings":"AAAA;AACA;AACA,SAASA,MAAT,QAAuB,gBAAvB;AACA,SAASC,gBAAT,QAAiC,0BAAjC;AACA,SAASC,mBAAT,QAAoC,sBAApC;AACA,SAASC,mBAAT,QAAoC,qBAApC;AACA,SAASC,YAAT,QAA6B,cAA7B;AACA,SAASC,kBAAT,QAAmC,oBAAnC;AACA,MAAMC,QAAQ,GAAG,UAAjB;AACA,OAAO,SAASC,QAAT,CAAkBC,QAAlB,EAA4BC,IAA5B,EAAkC;AACvCT,EAAAA,MAAM,CAACC,gBAAgB,CAACO,QAAD,CAAjB,EAA6B,8CAA7B,CAAN;AACAR,EAAAA,MAAM,CAACK,kBAAkB,CAACI,IAAD,CAAnB,EAA2B,yBAA3B,CAAN;AACA,SAAOP,mBAAmB,CAACO,IAAI,CAACC,KAAL,CAAW,GAAX,EAAgBC,KAAhB,CAAsB,CAAtB,EAAyBC,GAAzB,CAA6BC,CAAC,IAAIC,QAAQ,CAACD,CAAC,CAACE,OAAF,CAAU,GAAV,EAAe,EAAf,CAAD,EAAqB,EAArB,CAA1C,EAAoEH,GAApE,CAAwEC,CAAC,IAAIA,CAAC,GAAGP,QAAJ,GAAeO,CAAC,GAAGP,QAAnB,GAA8BO,CAA3G,EAA8GG,MAA9G,CAAqH,CAACC,CAAD,EAAIJ,CAAJ,KAAUV,mBAAmB,CAACc,CAAD,EAAIJ,CAAJ,CAAlJ,EAA0JT,YAAY,CAACI,QAAD,CAAtK,EAAkLG,KAAlL,CAAwL,CAAxL,EAA2L,EAA3L,CAAD,CAA1B;AACD","sourcesContent":["// Copyright 2017-2021 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { assert } from '@polkadot/util';\nimport { mnemonicValidate } from \"../../mnemonic/index.mjs\";\nimport { naclKeypairFromSeed } from \"../../nacl/index.mjs\";\nimport { ledgerDerivePrivate } from \"./derivePrivate.mjs\";\nimport { ledgerMaster } from \"./master.mjs\";\nimport { ledgerValidatePath } from \"./validatePath.mjs\";\nconst HARDENED = 0x80000000;\nexport function hdLedger(mnemonic, path) {\n  assert(mnemonicValidate(mnemonic), 'Invalid mnemonic passed to ledger derivation');\n  assert(ledgerValidatePath(path), 'Invalid derivation path');\n  return naclKeypairFromSeed(path.split('/').slice(1).map(n => parseInt(n.replace(\"'\", ''), 10)).map(n => n < HARDENED ? n + HARDENED : n).reduce((x, n) => ledgerDerivePrivate(x, n), ledgerMaster(mnemonic)).slice(0, 32));\n}"]},"metadata":{},"sourceType":"module"}