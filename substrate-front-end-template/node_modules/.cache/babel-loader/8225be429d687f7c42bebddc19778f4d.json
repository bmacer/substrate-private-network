{"ast":null,"code":"import _classPrivateFieldLooseBase from \"@babel/runtime/helpers/esm/classPrivateFieldLooseBase\";\nimport _classPrivateFieldLooseKey from \"@babel/runtime/helpers/esm/classPrivateFieldLooseKey\"; // Copyright 2017-2021 @polkadot/ui-keyring authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\nimport { createTestKeyring } from '@polkadot/keyring/testing';\nimport { isBoolean, isString } from '@polkadot/util';\nimport { accounts } from \"./observable/accounts.mjs\";\nimport { addresses } from \"./observable/addresses.mjs\";\nimport { contracts } from \"./observable/contracts.mjs\";\nimport { env } from \"./observable/env.mjs\";\nimport { BrowserStore } from \"./stores/Browser.mjs\"; // direct import (skip index with all)\n\nvar _accounts = _classPrivateFieldLooseKey(\"accounts\");\n\nvar _addresses = _classPrivateFieldLooseKey(\"addresses\");\n\nvar _contracts = _classPrivateFieldLooseKey(\"contracts\");\n\nvar _keyring = _classPrivateFieldLooseKey(\"keyring\");\n\nexport class Base {\n  constructor() {\n    Object.defineProperty(this, _accounts, {\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, _addresses, {\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, _contracts, {\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, _keyring, {\n      writable: true,\n      value: void 0\n    });\n    this._store = void 0;\n    this._genesisHash = void 0;\n\n    this.decodeAddress = (key, ignoreChecksum, ss58Format) => {\n      return this.keyring.decodeAddress(key, ignoreChecksum, ss58Format);\n    };\n\n    this.encodeAddress = (key, ss58Format) => {\n      return this.keyring.encodeAddress(key, ss58Format);\n    };\n\n    _classPrivateFieldLooseBase(this, _accounts)[_accounts] = accounts;\n    _classPrivateFieldLooseBase(this, _addresses)[_addresses] = addresses;\n    _classPrivateFieldLooseBase(this, _contracts)[_contracts] = contracts;\n    this._store = new BrowserStore();\n  }\n\n  get accounts() {\n    return _classPrivateFieldLooseBase(this, _accounts)[_accounts];\n  }\n\n  get addresses() {\n    return _classPrivateFieldLooseBase(this, _addresses)[_addresses];\n  }\n\n  get contracts() {\n    return _classPrivateFieldLooseBase(this, _contracts)[_contracts];\n  }\n\n  get keyring() {\n    if (_classPrivateFieldLooseBase(this, _keyring)[_keyring]) {\n      return _classPrivateFieldLooseBase(this, _keyring)[_keyring];\n    }\n\n    throw new Error('Keyring should be initialised via \\'loadAll\\' before use');\n  }\n\n  get genesisHash() {\n    return this._genesisHash;\n  }\n\n  getPair(address) {\n    return this.keyring.getPair(address);\n  }\n\n  getPairs() {\n    return this.keyring.getPairs().filter(pair => env.isDevelopment() || pair.meta.isTesting !== true);\n  }\n\n  isAvailable(_address) {\n    const accountsValue = this.accounts.subject.getValue();\n    const addressesValue = this.addresses.subject.getValue();\n    const contractsValue = this.contracts.subject.getValue();\n    const address = isString(_address) ? _address : this.encodeAddress(_address);\n    return !accountsValue[address] && !addressesValue[address] && !contractsValue[address];\n  }\n\n  isPassValid(password) {\n    return password.length > 0;\n  }\n\n  setSS58Format(ss58Format) {\n    if (_classPrivateFieldLooseBase(this, _keyring)[_keyring] && ss58Format) {\n      _classPrivateFieldLooseBase(this, _keyring)[_keyring].setSS58Format(ss58Format);\n    }\n  }\n\n  setDevMode(isDevelopment) {\n    env.set(isDevelopment);\n  }\n\n  initKeyring(options) {\n    const keyring = createTestKeyring(options, true);\n\n    if (isBoolean(options.isDevelopment)) {\n      this.setDevMode(options.isDevelopment);\n    }\n\n    _classPrivateFieldLooseBase(this, _keyring)[_keyring] = keyring;\n    this._genesisHash = options.genesisHash && (isString(options.genesisHash) ? options.genesisHash.toString() : options.genesisHash.toHex());\n    this._store = options.store || this._store;\n    this.addAccountPairs();\n  }\n\n  addAccountPairs() {\n    this.keyring.getPairs().forEach(({\n      address,\n      meta\n    }) => {\n      this.accounts.add(this._store, address, {\n        address,\n        meta\n      });\n    });\n  }\n\n  addTimestamp(pair) {\n    if (!pair.meta.whenCreated) {\n      pair.setMeta({\n        whenCreated: Date.now()\n      });\n    }\n  }\n\n}","map":{"version":3,"sources":["/Users/bmacer/substrate-node-template/substrate-front-end-template/node_modules/@polkadot/ui-keyring/Base.mjs"],"names":["_classPrivateFieldLooseBase","_classPrivateFieldLooseKey","createTestKeyring","isBoolean","isString","accounts","addresses","contracts","env","BrowserStore","_accounts","_addresses","_contracts","_keyring","Base","constructor","Object","defineProperty","writable","value","_store","_genesisHash","decodeAddress","key","ignoreChecksum","ss58Format","keyring","encodeAddress","Error","genesisHash","getPair","address","getPairs","filter","pair","isDevelopment","meta","isTesting","isAvailable","_address","accountsValue","subject","getValue","addressesValue","contractsValue","isPassValid","password","length","setSS58Format","setDevMode","set","initKeyring","options","toString","toHex","store","addAccountPairs","forEach","add","addTimestamp","whenCreated","setMeta","Date","now"],"mappings":"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","sourcesContent":["import _classPrivateFieldLooseBase from \"@babel/runtime/helpers/esm/classPrivateFieldLooseBase\";\nimport _classPrivateFieldLooseKey from \"@babel/runtime/helpers/esm/classPrivateFieldLooseKey\";\n// Copyright 2017-2021 @polkadot/ui-keyring authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { createTestKeyring } from '@polkadot/keyring/testing';\nimport { isBoolean, isString } from '@polkadot/util';\nimport { accounts } from \"./observable/accounts.mjs\";\nimport { addresses } from \"./observable/addresses.mjs\";\nimport { contracts } from \"./observable/contracts.mjs\";\nimport { env } from \"./observable/env.mjs\";\nimport { BrowserStore } from \"./stores/Browser.mjs\"; // direct import (skip index with all)\n\nvar _accounts = _classPrivateFieldLooseKey(\"accounts\");\n\nvar _addresses = _classPrivateFieldLooseKey(\"addresses\");\n\nvar _contracts = _classPrivateFieldLooseKey(\"contracts\");\n\nvar _keyring = _classPrivateFieldLooseKey(\"keyring\");\n\nexport class Base {\n  constructor() {\n    Object.defineProperty(this, _accounts, {\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, _addresses, {\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, _contracts, {\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, _keyring, {\n      writable: true,\n      value: void 0\n    });\n    this._store = void 0;\n    this._genesisHash = void 0;\n\n    this.decodeAddress = (key, ignoreChecksum, ss58Format) => {\n      return this.keyring.decodeAddress(key, ignoreChecksum, ss58Format);\n    };\n\n    this.encodeAddress = (key, ss58Format) => {\n      return this.keyring.encodeAddress(key, ss58Format);\n    };\n\n    _classPrivateFieldLooseBase(this, _accounts)[_accounts] = accounts;\n    _classPrivateFieldLooseBase(this, _addresses)[_addresses] = addresses;\n    _classPrivateFieldLooseBase(this, _contracts)[_contracts] = contracts;\n    this._store = new BrowserStore();\n  }\n\n  get accounts() {\n    return _classPrivateFieldLooseBase(this, _accounts)[_accounts];\n  }\n\n  get addresses() {\n    return _classPrivateFieldLooseBase(this, _addresses)[_addresses];\n  }\n\n  get contracts() {\n    return _classPrivateFieldLooseBase(this, _contracts)[_contracts];\n  }\n\n  get keyring() {\n    if (_classPrivateFieldLooseBase(this, _keyring)[_keyring]) {\n      return _classPrivateFieldLooseBase(this, _keyring)[_keyring];\n    }\n\n    throw new Error('Keyring should be initialised via \\'loadAll\\' before use');\n  }\n\n  get genesisHash() {\n    return this._genesisHash;\n  }\n\n  getPair(address) {\n    return this.keyring.getPair(address);\n  }\n\n  getPairs() {\n    return this.keyring.getPairs().filter(pair => env.isDevelopment() || pair.meta.isTesting !== true);\n  }\n\n  isAvailable(_address) {\n    const accountsValue = this.accounts.subject.getValue();\n    const addressesValue = this.addresses.subject.getValue();\n    const contractsValue = this.contracts.subject.getValue();\n    const address = isString(_address) ? _address : this.encodeAddress(_address);\n    return !accountsValue[address] && !addressesValue[address] && !contractsValue[address];\n  }\n\n  isPassValid(password) {\n    return password.length > 0;\n  }\n\n  setSS58Format(ss58Format) {\n    if (_classPrivateFieldLooseBase(this, _keyring)[_keyring] && ss58Format) {\n      _classPrivateFieldLooseBase(this, _keyring)[_keyring].setSS58Format(ss58Format);\n    }\n  }\n\n  setDevMode(isDevelopment) {\n    env.set(isDevelopment);\n  }\n\n  initKeyring(options) {\n    const keyring = createTestKeyring(options, true);\n\n    if (isBoolean(options.isDevelopment)) {\n      this.setDevMode(options.isDevelopment);\n    }\n\n    _classPrivateFieldLooseBase(this, _keyring)[_keyring] = keyring;\n    this._genesisHash = options.genesisHash && (isString(options.genesisHash) ? options.genesisHash.toString() : options.genesisHash.toHex());\n    this._store = options.store || this._store;\n    this.addAccountPairs();\n  }\n\n  addAccountPairs() {\n    this.keyring.getPairs().forEach(({\n      address,\n      meta\n    }) => {\n      this.accounts.add(this._store, address, {\n        address,\n        meta\n      });\n    });\n  }\n\n  addTimestamp(pair) {\n    if (!pair.meta.whenCreated) {\n      pair.setMeta({\n        whenCreated: Date.now()\n      });\n    }\n  }\n\n}"]},"metadata":{},"sourceType":"module"}