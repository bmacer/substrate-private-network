{"ast":null,"code":"// Copyright 2017-2021 @polkadot/api-derive authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { combineLatest, of } from '@polkadot/x-rxjs';\nimport { map, switchMap } from '@polkadot/x-rxjs/operators';\nimport { memo } from \"../util/index.mjs\";\n/**\n * @description Get the candidate info for a society\n */\n\nexport function candidates(instanceId, api) {\n  return memo(instanceId, () => api.query.society.candidates().pipe(switchMap(candidates => combineLatest([of(candidates), api.query.society.suspendedCandidates.multi(candidates.map(({\n    who\n  }) => who))])), map(([candidates, suspended]) => candidates.map(({\n    kind,\n    value,\n    who\n  }, index) => ({\n    accountId: who,\n    isSuspended: suspended[index].isSome,\n    kind,\n    value\n  })))));\n}","map":{"version":3,"sources":["/Users/bmacer/substrate-node-template/substrate-front-end-template/node_modules/@polkadot/api-derive/society/candidates.mjs"],"names":["combineLatest","of","map","switchMap","memo","candidates","instanceId","api","query","society","pipe","suspendedCandidates","multi","who","suspended","kind","value","index","accountId","isSuspended","isSome"],"mappings":"AAAA;AACA;AACA,SAASA,aAAT,EAAwBC,EAAxB,QAAkC,kBAAlC;AACA,SAASC,GAAT,EAAcC,SAAd,QAA+B,4BAA/B;AACA,SAASC,IAAT,QAAqB,mBAArB;AAEA;AACA;AACA;;AACA,OAAO,SAASC,UAAT,CAAoBC,UAApB,EAAgCC,GAAhC,EAAqC;AAC1C,SAAOH,IAAI,CAACE,UAAD,EAAa,MAAMC,GAAG,CAACC,KAAJ,CAAUC,OAAV,CAAkBJ,UAAlB,GAA+BK,IAA/B,CAAoCP,SAAS,CAACE,UAAU,IAAIL,aAAa,CAAC,CAACC,EAAE,CAACI,UAAD,CAAH,EAAiBE,GAAG,CAACC,KAAJ,CAAUC,OAAV,CAAkBE,mBAAlB,CAAsCC,KAAtC,CAA4CP,UAAU,CAACH,GAAX,CAAe,CAAC;AACnLW,IAAAA;AADmL,GAAD,KAE9KA,GAF+J,CAA5C,CAAjB,CAAD,CAA5B,CAA7C,EAEdX,GAAG,CAAC,CAAC,CAACG,UAAD,EAAaS,SAAb,CAAD,KAA6BT,UAAU,CAACH,GAAX,CAAe,CAAC;AAC/Da,IAAAA,IAD+D;AAE/DC,IAAAA,KAF+D;AAG/DH,IAAAA;AAH+D,GAAD,EAI7DI,KAJ6D,MAIlD;AACZC,IAAAA,SAAS,EAAEL,GADC;AAEZM,IAAAA,WAAW,EAAEL,SAAS,CAACG,KAAD,CAAT,CAAiBG,MAFlB;AAGZL,IAAAA,IAHY;AAIZC,IAAAA;AAJY,GAJkD,CAAf,CAA9B,CAFW,CAAnB,CAAX;AAYD","sourcesContent":["// Copyright 2017-2021 @polkadot/api-derive authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { combineLatest, of } from '@polkadot/x-rxjs';\nimport { map, switchMap } from '@polkadot/x-rxjs/operators';\nimport { memo } from \"../util/index.mjs\";\n\n/**\n * @description Get the candidate info for a society\n */\nexport function candidates(instanceId, api) {\n  return memo(instanceId, () => api.query.society.candidates().pipe(switchMap(candidates => combineLatest([of(candidates), api.query.society.suspendedCandidates.multi(candidates.map(({\n    who\n  }) => who))])), map(([candidates, suspended]) => candidates.map(({\n    kind,\n    value,\n    who\n  }, index) => ({\n    accountId: who,\n    isSuspended: suspended[index].isSome,\n    kind,\n    value\n  })))));\n}"]},"metadata":{},"sourceType":"module"}