{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Ledger = exports.LEDGER_DEFAULT_INDEX = exports.LEDGER_DEFAULT_CHANGE = exports.LEDGER_DEFAULT_ACCOUNT = void 0;\n\nvar _classPrivateFieldLooseBase2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classPrivateFieldLooseBase\"));\n\nvar _classPrivateFieldLooseKey2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classPrivateFieldLooseKey\"));\n\nvar _ledgerPolkadot = require(\"@zondax/ledger-polkadot\");\n\nvar _hwLedgerTransports = require(\"@polkadot/hw-ledger-transports\");\n\nvar _util = require(\"@polkadot/util\"); // Copyright 2017-2021 @polkadot/hw-ledger authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\n\nconst LEDGER_DEFAULT_ACCOUNT = 0x80000000;\nexports.LEDGER_DEFAULT_ACCOUNT = LEDGER_DEFAULT_ACCOUNT;\nconst LEDGER_DEFAULT_CHANGE = 0x80000000;\nexports.LEDGER_DEFAULT_CHANGE = LEDGER_DEFAULT_CHANGE;\nconst LEDGER_DEFAULT_INDEX = 0x80000000;\nexports.LEDGER_DEFAULT_INDEX = LEDGER_DEFAULT_INDEX;\nconst SUCCESS_CODE = 0x9000; // These match up with the network keys in the @polkadot/networks package\n// (which is turn aligns with the substrate/ss58-registry.json as the single\n// source of truth)\n\nconst APPS = {\n  dock: _ledgerPolkadot.newDockApp,\n  kusama: _ledgerPolkadot.newKusamaApp,\n  polkadot: _ledgerPolkadot.newPolkadotApp,\n  polymesh: _ledgerPolkadot.newPolymeshApp\n};\n\nvar _app = (0, _classPrivateFieldLooseKey2.default)(\"app\");\n\nvar _chain = (0, _classPrivateFieldLooseKey2.default)(\"chain\");\n\nvar _transport = (0, _classPrivateFieldLooseKey2.default)(\"transport\");\n\nvar _getApp = (0, _classPrivateFieldLooseKey2.default)(\"getApp\");\n\nvar _withApp = (0, _classPrivateFieldLooseKey2.default)(\"withApp\");\n\nvar _wrapError = (0, _classPrivateFieldLooseKey2.default)(\"wrapError\"); // A very basic wrapper for a ledger app -\n//  - it connects automatically, creating an app as required\n//  - Promises return errors (instead of wrapper errors)\n\n\nclass Ledger {\n  constructor(_transport2, chain) {\n    Object.defineProperty(this, _app, {\n      writable: true,\n      value: null\n    });\n    Object.defineProperty(this, _chain, {\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, _transport, {\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, _getApp, {\n      writable: true,\n      value: async () => {\n        if (!(0, _classPrivateFieldLooseBase2.default)(this, _app)[_app]) {\n          const def = _hwLedgerTransports.transports.find(({\n            type\n          }) => type === (0, _classPrivateFieldLooseBase2.default)(this, _transport)[_transport]);\n\n          (0, _util.assert)(def, `Unable to find a transport for ${(0, _classPrivateFieldLooseBase2.default)(this, _transport)[_transport]}`);\n          const transport = await def.create();\n          (0, _classPrivateFieldLooseBase2.default)(this, _app)[_app] = APPS[(0, _classPrivateFieldLooseBase2.default)(this, _chain)[_chain]](transport);\n        }\n\n        return (0, _classPrivateFieldLooseBase2.default)(this, _app)[_app];\n      }\n    });\n    Object.defineProperty(this, _withApp, {\n      writable: true,\n      value: async fn => {\n        try {\n          const app = await (0, _classPrivateFieldLooseBase2.default)(this, _getApp)[_getApp]();\n          return await fn(app);\n        } catch (error) {\n          (0, _classPrivateFieldLooseBase2.default)(this, _app)[_app] = null;\n          throw error;\n        }\n      }\n    });\n    Object.defineProperty(this, _wrapError, {\n      writable: true,\n      value: async promise => {\n        const result = await promise;\n        (0, _util.assert)(result.return_code === SUCCESS_CODE, result.error_message);\n        return result;\n      }\n    }); // u2f is deprecated\n\n    (0, _util.assert)(['hid', 'webusb'].includes(_transport2), `Unsupported transport ${_transport2}`);\n    (0, _util.assert)(Object.keys(APPS).includes(chain), `Unsupported chain ${chain}`);\n    (0, _classPrivateFieldLooseBase2.default)(this, _chain)[_chain] = chain;\n    (0, _classPrivateFieldLooseBase2.default)(this, _transport)[_transport] = _transport2;\n  }\n\n  async getAddress(confirm = false, accountOffset = 0, addressOffset = 0, {\n    account = LEDGER_DEFAULT_ACCOUNT,\n    addressIndex = LEDGER_DEFAULT_INDEX,\n    change = LEDGER_DEFAULT_CHANGE\n  } = {}) {\n    return (0, _classPrivateFieldLooseBase2.default)(this, _withApp)[_withApp](async app => {\n      const {\n        address,\n        pubKey\n      } = await (0, _classPrivateFieldLooseBase2.default)(this, _wrapError)[_wrapError](app.getAddress(account + accountOffset, change, addressIndex + addressOffset, confirm));\n      return {\n        address,\n        publicKey: `0x${pubKey}`\n      };\n    });\n  }\n\n  async getVersion() {\n    return (0, _classPrivateFieldLooseBase2.default)(this, _withApp)[_withApp](async app => {\n      const {\n        device_locked: isLocked,\n        major,\n        minor,\n        patch,\n        test_mode: isTestMode\n      } = await (0, _classPrivateFieldLooseBase2.default)(this, _wrapError)[_wrapError](app.getVersion());\n      return {\n        isLocked,\n        isTestMode,\n        version: [major, minor, patch]\n      };\n    });\n  }\n\n  async sign(message, accountOffset = 0, addressOffset = 0, {\n    account = LEDGER_DEFAULT_ACCOUNT,\n    addressIndex = LEDGER_DEFAULT_INDEX,\n    change = LEDGER_DEFAULT_CHANGE\n  } = {}) {\n    return (0, _classPrivateFieldLooseBase2.default)(this, _withApp)[_withApp](async app => {\n      const buffer = (0, _util.u8aToBuffer)(message);\n      const {\n        signature\n      } = await (0, _classPrivateFieldLooseBase2.default)(this, _wrapError)[_wrapError](app.sign(account + accountOffset, change, addressIndex + addressOffset, buffer));\n      return {\n        signature: (0, _util.u8aToHex)((0, _util.bufferToU8a)(signature))\n      };\n    });\n  }\n\n}\n\nexports.Ledger = Ledger;","map":{"version":3,"sources":["/Users/bmacer/substrate-node-template/substrate-front-end-template/node_modules/@polkadot/hw-ledger/index.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","Ledger","LEDGER_DEFAULT_INDEX","LEDGER_DEFAULT_CHANGE","LEDGER_DEFAULT_ACCOUNT","_classPrivateFieldLooseBase2","_classPrivateFieldLooseKey2","_ledgerPolkadot","_hwLedgerTransports","_util","SUCCESS_CODE","APPS","dock","newDockApp","kusama","newKusamaApp","polkadot","newPolkadotApp","polymesh","newPolymeshApp","_app","default","_chain","_transport","_getApp","_withApp","_wrapError","constructor","_transport2","chain","writable","def","transports","find","type","assert","transport","create","fn","app","error","promise","result","return_code","error_message","includes","keys","getAddress","confirm","accountOffset","addressOffset","account","addressIndex","change","address","pubKey","publicKey","getVersion","device_locked","isLocked","major","minor","patch","test_mode","isTestMode","version","sign","message","buffer","u8aToBuffer","signature","u8aToHex","bufferToU8a"],"mappings":"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","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Ledger = exports.LEDGER_DEFAULT_INDEX = exports.LEDGER_DEFAULT_CHANGE = exports.LEDGER_DEFAULT_ACCOUNT = void 0;\n\nvar _classPrivateFieldLooseBase2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classPrivateFieldLooseBase\"));\n\nvar _classPrivateFieldLooseKey2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classPrivateFieldLooseKey\"));\n\nvar _ledgerPolkadot = require(\"@zondax/ledger-polkadot\");\n\nvar _hwLedgerTransports = require(\"@polkadot/hw-ledger-transports\");\n\nvar _util = require(\"@polkadot/util\");\n\n// Copyright 2017-2021 @polkadot/hw-ledger authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nconst LEDGER_DEFAULT_ACCOUNT = 0x80000000;\nexports.LEDGER_DEFAULT_ACCOUNT = LEDGER_DEFAULT_ACCOUNT;\nconst LEDGER_DEFAULT_CHANGE = 0x80000000;\nexports.LEDGER_DEFAULT_CHANGE = LEDGER_DEFAULT_CHANGE;\nconst LEDGER_DEFAULT_INDEX = 0x80000000;\nexports.LEDGER_DEFAULT_INDEX = LEDGER_DEFAULT_INDEX;\nconst SUCCESS_CODE = 0x9000; // These match up with the network keys in the @polkadot/networks package\n// (which is turn aligns with the substrate/ss58-registry.json as the single\n// source of truth)\n\nconst APPS = {\n  dock: _ledgerPolkadot.newDockApp,\n  kusama: _ledgerPolkadot.newKusamaApp,\n  polkadot: _ledgerPolkadot.newPolkadotApp,\n  polymesh: _ledgerPolkadot.newPolymeshApp\n};\n\nvar _app = (0, _classPrivateFieldLooseKey2.default)(\"app\");\n\nvar _chain = (0, _classPrivateFieldLooseKey2.default)(\"chain\");\n\nvar _transport = (0, _classPrivateFieldLooseKey2.default)(\"transport\");\n\nvar _getApp = (0, _classPrivateFieldLooseKey2.default)(\"getApp\");\n\nvar _withApp = (0, _classPrivateFieldLooseKey2.default)(\"withApp\");\n\nvar _wrapError = (0, _classPrivateFieldLooseKey2.default)(\"wrapError\");\n\n// A very basic wrapper for a ledger app -\n//  - it connects automatically, creating an app as required\n//  - Promises return errors (instead of wrapper errors)\nclass Ledger {\n  constructor(_transport2, chain) {\n    Object.defineProperty(this, _app, {\n      writable: true,\n      value: null\n    });\n    Object.defineProperty(this, _chain, {\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, _transport, {\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, _getApp, {\n      writable: true,\n      value: async () => {\n        if (!(0, _classPrivateFieldLooseBase2.default)(this, _app)[_app]) {\n          const def = _hwLedgerTransports.transports.find(({\n            type\n          }) => type === (0, _classPrivateFieldLooseBase2.default)(this, _transport)[_transport]);\n\n          (0, _util.assert)(def, `Unable to find a transport for ${(0, _classPrivateFieldLooseBase2.default)(this, _transport)[_transport]}`);\n          const transport = await def.create();\n          (0, _classPrivateFieldLooseBase2.default)(this, _app)[_app] = APPS[(0, _classPrivateFieldLooseBase2.default)(this, _chain)[_chain]](transport);\n        }\n\n        return (0, _classPrivateFieldLooseBase2.default)(this, _app)[_app];\n      }\n    });\n    Object.defineProperty(this, _withApp, {\n      writable: true,\n      value: async fn => {\n        try {\n          const app = await (0, _classPrivateFieldLooseBase2.default)(this, _getApp)[_getApp]();\n          return await fn(app);\n        } catch (error) {\n          (0, _classPrivateFieldLooseBase2.default)(this, _app)[_app] = null;\n          throw error;\n        }\n      }\n    });\n    Object.defineProperty(this, _wrapError, {\n      writable: true,\n      value: async promise => {\n        const result = await promise;\n        (0, _util.assert)(result.return_code === SUCCESS_CODE, result.error_message);\n        return result;\n      }\n    });\n    // u2f is deprecated\n    (0, _util.assert)(['hid', 'webusb'].includes(_transport2), `Unsupported transport ${_transport2}`);\n    (0, _util.assert)(Object.keys(APPS).includes(chain), `Unsupported chain ${chain}`);\n    (0, _classPrivateFieldLooseBase2.default)(this, _chain)[_chain] = chain;\n    (0, _classPrivateFieldLooseBase2.default)(this, _transport)[_transport] = _transport2;\n  }\n\n  async getAddress(confirm = false, accountOffset = 0, addressOffset = 0, {\n    account = LEDGER_DEFAULT_ACCOUNT,\n    addressIndex = LEDGER_DEFAULT_INDEX,\n    change = LEDGER_DEFAULT_CHANGE\n  } = {}) {\n    return (0, _classPrivateFieldLooseBase2.default)(this, _withApp)[_withApp](async app => {\n      const {\n        address,\n        pubKey\n      } = await (0, _classPrivateFieldLooseBase2.default)(this, _wrapError)[_wrapError](app.getAddress(account + accountOffset, change, addressIndex + addressOffset, confirm));\n      return {\n        address,\n        publicKey: `0x${pubKey}`\n      };\n    });\n  }\n\n  async getVersion() {\n    return (0, _classPrivateFieldLooseBase2.default)(this, _withApp)[_withApp](async app => {\n      const {\n        device_locked: isLocked,\n        major,\n        minor,\n        patch,\n        test_mode: isTestMode\n      } = await (0, _classPrivateFieldLooseBase2.default)(this, _wrapError)[_wrapError](app.getVersion());\n      return {\n        isLocked,\n        isTestMode,\n        version: [major, minor, patch]\n      };\n    });\n  }\n\n  async sign(message, accountOffset = 0, addressOffset = 0, {\n    account = LEDGER_DEFAULT_ACCOUNT,\n    addressIndex = LEDGER_DEFAULT_INDEX,\n    change = LEDGER_DEFAULT_CHANGE\n  } = {}) {\n    return (0, _classPrivateFieldLooseBase2.default)(this, _withApp)[_withApp](async app => {\n      const buffer = (0, _util.u8aToBuffer)(message);\n      const {\n        signature\n      } = await (0, _classPrivateFieldLooseBase2.default)(this, _wrapError)[_wrapError](app.sign(account + accountOffset, change, addressIndex + addressOffset, buffer));\n      return {\n        signature: (0, _util.u8aToHex)((0, _util.bufferToU8a)(signature))\n      };\n    });\n  }\n\n}\n\nexports.Ledger = Ledger;"]},"metadata":{},"sourceType":"script"}