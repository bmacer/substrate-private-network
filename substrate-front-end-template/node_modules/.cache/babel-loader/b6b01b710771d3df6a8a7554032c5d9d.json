{"ast":null,"code":"// Copyright 2017-2021 @polkadot/metadata authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { assert } from '@polkadot/util';\nimport { Metadata } from \"../Metadata.mjs\";\nimport { decorateConstants } from \"./constants/index.mjs\";\nimport { decorateErrors } from \"./errors/index.mjs\";\nimport { decorateEvents } from \"./events/index.mjs\";\nimport { decorateExtrinsics } from \"./extrinsics/index.mjs\";\nimport { decorateStorage } from \"./storage/index.mjs\";\n/**\n * Expands the metadata by decoration into consts, query and tx sections\n */\n\nexport function expandMetadata(registry, metadata) {\n  assert(metadata instanceof Metadata, 'You need to pass a valid Metadata instance to Decorated');\n  const latest = metadata.asLatest;\n  return {\n    consts: decorateConstants(registry, latest),\n    errors: decorateErrors(registry, latest, metadata.version),\n    events: decorateEvents(registry, latest, metadata.version),\n    query: decorateStorage(registry, latest, metadata.version),\n    tx: decorateExtrinsics(registry, latest, metadata.version)\n  };\n}\nexport { decorateConstants, decorateExtrinsics, decorateStorage };","map":{"version":3,"sources":["/Users/bmacer/substrate-node-template/substrate-front-end-template/node_modules/@polkadot/metadata/decorate/index.mjs"],"names":["assert","Metadata","decorateConstants","decorateErrors","decorateEvents","decorateExtrinsics","decorateStorage","expandMetadata","registry","metadata","latest","asLatest","consts","errors","version","events","query","tx"],"mappings":"AAAA;AACA;AACA,SAASA,MAAT,QAAuB,gBAAvB;AACA,SAASC,QAAT,QAAyB,iBAAzB;AACA,SAASC,iBAAT,QAAkC,uBAAlC;AACA,SAASC,cAAT,QAA+B,oBAA/B;AACA,SAASC,cAAT,QAA+B,oBAA/B;AACA,SAASC,kBAAT,QAAmC,wBAAnC;AACA,SAASC,eAAT,QAAgC,qBAAhC;AACA;AACA;AACA;;AAEA,OAAO,SAASC,cAAT,CAAwBC,QAAxB,EAAkCC,QAAlC,EAA4C;AACjDT,EAAAA,MAAM,CAACS,QAAQ,YAAYR,QAArB,EAA+B,yDAA/B,CAAN;AACA,QAAMS,MAAM,GAAGD,QAAQ,CAACE,QAAxB;AACA,SAAO;AACLC,IAAAA,MAAM,EAAEV,iBAAiB,CAACM,QAAD,EAAWE,MAAX,CADpB;AAELG,IAAAA,MAAM,EAAEV,cAAc,CAACK,QAAD,EAAWE,MAAX,EAAmBD,QAAQ,CAACK,OAA5B,CAFjB;AAGLC,IAAAA,MAAM,EAAEX,cAAc,CAACI,QAAD,EAAWE,MAAX,EAAmBD,QAAQ,CAACK,OAA5B,CAHjB;AAILE,IAAAA,KAAK,EAAEV,eAAe,CAACE,QAAD,EAAWE,MAAX,EAAmBD,QAAQ,CAACK,OAA5B,CAJjB;AAKLG,IAAAA,EAAE,EAAEZ,kBAAkB,CAACG,QAAD,EAAWE,MAAX,EAAmBD,QAAQ,CAACK,OAA5B;AALjB,GAAP;AAOD;AACD,SAASZ,iBAAT,EAA4BG,kBAA5B,EAAgDC,eAAhD","sourcesContent":["// Copyright 2017-2021 @polkadot/metadata authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { assert } from '@polkadot/util';\nimport { Metadata } from \"../Metadata.mjs\";\nimport { decorateConstants } from \"./constants/index.mjs\";\nimport { decorateErrors } from \"./errors/index.mjs\";\nimport { decorateEvents } from \"./events/index.mjs\";\nimport { decorateExtrinsics } from \"./extrinsics/index.mjs\";\nimport { decorateStorage } from \"./storage/index.mjs\";\n/**\n * Expands the metadata by decoration into consts, query and tx sections\n */\n\nexport function expandMetadata(registry, metadata) {\n  assert(metadata instanceof Metadata, 'You need to pass a valid Metadata instance to Decorated');\n  const latest = metadata.asLatest;\n  return {\n    consts: decorateConstants(registry, latest),\n    errors: decorateErrors(registry, latest, metadata.version),\n    events: decorateEvents(registry, latest, metadata.version),\n    query: decorateStorage(registry, latest, metadata.version),\n    tx: decorateExtrinsics(registry, latest, metadata.version)\n  };\n}\nexport { decorateConstants, decorateExtrinsics, decorateStorage };"]},"metadata":{},"sourceType":"module"}