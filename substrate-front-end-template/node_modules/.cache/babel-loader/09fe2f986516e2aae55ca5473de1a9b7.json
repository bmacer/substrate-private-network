{"ast":null,"code":"var _jsxFileName = \"/Users/bmacer/substrate-node-template/substrate-front-end-template/src/TemplateModule.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Form, Input, Grid, Card, Statistic } from 'semantic-ui-react';\nimport { useSubstrate } from './substrate-lib';\nimport { TxButton } from './substrate-lib/components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Main(props) {\n  _s();\n\n  const {\n    api\n  } = useSubstrate();\n  const {\n    accountPair\n  } = props; // The transaction submission status\n\n  const [status, setStatus] = useState(''); // The currently stored value\n\n  const [currentValue, setCurrentValue] = useState(0);\n  const [formValue, setFormValue] = useState(0);\n  useEffect(() => {\n    let unsubscribe;\n    api.query.templateModule.something(newValue => {\n      // The storage value is an Option<u32>\n      // So we have to check whether it is None first\n      // There is also unwrapOr\n      if (newValue.isNone) {\n        setCurrentValue('<None>');\n      } else {\n        setCurrentValue(newValue.unwrap().toNumber());\n      }\n    }).then(unsub => {\n      unsubscribe = unsub;\n    }).catch(console.error);\n    return () => unsubscribe && unsubscribe();\n  }, [api.query.templateModule]);\n  return /*#__PURE__*/_jsxDEV(Grid.Column, {\n    width: 8,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Template Module\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      centered: true,\n      children: /*#__PURE__*/_jsxDEV(Card.Content, {\n        textAlign: \"center\",\n        children: /*#__PURE__*/_jsxDEV(Statistic, {\n          label: \"Current Value\",\n          value: currentValue\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      children: [/*#__PURE__*/_jsxDEV(Form.Field, {\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          label: \"New Value\",\n          state: \"newValue\",\n          type: \"number\",\n          onChange: (_, {\n            value\n          }) => setFormValue(value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n        style: {\n          textAlign: 'center'\n        },\n        children: /*#__PURE__*/_jsxDEV(TxButton, {\n          accountPair: accountPair,\n          label: \"Store Something\",\n          type: \"SIGNED-TX\",\n          setStatus: setStatus,\n          attrs: {\n            palletRpc: 'templateModule',\n            callable: 'doSomething',\n            inputParams: [formValue],\n            paramFields: [true]\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          overflowWrap: 'break-word'\n        },\n        children: status\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Main, \"UUNgov/tyZUUp/wi/Pb6FuivSbI=\", false, function () {\n  return [useSubstrate];\n});\n\n_c = Main;\nexport default function TemplateModule(props) {\n  _s2();\n\n  const {\n    api\n  } = useSubstrate();\n  return api.query.templateModule && api.query.templateModule.something ? /*#__PURE__*/_jsxDEV(Main, { ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 7\n  }, this) : null;\n}\n\n_s2(TemplateModule, \"a5IVjGvlzdb5yuE5zCYn+JGZcoo=\", false, function () {\n  return [useSubstrate];\n});\n\n_c2 = TemplateModule;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Main\");\n$RefreshReg$(_c2, \"TemplateModule\");","map":{"version":3,"sources":["/Users/bmacer/substrate-node-template/substrate-front-end-template/src/TemplateModule.js"],"names":["React","useEffect","useState","Form","Input","Grid","Card","Statistic","useSubstrate","TxButton","Main","props","api","accountPair","status","setStatus","currentValue","setCurrentValue","formValue","setFormValue","unsubscribe","query","templateModule","something","newValue","isNone","unwrap","toNumber","then","unsub","catch","console","error","_","value","textAlign","palletRpc","callable","inputParams","paramFields","overflowWrap","TemplateModule"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Form, Input, Grid, Card, Statistic } from 'semantic-ui-react';\n\nimport { useSubstrate } from './substrate-lib';\nimport { TxButton } from './substrate-lib/components';\n\nfunction Main (props) {\n  const { api } = useSubstrate();\n  const { accountPair } = props;\n\n  // The transaction submission status\n  const [status, setStatus] = useState('');\n\n  // The currently stored value\n  const [currentValue, setCurrentValue] = useState(0);\n  const [formValue, setFormValue] = useState(0);\n\n  useEffect(() => {\n    let unsubscribe;\n    api.query.templateModule.something(newValue => {\n      // The storage value is an Option<u32>\n      // So we have to check whether it is None first\n      // There is also unwrapOr\n      if (newValue.isNone) {\n        setCurrentValue('<None>');\n      } else {\n        setCurrentValue(newValue.unwrap().toNumber());\n      }\n    }).then(unsub => {\n      unsubscribe = unsub;\n    })\n      .catch(console.error);\n\n    return () => unsubscribe && unsubscribe();\n  }, [api.query.templateModule]);\n\n  return (\n    <Grid.Column width={8}>\n      <h1>Template Module</h1>\n      <Card centered>\n        <Card.Content textAlign='center'>\n          <Statistic\n            label='Current Value'\n            value={currentValue}\n          />\n        </Card.Content>\n      </Card>\n      <Form>\n        <Form.Field>\n          <Input\n            label='New Value'\n            state='newValue'\n            type='number'\n            onChange={(_, { value }) => setFormValue(value)}\n          />\n        </Form.Field>\n        <Form.Field style={{ textAlign: 'center' }}>\n          <TxButton\n            accountPair={accountPair}\n            label='Store Something'\n            type='SIGNED-TX'\n            setStatus={setStatus}\n            attrs={{\n              palletRpc: 'templateModule',\n              callable: 'doSomething',\n              inputParams: [formValue],\n              paramFields: [true]\n            }}\n          />\n        </Form.Field>\n        <div style={{ overflowWrap: 'break-word' }}>{status}</div>\n      </Form>\n    </Grid.Column>\n  );\n}\n\nexport default function TemplateModule (props) {\n  const { api } = useSubstrate();\n  return api.query.templateModule && api.query.templateModule.something\n    ? <Main {...props} />\n    : null;\n}\n"]},"metadata":{},"sourceType":"module"}