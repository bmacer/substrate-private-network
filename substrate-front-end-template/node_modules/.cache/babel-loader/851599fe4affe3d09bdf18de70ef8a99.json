{"ast":null,"code":"// Copyright 2017-2021 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { isString } from \"./string.mjs\";\nconst HEX_REGEX = /^0x[a-fA-F0-9]+$/;\n/**\n * @name isHex\n * @summary Tests for a hex string.\n * @description\n * Checks to see if the input value is a `0x` prefixed hex string. Optionally (`bitLength` !== -1) checks to see if the bitLength is correct.\n * @example\n * <BR>\n *\n * ```javascript\n * import { isHex } from '@polkadot/util';\n *\n * isHex('0x1234'); // => true\n * isHex('0x1234', 8); // => false\n * ```\n */\n// eslint-disable-next-line @typescript-eslint/ban-types\n\nexport function isHex(value, bitLength = -1, ignoreLength = false) {\n  const isValidHex = value === '0x' || isString(value) && HEX_REGEX.test(value.toString());\n\n  if (isValidHex && bitLength !== -1) {\n    return value.length === 2 + Math.ceil(bitLength / 4);\n  }\n\n  return isValidHex && (ignoreLength || value.length % 2 === 0);\n}","map":{"version":3,"sources":["/Users/bmacer/substrate-node-template/substrate-front-end-template/node_modules/@polkadot/util/is/hex.mjs"],"names":["isString","HEX_REGEX","isHex","value","bitLength","ignoreLength","isValidHex","test","toString","length","Math","ceil"],"mappings":"AAAA;AACA;AACA,SAASA,QAAT,QAAyB,cAAzB;AACA,MAAMC,SAAS,GAAG,kBAAlB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,SAASC,KAAT,CAAeC,KAAf,EAAsBC,SAAS,GAAG,CAAC,CAAnC,EAAsCC,YAAY,GAAG,KAArD,EAA4D;AACjE,QAAMC,UAAU,GAAGH,KAAK,KAAK,IAAV,IAAkBH,QAAQ,CAACG,KAAD,CAAR,IAAmBF,SAAS,CAACM,IAAV,CAAeJ,KAAK,CAACK,QAAN,EAAf,CAAxD;;AAEA,MAAIF,UAAU,IAAIF,SAAS,KAAK,CAAC,CAAjC,EAAoC;AAClC,WAAOD,KAAK,CAACM,MAAN,KAAiB,IAAIC,IAAI,CAACC,IAAL,CAAUP,SAAS,GAAG,CAAtB,CAA5B;AACD;;AAED,SAAOE,UAAU,KAAKD,YAAY,IAAIF,KAAK,CAACM,MAAN,GAAe,CAAf,KAAqB,CAA1C,CAAjB;AACD","sourcesContent":["// Copyright 2017-2021 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { isString } from \"./string.mjs\";\nconst HEX_REGEX = /^0x[a-fA-F0-9]+$/;\n/**\n * @name isHex\n * @summary Tests for a hex string.\n * @description\n * Checks to see if the input value is a `0x` prefixed hex string. Optionally (`bitLength` !== -1) checks to see if the bitLength is correct.\n * @example\n * <BR>\n *\n * ```javascript\n * import { isHex } from '@polkadot/util';\n *\n * isHex('0x1234'); // => true\n * isHex('0x1234', 8); // => false\n * ```\n */\n// eslint-disable-next-line @typescript-eslint/ban-types\n\nexport function isHex(value, bitLength = -1, ignoreLength = false) {\n  const isValidHex = value === '0x' || isString(value) && HEX_REGEX.test(value.toString());\n\n  if (isValidHex && bitLength !== -1) {\n    return value.length === 2 + Math.ceil(bitLength / 4);\n  }\n\n  return isValidHex && (ignoreLength || value.length % 2 === 0);\n}"]},"metadata":{},"sourceType":"module"}