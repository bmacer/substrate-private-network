{"ast":null,"code":"// Copyright 2017-2021 @polkadot/metadata authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { createFunction } from \"./createFunction.mjs\"; // Small helper function to factorize code on this page.\n\n/** @internal */\n\nfunction createRuntimeFunction(method, key, {\n  documentation,\n  type\n}) {\n  return (registry, metaVersion) => createFunction(registry, {\n    meta: {\n      documentation: registry.createType('Vec<Text>', [documentation]),\n      modifier: registry.createType('StorageEntryModifierLatest', 1),\n      // required\n      toJSON: () => key,\n      type: registry.createType('StorageEntryTypeLatest', type, 0)\n    },\n    method,\n    prefix: 'Substrate',\n    section: 'substrate'\n  }, {\n    key,\n    metaVersion,\n    skipHashing: true\n  });\n}\n\nexport const code = createRuntimeFunction('code', ':code', {\n  documentation: 'Wasm code of the runtime.',\n  type: 'Bytes'\n});\nexport const heapPages = createRuntimeFunction('heapPages', ':heappages', {\n  documentation: 'Number of wasm linear memory pages required for execution of the runtime.',\n  type: 'u64'\n});\nexport const extrinsicIndex = createRuntimeFunction('extrinsicIndex', ':extrinsic_index', {\n  documentation: 'Current extrinsic index (u32) is stored under this key.',\n  type: 'u32'\n});\nexport const changesTrieConfig = createRuntimeFunction('changesTrieConfig', ':changes_trie', {\n  documentation: 'Changes trie configuration is stored under this key.',\n  type: 'u32'\n});\nexport const childStorageKeyPrefix = createRuntimeFunction('childStorageKeyPrefix', ':child_storage:', {\n  documentation: 'Prefix of child storage keys.',\n  type: 'u32'\n});","map":{"version":3,"sources":["/Users/bmacer/substrate-node-template/substrate-front-end-template/node_modules/@polkadot/metadata/decorate/storage/substrate.mjs"],"names":["createFunction","createRuntimeFunction","method","key","documentation","type","registry","metaVersion","meta","createType","modifier","toJSON","prefix","section","skipHashing","code","heapPages","extrinsicIndex","changesTrieConfig","childStorageKeyPrefix"],"mappings":"AAAA;AACA;AACA,SAASA,cAAT,QAA+B,sBAA/B,C,CAEA;;AAEA;;AACA,SAASC,qBAAT,CAA+BC,MAA/B,EAAuCC,GAAvC,EAA4C;AAC1CC,EAAAA,aAD0C;AAE1CC,EAAAA;AAF0C,CAA5C,EAGG;AACD,SAAO,CAACC,QAAD,EAAWC,WAAX,KAA2BP,cAAc,CAACM,QAAD,EAAW;AACzDE,IAAAA,IAAI,EAAE;AACJJ,MAAAA,aAAa,EAAEE,QAAQ,CAACG,UAAT,CAAoB,WAApB,EAAiC,CAACL,aAAD,CAAjC,CADX;AAEJM,MAAAA,QAAQ,EAAEJ,QAAQ,CAACG,UAAT,CAAoB,4BAApB,EAAkD,CAAlD,CAFN;AAGJ;AACAE,MAAAA,MAAM,EAAE,MAAMR,GAJV;AAKJE,MAAAA,IAAI,EAAEC,QAAQ,CAACG,UAAT,CAAoB,wBAApB,EAA8CJ,IAA9C,EAAoD,CAApD;AALF,KADmD;AAQzDH,IAAAA,MARyD;AASzDU,IAAAA,MAAM,EAAE,WATiD;AAUzDC,IAAAA,OAAO,EAAE;AAVgD,GAAX,EAW7C;AACDV,IAAAA,GADC;AAEDI,IAAAA,WAFC;AAGDO,IAAAA,WAAW,EAAE;AAHZ,GAX6C,CAAhD;AAgBD;;AAED,OAAO,MAAMC,IAAI,GAAGd,qBAAqB,CAAC,MAAD,EAAS,OAAT,EAAkB;AACzDG,EAAAA,aAAa,EAAE,2BAD0C;AAEzDC,EAAAA,IAAI,EAAE;AAFmD,CAAlB,CAAlC;AAIP,OAAO,MAAMW,SAAS,GAAGf,qBAAqB,CAAC,WAAD,EAAc,YAAd,EAA4B;AACxEG,EAAAA,aAAa,EAAE,2EADyD;AAExEC,EAAAA,IAAI,EAAE;AAFkE,CAA5B,CAAvC;AAIP,OAAO,MAAMY,cAAc,GAAGhB,qBAAqB,CAAC,gBAAD,EAAmB,kBAAnB,EAAuC;AACxFG,EAAAA,aAAa,EAAE,yDADyE;AAExFC,EAAAA,IAAI,EAAE;AAFkF,CAAvC,CAA5C;AAIP,OAAO,MAAMa,iBAAiB,GAAGjB,qBAAqB,CAAC,mBAAD,EAAsB,eAAtB,EAAuC;AAC3FG,EAAAA,aAAa,EAAE,sDAD4E;AAE3FC,EAAAA,IAAI,EAAE;AAFqF,CAAvC,CAA/C;AAIP,OAAO,MAAMc,qBAAqB,GAAGlB,qBAAqB,CAAC,uBAAD,EAA0B,iBAA1B,EAA6C;AACrGG,EAAAA,aAAa,EAAE,+BADsF;AAErGC,EAAAA,IAAI,EAAE;AAF+F,CAA7C,CAAnD","sourcesContent":["// Copyright 2017-2021 @polkadot/metadata authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { createFunction } from \"./createFunction.mjs\";\n\n// Small helper function to factorize code on this page.\n\n/** @internal */\nfunction createRuntimeFunction(method, key, {\n  documentation,\n  type\n}) {\n  return (registry, metaVersion) => createFunction(registry, {\n    meta: {\n      documentation: registry.createType('Vec<Text>', [documentation]),\n      modifier: registry.createType('StorageEntryModifierLatest', 1),\n      // required\n      toJSON: () => key,\n      type: registry.createType('StorageEntryTypeLatest', type, 0)\n    },\n    method,\n    prefix: 'Substrate',\n    section: 'substrate'\n  }, {\n    key,\n    metaVersion,\n    skipHashing: true\n  });\n}\n\nexport const code = createRuntimeFunction('code', ':code', {\n  documentation: 'Wasm code of the runtime.',\n  type: 'Bytes'\n});\nexport const heapPages = createRuntimeFunction('heapPages', ':heappages', {\n  documentation: 'Number of wasm linear memory pages required for execution of the runtime.',\n  type: 'u64'\n});\nexport const extrinsicIndex = createRuntimeFunction('extrinsicIndex', ':extrinsic_index', {\n  documentation: 'Current extrinsic index (u32) is stored under this key.',\n  type: 'u32'\n});\nexport const changesTrieConfig = createRuntimeFunction('changesTrieConfig', ':changes_trie', {\n  documentation: 'Changes trie configuration is stored under this key.',\n  type: 'u32'\n});\nexport const childStorageKeyPrefix = createRuntimeFunction('childStorageKeyPrefix', ':child_storage:', {\n  documentation: 'Prefix of child storage keys.',\n  type: 'u32'\n});"]},"metadata":{},"sourceType":"module"}