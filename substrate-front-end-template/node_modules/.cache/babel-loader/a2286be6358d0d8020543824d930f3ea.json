{"ast":null,"code":"// Copyright 2017-2021 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// Type which says: if `K` is in the InterfaceTypes, then return InterfaceTypes[K], else fallback to T\nexport let TypeDefInfo;\n\n(function (TypeDefInfo) {\n  TypeDefInfo[TypeDefInfo[\"BTreeMap\"] = 0] = \"BTreeMap\";\n  TypeDefInfo[TypeDefInfo[\"BTreeSet\"] = 1] = \"BTreeSet\";\n  TypeDefInfo[TypeDefInfo[\"Compact\"] = 2] = \"Compact\";\n  TypeDefInfo[TypeDefInfo[\"Enum\"] = 3] = \"Enum\";\n  TypeDefInfo[TypeDefInfo[\"Linkage\"] = 4] = \"Linkage\";\n  TypeDefInfo[TypeDefInfo[\"Option\"] = 5] = \"Option\";\n  TypeDefInfo[TypeDefInfo[\"Plain\"] = 6] = \"Plain\";\n  TypeDefInfo[TypeDefInfo[\"Result\"] = 7] = \"Result\";\n  TypeDefInfo[TypeDefInfo[\"Set\"] = 8] = \"Set\";\n  TypeDefInfo[TypeDefInfo[\"Struct\"] = 9] = \"Struct\";\n  TypeDefInfo[TypeDefInfo[\"Tuple\"] = 10] = \"Tuple\";\n  TypeDefInfo[TypeDefInfo[\"Vec\"] = 11] = \"Vec\";\n  TypeDefInfo[TypeDefInfo[\"VecFixed\"] = 12] = \"VecFixed\";\n  TypeDefInfo[TypeDefInfo[\"HashMap\"] = 13] = \"HashMap\";\n  TypeDefInfo[TypeDefInfo[\"Int\"] = 14] = \"Int\";\n  TypeDefInfo[TypeDefInfo[\"UInt\"] = 15] = \"UInt\";\n  TypeDefInfo[TypeDefInfo[\"DoNotConstruct\"] = 16] = \"DoNotConstruct\";\n  TypeDefInfo[TypeDefInfo[\"Null\"] = 17] = \"Null\";\n})(TypeDefInfo || (TypeDefInfo = {}));","map":{"version":3,"sources":["/Users/bmacer/substrate-node-template/substrate-front-end-template/node_modules/@polkadot/types/create/types.mjs"],"names":["TypeDefInfo"],"mappings":"AAAA;AACA;AACA;AACA,OAAO,IAAIA,WAAJ;;AAEP,CAAC,UAAUA,WAAV,EAAuB;AACtBA,EAAAA,WAAW,CAACA,WAAW,CAAC,UAAD,CAAX,GAA0B,CAA3B,CAAX,GAA2C,UAA3C;AACAA,EAAAA,WAAW,CAACA,WAAW,CAAC,UAAD,CAAX,GAA0B,CAA3B,CAAX,GAA2C,UAA3C;AACAA,EAAAA,WAAW,CAACA,WAAW,CAAC,SAAD,CAAX,GAAyB,CAA1B,CAAX,GAA0C,SAA1C;AACAA,EAAAA,WAAW,CAACA,WAAW,CAAC,MAAD,CAAX,GAAsB,CAAvB,CAAX,GAAuC,MAAvC;AACAA,EAAAA,WAAW,CAACA,WAAW,CAAC,SAAD,CAAX,GAAyB,CAA1B,CAAX,GAA0C,SAA1C;AACAA,EAAAA,WAAW,CAACA,WAAW,CAAC,QAAD,CAAX,GAAwB,CAAzB,CAAX,GAAyC,QAAzC;AACAA,EAAAA,WAAW,CAACA,WAAW,CAAC,OAAD,CAAX,GAAuB,CAAxB,CAAX,GAAwC,OAAxC;AACAA,EAAAA,WAAW,CAACA,WAAW,CAAC,QAAD,CAAX,GAAwB,CAAzB,CAAX,GAAyC,QAAzC;AACAA,EAAAA,WAAW,CAACA,WAAW,CAAC,KAAD,CAAX,GAAqB,CAAtB,CAAX,GAAsC,KAAtC;AACAA,EAAAA,WAAW,CAACA,WAAW,CAAC,QAAD,CAAX,GAAwB,CAAzB,CAAX,GAAyC,QAAzC;AACAA,EAAAA,WAAW,CAACA,WAAW,CAAC,OAAD,CAAX,GAAuB,EAAxB,CAAX,GAAyC,OAAzC;AACAA,EAAAA,WAAW,CAACA,WAAW,CAAC,KAAD,CAAX,GAAqB,EAAtB,CAAX,GAAuC,KAAvC;AACAA,EAAAA,WAAW,CAACA,WAAW,CAAC,UAAD,CAAX,GAA0B,EAA3B,CAAX,GAA4C,UAA5C;AACAA,EAAAA,WAAW,CAACA,WAAW,CAAC,SAAD,CAAX,GAAyB,EAA1B,CAAX,GAA2C,SAA3C;AACAA,EAAAA,WAAW,CAACA,WAAW,CAAC,KAAD,CAAX,GAAqB,EAAtB,CAAX,GAAuC,KAAvC;AACAA,EAAAA,WAAW,CAACA,WAAW,CAAC,MAAD,CAAX,GAAsB,EAAvB,CAAX,GAAwC,MAAxC;AACAA,EAAAA,WAAW,CAACA,WAAW,CAAC,gBAAD,CAAX,GAAgC,EAAjC,CAAX,GAAkD,gBAAlD;AACAA,EAAAA,WAAW,CAACA,WAAW,CAAC,MAAD,CAAX,GAAsB,EAAvB,CAAX,GAAwC,MAAxC;AACD,CAnBD,EAmBGA,WAAW,KAAKA,WAAW,GAAG,EAAnB,CAnBd","sourcesContent":["// Copyright 2017-2021 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// Type which says: if `K` is in the InterfaceTypes, then return InterfaceTypes[K], else fallback to T\nexport let TypeDefInfo;\n\n(function (TypeDefInfo) {\n  TypeDefInfo[TypeDefInfo[\"BTreeMap\"] = 0] = \"BTreeMap\";\n  TypeDefInfo[TypeDefInfo[\"BTreeSet\"] = 1] = \"BTreeSet\";\n  TypeDefInfo[TypeDefInfo[\"Compact\"] = 2] = \"Compact\";\n  TypeDefInfo[TypeDefInfo[\"Enum\"] = 3] = \"Enum\";\n  TypeDefInfo[TypeDefInfo[\"Linkage\"] = 4] = \"Linkage\";\n  TypeDefInfo[TypeDefInfo[\"Option\"] = 5] = \"Option\";\n  TypeDefInfo[TypeDefInfo[\"Plain\"] = 6] = \"Plain\";\n  TypeDefInfo[TypeDefInfo[\"Result\"] = 7] = \"Result\";\n  TypeDefInfo[TypeDefInfo[\"Set\"] = 8] = \"Set\";\n  TypeDefInfo[TypeDefInfo[\"Struct\"] = 9] = \"Struct\";\n  TypeDefInfo[TypeDefInfo[\"Tuple\"] = 10] = \"Tuple\";\n  TypeDefInfo[TypeDefInfo[\"Vec\"] = 11] = \"Vec\";\n  TypeDefInfo[TypeDefInfo[\"VecFixed\"] = 12] = \"VecFixed\";\n  TypeDefInfo[TypeDefInfo[\"HashMap\"] = 13] = \"HashMap\";\n  TypeDefInfo[TypeDefInfo[\"Int\"] = 14] = \"Int\";\n  TypeDefInfo[TypeDefInfo[\"UInt\"] = 15] = \"UInt\";\n  TypeDefInfo[TypeDefInfo[\"DoNotConstruct\"] = 16] = \"DoNotConstruct\";\n  TypeDefInfo[TypeDefInfo[\"Null\"] = 17] = \"Null\";\n})(TypeDefInfo || (TypeDefInfo = {}));"]},"metadata":{},"sourceType":"module"}