{"ast":null,"code":"// Copyright 2017-2021 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// order important in structs... :)\n\n/* eslint-disable sort-keys */\nconst AllHashers = {\n  Blake2_128: null,\n  // eslint-disable-line camelcase\n  Blake2_256: null,\n  // eslint-disable-line camelcase\n  Blake2_128Concat: null,\n  // eslint-disable-line camelcase\n  Twox128: null,\n  Twox256: null,\n  Twox64Concat: null,\n  // new in v11\n  Identity: null\n};\nexport { AllHashers };\nexport default {\n  rpc: {},\n  types: {\n    // v9\n    DoubleMapTypeV9: {\n      hasher: 'StorageHasherV9',\n      key1: 'Type',\n      key2: 'Type',\n      value: 'Type',\n      key2Hasher: 'StorageHasherV9'\n    },\n    ErrorMetadataV9: {\n      name: 'Text',\n      documentation: 'Vec<Text>'\n    },\n    EventMetadataV9: {\n      name: 'Text',\n      args: 'Vec<Type>',\n      documentation: 'Vec<Text>'\n    },\n    FunctionArgumentMetadataV9: {\n      name: 'Text',\n      type: 'Type'\n    },\n    FunctionMetadataV9: {\n      name: 'Text',\n      args: 'Vec<FunctionArgumentMetadataV9>',\n      documentation: 'Vec<Text>'\n    },\n    MapTypeV9: {\n      hasher: 'StorageHasherV9',\n      key: 'Type',\n      value: 'Type',\n      linked: 'bool'\n    },\n    MetadataV9: {\n      modules: 'Vec<ModuleMetadataV9>'\n    },\n    ModuleConstantMetadataV9: {\n      name: 'Text',\n      type: 'Type',\n      value: 'Bytes',\n      documentation: 'Vec<Text>'\n    },\n    ModuleMetadataV9: {\n      name: 'Text',\n      storage: 'Option<StorageMetadataV9>',\n      calls: 'Option<Vec<FunctionMetadataV9>>',\n      events: 'Option<Vec<EventMetadataV9>>',\n      constants: 'Vec<ModuleConstantMetadataV9>',\n      errors: 'Vec<ErrorMetadataV9>'\n    },\n    StorageEntryMetadataV9: {\n      name: 'Text',\n      modifier: 'StorageEntryModifierV9',\n      type: 'StorageEntryTypeV9',\n      fallback: 'Bytes',\n      documentation: 'Vec<Text>'\n    },\n    StorageEntryModifierV9: {\n      _enum: ['Optional', 'Default', 'Required']\n    },\n    StorageEntryTypeV9: {\n      _enum: {\n        Plain: 'Type',\n        Map: 'MapTypeV9',\n        DoubleMap: 'DoubleMapTypeV9'\n      }\n    },\n    StorageHasherV9: {\n      _enum: {\n        Blake2_128: null,\n        // eslint-disable-line camelcase\n        Blake2_256: null,\n        // eslint-disable-line camelcase\n        Twox128: null,\n        Twox256: null,\n        Twox64Concat: null\n      }\n    },\n    StorageMetadataV9: {\n      prefix: 'Text',\n      items: 'Vec<StorageEntryMetadataV9>'\n    },\n    // v10\n    DoubleMapTypeV10: {\n      hasher: 'StorageHasherV10',\n      key1: 'Type',\n      key2: 'Type',\n      value: 'Type',\n      key2Hasher: 'StorageHasherV10'\n    },\n    ErrorMetadataV10: 'ErrorMetadataV9',\n    EventMetadataV10: 'EventMetadataV9',\n    FunctionArgumentMetadataV10: 'FunctionArgumentMetadataV9',\n    FunctionMetadataV10: 'FunctionMetadataV9',\n    MapTypeV10: {\n      hasher: 'StorageHasherV10',\n      key: 'Type',\n      value: 'Type',\n      linked: 'bool'\n    },\n    MetadataV10: {\n      modules: 'Vec<ModuleMetadataV10>'\n    },\n    ModuleConstantMetadataV10: 'ModuleConstantMetadataV9',\n    ModuleMetadataV10: {\n      name: 'Text',\n      storage: 'Option<StorageMetadataV10>',\n      calls: 'Option<Vec<FunctionMetadataV10>>',\n      events: 'Option<Vec<EventMetadataV10>>',\n      constants: 'Vec<ModuleConstantMetadataV10>',\n      errors: 'Vec<ErrorMetadataV10>'\n    },\n    StorageEntryModifierV10: 'StorageEntryModifierV9',\n    StorageEntryMetadataV10: {\n      name: 'Text',\n      modifier: 'StorageEntryModifierV10',\n      type: 'StorageEntryTypeV10',\n      fallback: 'Bytes',\n      documentation: 'Vec<Text>'\n    },\n    StorageEntryTypeV10: {\n      _enum: {\n        Plain: 'Type',\n        Map: 'MapTypeV10',\n        DoubleMap: 'DoubleMapTypeV10'\n      }\n    },\n    StorageMetadataV10: {\n      prefix: 'Text',\n      items: 'Vec<StorageEntryMetadataV10>'\n    },\n    StorageHasherV10: {\n      _enum: {\n        Blake2_128: null,\n        // eslint-disable-line camelcase\n        Blake2_256: null,\n        // eslint-disable-line camelcase\n        Blake2_128Concat: null,\n        // eslint-disable-line camelcase\n        Twox128: null,\n        Twox256: null,\n        Twox64Concat: null\n      }\n    },\n    // v11\n    DoubleMapTypeV11: {\n      hasher: 'StorageHasherV11',\n      key1: 'Type',\n      key2: 'Type',\n      value: 'Type',\n      key2Hasher: 'StorageHasherV11'\n    },\n    ErrorMetadataV11: 'ErrorMetadataV10',\n    EventMetadataV11: 'EventMetadataV10',\n    ExtrinsicMetadataV11: {\n      version: 'u8',\n      signedExtensions: 'Vec<Text>'\n    },\n    FunctionArgumentMetadataV11: 'FunctionArgumentMetadataV10',\n    FunctionMetadataV11: 'FunctionMetadataV10',\n    MapTypeV11: {\n      hasher: 'StorageHasherV11',\n      key: 'Type',\n      value: 'Type',\n      linked: 'bool'\n    },\n    MetadataV11: {\n      modules: 'Vec<ModuleMetadataV11>',\n      extrinsic: 'ExtrinsicMetadataV11'\n    },\n    ModuleConstantMetadataV11: 'ModuleConstantMetadataV10',\n    ModuleMetadataV11: {\n      name: 'Text',\n      storage: 'Option<StorageMetadataV11>',\n      calls: 'Option<Vec<FunctionMetadataV11>>',\n      events: 'Option<Vec<EventMetadataV11>>',\n      constants: 'Vec<ModuleConstantMetadataV11>',\n      errors: 'Vec<ErrorMetadataV11>'\n    },\n    StorageEntryModifierV11: 'StorageEntryModifierV10',\n    StorageEntryMetadataV11: {\n      name: 'Text',\n      modifier: 'StorageEntryModifierV11',\n      type: 'StorageEntryTypeV11',\n      fallback: 'Bytes',\n      documentation: 'Vec<Text>'\n    },\n    StorageEntryTypeV11: {\n      _enum: {\n        Plain: 'Type',\n        Map: 'MapTypeV11',\n        DoubleMap: 'DoubleMapTypeV11'\n      }\n    },\n    StorageMetadataV11: {\n      prefix: 'Text',\n      items: 'Vec<StorageEntryMetadataV11>'\n    },\n    StorageHasherV11: {\n      _enum: AllHashers\n    },\n    // v12\n    DoubleMapTypeV12: 'DoubleMapTypeV11',\n    ErrorMetadataV12: 'ErrorMetadataV11',\n    EventMetadataV12: 'EventMetadataV11',\n    ExtrinsicMetadataV12: 'ExtrinsicMetadataV11',\n    FunctionArgumentMetadataV12: 'FunctionArgumentMetadataV11',\n    FunctionMetadataV12: 'FunctionMetadataV11',\n    MapTypeV12: 'MapTypeV11',\n    MetadataV12: {\n      modules: 'Vec<ModuleMetadataV12>',\n      extrinsic: 'ExtrinsicMetadataV12'\n    },\n    ModuleConstantMetadataV12: 'ModuleConstantMetadataV11',\n    ModuleMetadataV12: {\n      name: 'Text',\n      storage: 'Option<StorageMetadataV12>',\n      calls: 'Option<Vec<FunctionMetadataV12>>',\n      events: 'Option<Vec<EventMetadataV12>>',\n      constants: 'Vec<ModuleConstantMetadataV12>',\n      errors: 'Vec<ErrorMetadataV12>',\n      index: 'u8'\n    },\n    StorageEntryModifierV12: 'StorageEntryModifierV11',\n    StorageEntryMetadataV12: 'StorageEntryMetadataV11',\n    StorageEntryTypeV12: 'StorageEntryTypeV11',\n    StorageMetadataV12: 'StorageMetadataV11',\n    StorageHasherV12: 'StorageHasherV11',\n    // This always maps to the latest\n    DoubleMapTypeLatest: 'DoubleMapTypeV12',\n    ErrorMetadataLatest: 'ErrorMetadataV12',\n    EventMetadataLatest: 'EventMetadataV12',\n    ExtrinsicMetadataLatest: 'ExtrinsicMetadataV12',\n    FunctionArgumentMetadataLatest: 'FunctionArgumentMetadataV12',\n    FunctionMetadataLatest: 'FunctionMetadataV12',\n    MapTypeLatest: 'MapTypeV12',\n    MetadataLatest: 'MetadataV12',\n    ModuleConstantMetadataLatest: 'ModuleConstantMetadataV12',\n    ModuleMetadataLatest: 'ModuleMetadataV12',\n    StorageEntryMetadataLatest: 'StorageEntryMetadataV12',\n    StorageEntryModifierLatest: 'StorageEntryModifierV12',\n    StorageEntryTypeLatest: 'StorageEntryTypeV12',\n    StorageMetadataLatest: 'StorageMetadataV12',\n    StorageHasher: 'StorageHasherV12',\n    // the enum containing all the mappings\n    MetadataAll: {\n      _enum: {\n        V0: 'DoNotConstruct<MetadataV0>',\n        V1: 'DoNotConstruct<MetadataV1>',\n        V2: 'DoNotConstruct<MetadataV2>',\n        V3: 'DoNotConstruct<MetadataV3>',\n        V4: 'DoNotConstruct<MetadataV4>',\n        V5: 'DoNotConstruct<MetadataV5>',\n        V6: 'DoNotConstruct<MetadataV6>',\n        V7: 'DoNotConstruct<MetadataV7>',\n        V8: 'DoNotConstruct<MetadataV8>',\n        // First version on Kusama in V9, dropping will be problematic\n        V9: 'MetadataV9',\n        V10: 'MetadataV10',\n        V11: 'MetadataV11',\n        V12: 'MetadataV12'\n      }\n    }\n  }\n};","map":{"version":3,"sources":["/Users/bmacer/substrate-node-template/substrate-front-end-template/node_modules/@polkadot/types/interfaces/metadata/definitions.mjs"],"names":["AllHashers","Blake2_128","Blake2_256","Blake2_128Concat","Twox128","Twox256","Twox64Concat","Identity","rpc","types","DoubleMapTypeV9","hasher","key1","key2","value","key2Hasher","ErrorMetadataV9","name","documentation","EventMetadataV9","args","FunctionArgumentMetadataV9","type","FunctionMetadataV9","MapTypeV9","key","linked","MetadataV9","modules","ModuleConstantMetadataV9","ModuleMetadataV9","storage","calls","events","constants","errors","StorageEntryMetadataV9","modifier","fallback","StorageEntryModifierV9","_enum","StorageEntryTypeV9","Plain","Map","DoubleMap","StorageHasherV9","StorageMetadataV9","prefix","items","DoubleMapTypeV10","ErrorMetadataV10","EventMetadataV10","FunctionArgumentMetadataV10","FunctionMetadataV10","MapTypeV10","MetadataV10","ModuleConstantMetadataV10","ModuleMetadataV10","StorageEntryModifierV10","StorageEntryMetadataV10","StorageEntryTypeV10","StorageMetadataV10","StorageHasherV10","DoubleMapTypeV11","ErrorMetadataV11","EventMetadataV11","ExtrinsicMetadataV11","version","signedExtensions","FunctionArgumentMetadataV11","FunctionMetadataV11","MapTypeV11","MetadataV11","extrinsic","ModuleConstantMetadataV11","ModuleMetadataV11","StorageEntryModifierV11","StorageEntryMetadataV11","StorageEntryTypeV11","StorageMetadataV11","StorageHasherV11","DoubleMapTypeV12","ErrorMetadataV12","EventMetadataV12","ExtrinsicMetadataV12","FunctionArgumentMetadataV12","FunctionMetadataV12","MapTypeV12","MetadataV12","ModuleConstantMetadataV12","ModuleMetadataV12","index","StorageEntryModifierV12","StorageEntryMetadataV12","StorageEntryTypeV12","StorageMetadataV12","StorageHasherV12","DoubleMapTypeLatest","ErrorMetadataLatest","EventMetadataLatest","ExtrinsicMetadataLatest","FunctionArgumentMetadataLatest","FunctionMetadataLatest","MapTypeLatest","MetadataLatest","ModuleConstantMetadataLatest","ModuleMetadataLatest","StorageEntryMetadataLatest","StorageEntryModifierLatest","StorageEntryTypeLatest","StorageMetadataLatest","StorageHasher","MetadataAll","V0","V1","V2","V3","V4","V5","V6","V7","V8","V9","V10","V11","V12"],"mappings":"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","sourcesContent":["// Copyright 2017-2021 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// order important in structs... :)\n\n/* eslint-disable sort-keys */\nconst AllHashers = {\n  Blake2_128: null,\n  // eslint-disable-line camelcase\n  Blake2_256: null,\n  // eslint-disable-line camelcase\n  Blake2_128Concat: null,\n  // eslint-disable-line camelcase\n  Twox128: null,\n  Twox256: null,\n  Twox64Concat: null,\n  // new in v11\n  Identity: null\n};\nexport { AllHashers };\nexport default {\n  rpc: {},\n  types: {\n    // v9\n    DoubleMapTypeV9: {\n      hasher: 'StorageHasherV9',\n      key1: 'Type',\n      key2: 'Type',\n      value: 'Type',\n      key2Hasher: 'StorageHasherV9'\n    },\n    ErrorMetadataV9: {\n      name: 'Text',\n      documentation: 'Vec<Text>'\n    },\n    EventMetadataV9: {\n      name: 'Text',\n      args: 'Vec<Type>',\n      documentation: 'Vec<Text>'\n    },\n    FunctionArgumentMetadataV9: {\n      name: 'Text',\n      type: 'Type'\n    },\n    FunctionMetadataV9: {\n      name: 'Text',\n      args: 'Vec<FunctionArgumentMetadataV9>',\n      documentation: 'Vec<Text>'\n    },\n    MapTypeV9: {\n      hasher: 'StorageHasherV9',\n      key: 'Type',\n      value: 'Type',\n      linked: 'bool'\n    },\n    MetadataV9: {\n      modules: 'Vec<ModuleMetadataV9>'\n    },\n    ModuleConstantMetadataV9: {\n      name: 'Text',\n      type: 'Type',\n      value: 'Bytes',\n      documentation: 'Vec<Text>'\n    },\n    ModuleMetadataV9: {\n      name: 'Text',\n      storage: 'Option<StorageMetadataV9>',\n      calls: 'Option<Vec<FunctionMetadataV9>>',\n      events: 'Option<Vec<EventMetadataV9>>',\n      constants: 'Vec<ModuleConstantMetadataV9>',\n      errors: 'Vec<ErrorMetadataV9>'\n    },\n    StorageEntryMetadataV9: {\n      name: 'Text',\n      modifier: 'StorageEntryModifierV9',\n      type: 'StorageEntryTypeV9',\n      fallback: 'Bytes',\n      documentation: 'Vec<Text>'\n    },\n    StorageEntryModifierV9: {\n      _enum: ['Optional', 'Default', 'Required']\n    },\n    StorageEntryTypeV9: {\n      _enum: {\n        Plain: 'Type',\n        Map: 'MapTypeV9',\n        DoubleMap: 'DoubleMapTypeV9'\n      }\n    },\n    StorageHasherV9: {\n      _enum: {\n        Blake2_128: null,\n        // eslint-disable-line camelcase\n        Blake2_256: null,\n        // eslint-disable-line camelcase\n        Twox128: null,\n        Twox256: null,\n        Twox64Concat: null\n      }\n    },\n    StorageMetadataV9: {\n      prefix: 'Text',\n      items: 'Vec<StorageEntryMetadataV9>'\n    },\n    // v10\n    DoubleMapTypeV10: {\n      hasher: 'StorageHasherV10',\n      key1: 'Type',\n      key2: 'Type',\n      value: 'Type',\n      key2Hasher: 'StorageHasherV10'\n    },\n    ErrorMetadataV10: 'ErrorMetadataV9',\n    EventMetadataV10: 'EventMetadataV9',\n    FunctionArgumentMetadataV10: 'FunctionArgumentMetadataV9',\n    FunctionMetadataV10: 'FunctionMetadataV9',\n    MapTypeV10: {\n      hasher: 'StorageHasherV10',\n      key: 'Type',\n      value: 'Type',\n      linked: 'bool'\n    },\n    MetadataV10: {\n      modules: 'Vec<ModuleMetadataV10>'\n    },\n    ModuleConstantMetadataV10: 'ModuleConstantMetadataV9',\n    ModuleMetadataV10: {\n      name: 'Text',\n      storage: 'Option<StorageMetadataV10>',\n      calls: 'Option<Vec<FunctionMetadataV10>>',\n      events: 'Option<Vec<EventMetadataV10>>',\n      constants: 'Vec<ModuleConstantMetadataV10>',\n      errors: 'Vec<ErrorMetadataV10>'\n    },\n    StorageEntryModifierV10: 'StorageEntryModifierV9',\n    StorageEntryMetadataV10: {\n      name: 'Text',\n      modifier: 'StorageEntryModifierV10',\n      type: 'StorageEntryTypeV10',\n      fallback: 'Bytes',\n      documentation: 'Vec<Text>'\n    },\n    StorageEntryTypeV10: {\n      _enum: {\n        Plain: 'Type',\n        Map: 'MapTypeV10',\n        DoubleMap: 'DoubleMapTypeV10'\n      }\n    },\n    StorageMetadataV10: {\n      prefix: 'Text',\n      items: 'Vec<StorageEntryMetadataV10>'\n    },\n    StorageHasherV10: {\n      _enum: {\n        Blake2_128: null,\n        // eslint-disable-line camelcase\n        Blake2_256: null,\n        // eslint-disable-line camelcase\n        Blake2_128Concat: null,\n        // eslint-disable-line camelcase\n        Twox128: null,\n        Twox256: null,\n        Twox64Concat: null\n      }\n    },\n    // v11\n    DoubleMapTypeV11: {\n      hasher: 'StorageHasherV11',\n      key1: 'Type',\n      key2: 'Type',\n      value: 'Type',\n      key2Hasher: 'StorageHasherV11'\n    },\n    ErrorMetadataV11: 'ErrorMetadataV10',\n    EventMetadataV11: 'EventMetadataV10',\n    ExtrinsicMetadataV11: {\n      version: 'u8',\n      signedExtensions: 'Vec<Text>'\n    },\n    FunctionArgumentMetadataV11: 'FunctionArgumentMetadataV10',\n    FunctionMetadataV11: 'FunctionMetadataV10',\n    MapTypeV11: {\n      hasher: 'StorageHasherV11',\n      key: 'Type',\n      value: 'Type',\n      linked: 'bool'\n    },\n    MetadataV11: {\n      modules: 'Vec<ModuleMetadataV11>',\n      extrinsic: 'ExtrinsicMetadataV11'\n    },\n    ModuleConstantMetadataV11: 'ModuleConstantMetadataV10',\n    ModuleMetadataV11: {\n      name: 'Text',\n      storage: 'Option<StorageMetadataV11>',\n      calls: 'Option<Vec<FunctionMetadataV11>>',\n      events: 'Option<Vec<EventMetadataV11>>',\n      constants: 'Vec<ModuleConstantMetadataV11>',\n      errors: 'Vec<ErrorMetadataV11>'\n    },\n    StorageEntryModifierV11: 'StorageEntryModifierV10',\n    StorageEntryMetadataV11: {\n      name: 'Text',\n      modifier: 'StorageEntryModifierV11',\n      type: 'StorageEntryTypeV11',\n      fallback: 'Bytes',\n      documentation: 'Vec<Text>'\n    },\n    StorageEntryTypeV11: {\n      _enum: {\n        Plain: 'Type',\n        Map: 'MapTypeV11',\n        DoubleMap: 'DoubleMapTypeV11'\n      }\n    },\n    StorageMetadataV11: {\n      prefix: 'Text',\n      items: 'Vec<StorageEntryMetadataV11>'\n    },\n    StorageHasherV11: {\n      _enum: AllHashers\n    },\n    // v12\n    DoubleMapTypeV12: 'DoubleMapTypeV11',\n    ErrorMetadataV12: 'ErrorMetadataV11',\n    EventMetadataV12: 'EventMetadataV11',\n    ExtrinsicMetadataV12: 'ExtrinsicMetadataV11',\n    FunctionArgumentMetadataV12: 'FunctionArgumentMetadataV11',\n    FunctionMetadataV12: 'FunctionMetadataV11',\n    MapTypeV12: 'MapTypeV11',\n    MetadataV12: {\n      modules: 'Vec<ModuleMetadataV12>',\n      extrinsic: 'ExtrinsicMetadataV12'\n    },\n    ModuleConstantMetadataV12: 'ModuleConstantMetadataV11',\n    ModuleMetadataV12: {\n      name: 'Text',\n      storage: 'Option<StorageMetadataV12>',\n      calls: 'Option<Vec<FunctionMetadataV12>>',\n      events: 'Option<Vec<EventMetadataV12>>',\n      constants: 'Vec<ModuleConstantMetadataV12>',\n      errors: 'Vec<ErrorMetadataV12>',\n      index: 'u8'\n    },\n    StorageEntryModifierV12: 'StorageEntryModifierV11',\n    StorageEntryMetadataV12: 'StorageEntryMetadataV11',\n    StorageEntryTypeV12: 'StorageEntryTypeV11',\n    StorageMetadataV12: 'StorageMetadataV11',\n    StorageHasherV12: 'StorageHasherV11',\n    // This always maps to the latest\n    DoubleMapTypeLatest: 'DoubleMapTypeV12',\n    ErrorMetadataLatest: 'ErrorMetadataV12',\n    EventMetadataLatest: 'EventMetadataV12',\n    ExtrinsicMetadataLatest: 'ExtrinsicMetadataV12',\n    FunctionArgumentMetadataLatest: 'FunctionArgumentMetadataV12',\n    FunctionMetadataLatest: 'FunctionMetadataV12',\n    MapTypeLatest: 'MapTypeV12',\n    MetadataLatest: 'MetadataV12',\n    ModuleConstantMetadataLatest: 'ModuleConstantMetadataV12',\n    ModuleMetadataLatest: 'ModuleMetadataV12',\n    StorageEntryMetadataLatest: 'StorageEntryMetadataV12',\n    StorageEntryModifierLatest: 'StorageEntryModifierV12',\n    StorageEntryTypeLatest: 'StorageEntryTypeV12',\n    StorageMetadataLatest: 'StorageMetadataV12',\n    StorageHasher: 'StorageHasherV12',\n    // the enum containing all the mappings\n    MetadataAll: {\n      _enum: {\n        V0: 'DoNotConstruct<MetadataV0>',\n        V1: 'DoNotConstruct<MetadataV1>',\n        V2: 'DoNotConstruct<MetadataV2>',\n        V3: 'DoNotConstruct<MetadataV3>',\n        V4: 'DoNotConstruct<MetadataV4>',\n        V5: 'DoNotConstruct<MetadataV5>',\n        V6: 'DoNotConstruct<MetadataV6>',\n        V7: 'DoNotConstruct<MetadataV7>',\n        V8: 'DoNotConstruct<MetadataV8>',\n        // First version on Kusama in V9, dropping will be problematic\n        V9: 'MetadataV9',\n        V10: 'MetadataV10',\n        V11: 'MetadataV11',\n        V12: 'MetadataV12'\n      }\n    }\n  }\n};"]},"metadata":{},"sourceType":"module"}